@org=$4000

; Loading screen
;
; #UDGTABLE
; { #SCR(loading) | The Hobbit Loading Screen. }
; TABLE#
@label=Loading
b$4000 DEFB $01,$07,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$06,$00,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {Pixels
 $4020 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$FC,$1F,$03,$F0,$7B,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$7F,$FE,$00,$00,$00 ;
 $4040 DEFB $00,$00,$00,$70,$78,$00,$00,$00,$00,$00,$00,$07,$07,$F0,$1F,$3B,$F7,$E7,$00,$00,$00,$00,$00,$00,$00,$07,$80,$00,$00,$00,$00,$00 ;
 $4060 DEFB $00,$E0,$00,$00,$00,$03,$80,$03,$E0,$30,$C0,$00,$07,$F0,$1F,$03,$F0,$7F,$C0,$00,$00,$0C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4080 DEFB $00,$00,$00,$00,$00,$00,$03,$F8,$11,$FC,$08,$1F,$00,$3F,$83,$C0,$0F,$E0,$F0,$00,$03,$A0,$01,$FC,$00,$00,$00,$FF,$F8,$00,$00,$00 ;
 $40A0 DEFB $00,$00,$00,$00,$00,$7C,$01,$FE,$00,$FF,$03,$00,$F0,$1F,$E0,$03,$C7,$F8,$00,$F0,$03,$80,$10,$FF,$0F,$80,$00,$00,$00,$00,$00,$00 ;
 $40C0 DEFB $00,$04,$00,$00,$00,$00,$0D,$FE,$38,$FF,$3E,$10,$0F,$9F,$EF,$C0,$07,$FB,$F0,$00,$7F,$F0,$7F,$FF,$00,$03,$00,$00,$00,$00,$00,$00 ;
 $40E0 DEFB $00,$00,$00,$00,$00,$03,$01,$FE,$10,$FF,$1F,$E6,$07,$1F,$E0,$0F,$07,$F8,$03,$C0,$7F,$F0,$04,$FF,$00,$00,$00,$C0,$00,$00,$00,$00 ;
 $4100 DEFB $03,$08,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$1E,$03,$C0,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4120 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$F8,$1F,$03,$F0,$F1,$F0,$00,$00,$00,$00,$00,$00,$00,$01,$C0,$00,$00,$00,$00 ;
 $4140 DEFB $00,$00,$03,$C0,$08,$00,$00,$00,$00,$20,$40,$06,$07,$F0,$1F,$3B,$F3,$FE,$0E,$00,$00,$00,$00,$00,$00,$1C,$00,$00,$00,$00,$00,$00 ;
 $4160 DEFB $07,$80,$00,$00,$00,$00,$F0,$7E,$00,$20,$40,$00,$07,$F0,$1F,$03,$F0,$3F,$80,$00,$00,$18,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4180 DEFB $00,$00,$00,$00,$00,$00,$07,$F8,$33,$FC,$08,$3F,$80,$7F,$87,$E0,$1F,$E1,$F8,$00,$03,$E0,$03,$FC,$00,$00,$00,$00,$0F,$FF,$FC,$00 ;
 $41A0 DEFB $00,$00,$00,$00,$01,$C0,$01,$FE,$00,$FF,$07,$80,$F8,$1F,$E0,$01,$E7,$F8,$00,$78,$01,$10,$10,$FF,$3F,$80,$00,$00,$00,$00,$00,$00 ;
 $41C0 DEFB $00,$3C,$00,$00,$00,$00,$19,$FE,$7C,$FF,$3E,$10,$0F,$9F,$FF,$80,$07,$FF,$E0,$00,$3F,$F0,$7F,$FF,$00,$01,$C0,$00,$00,$00,$00,$00 ;
 $41E0 DEFB $00,$00,$00,$00,$00,$0E,$01,$FE,$10,$FF,$0F,$E2,$0E,$1F,$E0,$07,$87,$F8,$01,$E0,$5F,$F0,$04,$FF,$00,$00,$00,$70,$00,$00,$00,$00 ;
 $4200 DEFB $01,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1F,$3F,$07,$E0,$07,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4220 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$FF,$F0,$1F,$03,$F1,$E1,$F0,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00 ;
 $4240 DEFB $00,$00,$06,$00,$08,$00,$00,$00,$00,$30,$C0,$00,$07,$F0,$1F,$13,$F3,$FC,$1E,$00,$00,$00,$00,$00,$01,$F0,$00,$00,$00,$00,$00,$00 ;
 $4260 DEFB $3C,$00,$00,$00,$00,$00,$1F,$C0,$00,$60,$60,$00,$07,$F0,$1F,$03,$F0,$3F,$80,$00,$00,$10,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4280 DEFB $00,$00,$00,$00,$00,$00,$0F,$FC,$27,$FE,$0C,$27,$80,$FF,$CE,$F0,$3F,$F3,$BC,$00,$07,$C0,$07,$FE,$00,$00,$00,$00,$00,$00,$07,$FE ;
 $42A0 DEFB $00,$00,$00,$00,$3F,$00,$01,$FE,$00,$FF,$06,$80,$78,$1F,$E0,$00,$F7,$F8,$00,$3C,$00,$70,$10,$FF,$FF,$80,$00,$00,$00,$00,$00,$00 ;
 $42C0 DEFB $00,$00,$00,$00,$00,$00,$11,$FE,$7C,$FF,$7F,$10,$07,$DF,$FF,$C0,$07,$FF,$F0,$00,$1F,$F0,$7F,$FF,$00,$00,$60,$00,$00,$00,$00,$00 ;
 $42E0 DEFB $00,$00,$00,$00,$00,$08,$01,$FE,$02,$FF,$0F,$F2,$0E,$1F,$E0,$03,$C7,$F8,$00,$F0,$5F,$F0,$06,$FF,$00,$00,$00,$10,$00,$00,$00,$00 ;
 $4300 DEFB $01,$24,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$7F,$0F,$E0,$0F,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4320 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$FF,$F0,$1F,$03,$F1,$C0,$E0,$00,$00,$00,$00,$00,$00,$00,$07,$00,$00,$00,$00,$00 ;
 $4340 DEFB $00,$00,$1C,$00,$0E,$00,$00,$00,$00,$3F,$C0,$00,$07,$F0,$1F,$03,$F1,$F8,$3C,$00,$00,$00,$00,$00,$1F,$00,$00,$00,$00,$00,$00,$00 ;
 $4360 DEFB $60,$00,$00,$00,$00,$00,$00,$00,$00,$C0,$20,$00,$07,$F0,$1F,$03,$F0,$1F,$00,$00,$00,$10,$30,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4380 DEFB $00,$00,$00,$00,$00,$00,$0F,$FC,$67,$FE,$04,$67,$C0,$FF,$CC,$78,$3F,$F3,$1E,$00,$07,$C0,$47,$FF,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $43A0 DEFB $00,$00,$00,$01,$E0,$00,$01,$FE,$00,$FF,$06,$C0,$7C,$1F,$E0,$00,$F7,$F8,$00,$3C,$03,$F0,$10,$FF,$FF,$80,$00,$00,$00,$00,$00,$00 ;
 $43C0 DEFB $00,$00,$00,$00,$00,$00,$31,$FE,$FE,$FF,$7F,$10,$03,$DF,$E0,$E0,$07,$F8,$78,$00,$1F,$F0,$7C,$FF,$00,$00,$30,$00,$00,$00,$00,$00 ;
 $43E0 DEFB $00,$00,$00,$00,$00,$18,$01,$FE,$06,$FF,$07,$F3,$1C,$1F,$E0,$01,$E7,$F8,$00,$78,$5F,$F0,$02,$FF,$00,$00,$00,$1C,$00,$00,$00,$00 ;
 $4400 DEFB $03,$AF,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$7F,$0F,$F0,$0F,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4420 DEFB $00,$00,$00,$01,$00,$00,$08,$00,$00,$00,$00,$07,$FF,$F0,$1F,$13,$F3,$C0,$E0,$00,$00,$00,$00,$00,$00,$00,$1C,$00,$00,$00,$00,$00 ;
 $4440 DEFB $00,$00,$78,$00,$03,$80,$00,$00,$00,$60,$80,$00,$07,$F0,$1F,$03,$F1,$F8,$38,$00,$80,$06,$00,$00,$10,$00,$00,$00,$00,$00,$00,$00 ;
 $4460 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$80,$20,$00,$07,$F0,$1E,$03,$C0,$1E,$00,$00,$00,$10,$18,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4480 DEFB $00,$00,$00,$00,$00,$00,$07,$FE,$43,$FF,$04,$C3,$C0,$7F,$F8,$3C,$1F,$FE,$0F,$00,$0F,$E0,$63,$FF,$C0,$00,$00,$00,$00,$00,$00,$00 ;
 $44A0 DEFB $00,$00,$00,$3F,$00,$00,$01,$FE,$00,$FF,$0E,$40,$3C,$1F,$E0,$07,$E7,$F8,$01,$F8,$0F,$F0,$08,$FF,$FC,$F0,$00,$00,$00,$00,$00,$00 ;
 $44C0 DEFB $00,$00,$00,$00,$00,$00,$61,$FE,$7C,$FF,$7F,$98,$03,$DF,$E0,$F0,$07,$F8,$3C,$00,$1F,$F0,$78,$FF,$00,$00,$1C,$00,$00,$00,$00,$00 ;
 $44E0 DEFB $00,$00,$00,$00,$00,$10,$01,$FE,$04,$FF,$07,$F9,$1C,$1F,$E0,$00,$F7,$F8,$00,$3C,$DF,$F0,$03,$FF,$00,$00,$00,$04,$00,$00,$00,$00 ;
 $4500 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$FF,$3F,$07,$F0,$1F,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$FF ;
 $4520 DEFB $00,$00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$07,$FF,$F0,$1F,$3B,$F7,$C1,$C0,$00,$00,$00,$00,$00,$00,$00,$70,$00,$00,$00,$00,$00 ;
 $4540 DEFB $00,$01,$C0,$00,$00,$F0,$00,$00,$01,$C0,$80,$00,$07,$F0,$1F,$03,$F0,$FC,$70,$00,$80,$07,$F8,$0F,$F0,$00,$00,$00,$00,$00,$00,$00 ;
 $4560 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$07,$80,$30,$00,$07,$80,$18,$03,$00,$0C,$00,$00,$00,$10,$0E,$00,$0E,$00,$00,$00,$00,$00,$00,$00 ;
 $4580 DEFB $00,$00,$00,$00,$00,$00,$47,$FF,$C3,$FF,$06,$83,$E0,$7F,$F8,$1E,$1F,$FE,$07,$80,$07,$C0,$23,$FF,$60,$00,$00,$00,$00,$00,$00,$00 ;
 $45A0 DEFB $00,$00,$01,$E0,$00,$00,$01,$FE,$10,$FF,$0C,$60,$3E,$1F,$E0,$1F,$87,$F8,$07,$E0,$3F,$F0,$08,$FF,$F0,$1C,$00,$00,$00,$00,$00,$00 ;
 $45C0 DEFB $00,$00,$00,$00,$00,$00,$C1,$FE,$7C,$FF,$3F,$88,$03,$9F,$E0,$78,$07,$F8,$1E,$00,$1F,$F0,$74,$FF,$00,$00,$06,$00,$00,$00,$00,$00 ;
 $45E0 DEFB $00,$00,$00,$00,$00,$30,$01,$FE,$04,$FF,$03,$F9,$B8,$1F,$E0,$00,$F7,$F8,$00,$3C,$9F,$F0,$00,$FF,$00,$00,$00,$06,$00,$00,$00,$00 ;
 $4600 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$FF,$3F,$07,$F0,$3F,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$FF,$FE,$00 ;
 $4620 DEFB $00,$00,$00,$05,$00,$00,$00,$00,$00,$00,$00,$07,$F7,$F0,$1F,$3B,$F7,$C1,$80,$00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00,$00 ;
 $4640 DEFB $00,$0F,$00,$00,$00,$18,$00,$00,$07,$00,$80,$00,$07,$F0,$1F,$03,$F0,$FC,$F0,$00,$00,$04,$0F,$F8,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4660 DEFB $00,$00,$00,$00,$00,$00,$00,$30,$0C,$18,$18,$00,$06,$03,$10,$02,$00,$CC,$00,$00,$00,$30,$03,$98,$03,$F8,$00,$00,$00,$00,$00,$00 ;
 $4680 DEFB $00,$00,$00,$00,$00,$01,$C3,$FF,$01,$FF,$03,$81,$E0,$3F,$E0,$0F,$0F,$F8,$03,$C0,$07,$C0,$21,$FF,$20,$00,$00,$00,$00,$00,$00,$00 ;
 $46A0 DEFB $00,$00,$3F,$00,$00,$00,$03,$FE,$10,$FF,$1C,$20,$1F,$1F,$E0,$7C,$07,$F8,$1F,$01,$FF,$F0,$0F,$FF,$C0,$06,$00,$00,$00,$00,$00,$00 ;
 $46C0 DEFB $00,$00,$00,$00,$00,$00,$81,$FE,$38,$FF,$3F,$CC,$03,$9F,$E0,$3C,$07,$F8,$0F,$00,$3F,$F0,$64,$FF,$00,$00,$03,$80,$00,$00,$00,$00 ;
 $46E0 DEFB $00,$00,$00,$00,$00,$60,$01,$FE,$0C,$FF,$03,$FC,$B0,$1F,$E0,$07,$E7,$F8,$01,$F8,$9F,$F0,$00,$FF,$00,$00,$00,$03,$80,$00,$00,$00 ;
 $4700 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0F,$FF,$1F,$03,$F0,$3B,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$00,$00,$00 ;
 $4720 DEFB $00,$00,$00,$19,$C0,$00,$00,$00,$00,$00,$00,$07,$C7,$F0,$1F,$7F,$F7,$E3,$00,$00,$00,$00,$00,$00,$00,$00,$C0,$00,$00,$00,$00,$00 ;
 $4740 DEFB $00,$38,$00,$00,$00,$0E,$00,$00,$3C,$00,$80,$00,$07,$F0,$1F,$03,$F0,$7E,$E0,$00,$00,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4760 DEFB $00,$00,$00,$00,$00,$00,$00,$F0,$18,$78,$08,$0E,$04,$0F,$03,$80,$03,$C0,$E0,$00,$01,$20,$00,$F8,$00,$0F,$FF,$80,$00,$00,$00,$00 ;
 $4780 DEFB $00,$00,$00,$00,$00,$07,$03,$FE,$01,$FF,$03,$81,$F0,$3F,$E0,$07,$8F,$F8,$01,$E0,$03,$80,$31,$FF,$39,$80,$00,$00,$00,$00,$00,$00 ;
 $47A0 DEFB $00,$07,$E0,$00,$00,$00,$07,$FE,$38,$FF,$1C,$30,$1F,$1F,$E3,$F0,$07,$F8,$FC,$01,$FF,$F0,$1F,$FF,$00,$02,$00,$00,$00,$00,$00,$00 ;
 $47C0 DEFB $00,$00,$00,$00,$00,$01,$81,$FE,$38,$FF,$1F,$C4,$07,$1F,$E0,$1E,$07,$F8,$07,$80,$3F,$F0,$44,$FF,$00,$00,$00,$80,$00,$00,$00,$00 ;
 $47E0 DEFB $00,$00,$00,$00,$00,$40,$01,$FE,$08,$FF,$01,$FC,$F0,$1F,$E0,$1F,$87,$F8,$07,$E0,$9F,$F0,$00,$FF,$00,$00,$00,$00,$E0,$00,$00,$00 ;
 $4800 DEFB $00,$00,$00,$00,$00,$C0,$01,$FE,$08,$FF,$00,$FE,$70,$1F,$E0,$7C,$07,$F8,$1F,$00,$9F,$F0,$00,$FF,$00,$00,$00,$00,$38,$00,$00,$00 ;
 $4820 DEFB $00,$00,$00,$03,$80,$00,$00,$00,$08,$00,$00,$00,$18,$00,$00,$00,$00,$00,$00,$04,$00,$00,$00,$18,$00,$00,$00,$00,$00,$30,$00,$00 ;
 $4840 DEFB $00,$00,$00,$60,$00,$00,$00,$00,$04,$00,$00,$00,$00,$60,$00,$0C,$10,$00,$06,$80,$00,$00,$00,$02,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4860 DEFB $00,$00,$10,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$00,$21,$00,$48,$00,$20,$47,$02,$80,$00,$00,$00,$F0,$00,$00,$00,$1C,$00,$80 ;
 $4880 DEFB $38,$00,$00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00,$40,$03,$C3,$03,$10,$40,$00,$8E,$00,$00,$D8,$00,$00,$00,$00,$00,$00,$00 ;
 $48A0 DEFB $00,$60,$E0,$00,$00,$00,$00,$3C,$00,$40,$00,$00,$00,$04,$04,$00,$80,$1F,$00,$84,$07,$07,$00,$00,$00,$00,$00,$00,$00,$03,$FE,$00 ;
 $48C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$1C,$07,$80,$07,$E0,$20,$01,$80,$01,$F0,$00,$05,$C0,$00,$10,$00,$00,$00,$00,$00,$00,$7F,$F8,$00 ;
 $48E0 DEFB $00,$00,$00,$0F,$80,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$2C,$18,$01,$C0,$C0,$00,$01,$F0,$00,$00,$00,$00,$00,$00,$1F,$FC,$00 ;
 $4900 DEFB $00,$00,$00,$00,$01,$80,$01,$FE,$08,$FF,$00,$FE,$E0,$1F,$E3,$F0,$07,$F8,$FC,$01,$9F,$F0,$00,$FF,$00,$00,$00,$00,$08,$00,$00,$00 ;
 $4920 DEFB $00,$00,$00,$06,$00,$00,$00,$00,$08,$00,$00,$00,$08,$00,$00,$00,$00,$1C,$00,$0C,$00,$00,$00,$08,$00,$00,$00,$00,$00,$18,$00,$00 ;
 $4940 DEFB $00,$00,$00,$40,$00,$00,$00,$00,$04,$00,$00,$00,$00,$30,$00,$18,$10,$00,$03,$80,$00,$00,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4960 DEFB $00,$00,$10,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$00,$37,$00,$4C,$00,$20,$66,$02,$C0,$00,$00,$00,$80,$00,$00,$00,$07,$07,$80 ;
 $4980 DEFB $08,$00,$00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00,$C0,$02,$01,$86,$10,$40,$00,$98,$00,$00,$50,$00,$00,$00,$00,$00,$00,$00 ;
 $49A0 DEFB $00,$20,$C0,$00,$00,$00,$00,$07,$00,$40,$00,$00,$00,$04,$04,$00,$84,$07,$00,$04,$03,$0C,$80,$00,$00,$00,$00,$00,$00,$00,$FF,$00 ;
 $49C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$06,$0C,$00,$00,$3C,$60,$00,$80,$00,$00,$3E,$00,$00,$00,$0C,$00,$10,$00,$00,$00,$00,$7F,$E0,$00 ;
 $49E0 DEFB $00,$00,$00,$1F,$80,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$F8,$04,$06,$00,$63,$E0,$1F,$00,$00,$00,$00,$00,$00,$00,$0F,$FC,$00 ;
 $4A00 DEFB $00,$00,$00,$00,$07,$00,$01,$FF,$08,$FF,$80,$FF,$E0,$1F,$EF,$C0,$07,$FB,$F0,$01,$1F,$F0,$00,$FF,$00,$00,$00,$00,$0C,$00,$00,$00 ;
 $4A20 DEFB $00,$00,$00,$04,$00,$00,$00,$00,$08,$00,$00,$00,$0C,$00,$00,$00,$01,$F4,$00,$08,$00,$00,$00,$08,$00,$00,$00,$00,$00,$0C,$00,$00 ;
 $4A40 DEFB $00,$00,$01,$C0,$00,$00,$00,$00,$04,$00,$00,$00,$00,$10,$00,$30,$30,$00,$03,$00,$00,$00,$00,$01,$00,$00,$00,$7F,$C0,$00,$00,$00 ;
 $4A60 DEFB $00,$00,$30,$00,$00,$00,$00,$00,$03,$80,$00,$00,$00,$00,$1C,$00,$44,$00,$60,$3E,$06,$40,$00,$00,$00,$80,$00,$00,$00,$01,$8C,$00 ;
 $4A80 DEFB $0C,$00,$00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$01,$80,$02,$00,$C4,$1F,$C0,$00,$B0,$00,$00,$70,$00,$00,$00,$00,$00,$70,$00 ;
 $4AA0 DEFB $00,$31,$80,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$0C,$04,$00,$82,$01,$01,$02,$03,$00,$C0,$00,$00,$00,$00,$00,$00,$01,$FF,$00 ;
 $4AC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$02,$18,$00,$00,$07,$C0,$00,$80,$00,$00,$C1,$80,$00,$00,$04,$00,$00,$00,$00,$00,$00,$7F,$E0,$00 ;
 $4AE0 DEFB $00,$00,$00,$1F,$80,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$91,$C6,$00,$00,$0C,$18,$F0,$00,$00,$00,$00,$00,$00,$00,$07,$FE,$00 ;
 $4B00 DEFB $00,$00,$00,$00,$04,$00,$01,$FF,$08,$FF,$80,$7F,$C0,$1F,$FE,$00,$07,$FF,$C0,$01,$1F,$F0,$00,$FF,$00,$00,$00,$00,$06,$00,$00,$00 ;
 $4B20 DEFB $00,$00,$00,$04,$00,$00,$00,$00,$08,$00,$00,$00,$06,$00,$00,$00,$07,$07,$00,$18,$00,$00,$00,$0C,$00,$00,$00,$00,$00,$07,$00,$00 ;
 $4B40 DEFB $00,$00,$01,$00,$00,$00,$00,$00,$06,$00,$00,$00,$00,$1C,$00,$20,$30,$00,$01,$80,$01,$00,$00,$01,$00,$00,$1F,$C0,$40,$00,$00,$00 ;
 $4B60 DEFB $00,$00,$20,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$04,$00,$44,$00,$60,$32,$04,$C0,$00,$00,$03,$80,$00,$00,$00,$00,$98,$00 ;
 $4B80 DEFB $04,$00,$00,$7F,$FF,$F8,$00,$00,$00,$40,$00,$00,$00,$01,$0C,$12,$00,$7C,$00,$00,$00,$A3,$C0,$00,$00,$00,$00,$00,$00,$01,$D8,$00 ;
 $4BA0 DEFB $00,$1F,$00,$00,$00,$00,$00,$01,$80,$00,$00,$00,$00,$18,$04,$00,$82,$00,$00,$02,$03,$00,$40,$00,$00,$00,$00,$00,$00,$03,$FF,$00 ;
 $4BC0 DEFB $00,$00,$00,$07,$00,$00,$00,$00,$03,$30,$00,$00,$00,$40,$0F,$80,$00,$03,$00,$60,$00,$00,$02,$00,$00,$00,$00,$00,$00,$7F,$E0,$00 ;
 $4BE0 DEFB $00,$00,$00,$1F,$80,$02,$00,$00,$00,$00,$00,$00,$03,$00,$00,$93,$F1,$00,$00,$08,$0C,$20,$00,$00,$00,$00,$00,$00,$00,$03,$FE,$00 ;
 $4C00 DEFB $00,$00,$00,$00,$7C,$00,$01,$F8,$08,$FC,$00,$3F,$E0,$1F,$F8,$00,$07,$FE,$00,$03,$1F,$E0,$00,$FE,$00,$00,$00,$00,$03,$80,$00,$00 ;
 $4C20 DEFB $00,$00,$00,$1C,$00,$00,$00,$00,$08,$00,$00,$00,$03,$00,$00,$00,$1C,$01,$F0,$30,$00,$00,$00,$04,$00,$00,$00,$00,$00,$01,$00,$00 ;
 $4C40 DEFB $00,$00,$01,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$06,$00,$60,$30,$00,$00,$80,$01,$00,$00,$01,$00,$03,$F0,$00,$7F,$00,$00,$00 ;
 $4C60 DEFB $00,$00,$60,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$1C,$02,$44,$00,$60,$36,$04,$80,$0F,$80,$02,$00,$00,$00,$00,$00,$F0,$00 ;
 $4C80 DEFB $06,$00,$00,$C0,$00,$0F,$C0,$00,$00,$40,$00,$00,$00,$01,$0E,$1E,$00,$00,$00,$00,$00,$FC,$3C,$00,$00,$00,$00,$00,$00,$03,$F8,$00 ;
 $4CA0 DEFB $00,$04,$00,$00,$00,$00,$40,$00,$C0,$00,$00,$00,$00,$10,$06,$00,$83,$00,$00,$82,$03,$00,$40,$00,$00,$00,$01,$00,$00,$07,$FF,$00 ;
 $4CC0 DEFB $00,$00,$00,$07,$00,$00,$00,$00,$01,$60,$00,$00,$00,$40,$38,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00,$7F,$F0,$00 ;
 $4CE0 DEFB $00,$00,$00,$3F,$80,$06,$00,$00,$03,$E0,$00,$00,$02,$00,$00,$97,$F0,$80,$00,$10,$64,$20,$00,$00,$00,$00,$00,$00,$00,$03,$FE,$00 ;
 $4D00 DEFB $00,$00,$00,$00,$40,$00,$03,$E0,$09,$F0,$00,$3F,$30,$3F,$C0,$00,$0F,$F0,$00,$02,$1F,$80,$00,$F8,$00,$00,$00,$00,$00,$C0,$00,$00 ;
 $4D20 DEFB $00,$00,$00,$10,$00,$00,$00,$00,$0C,$00,$00,$00,$01,$80,$00,$00,$F0,$00,$18,$60,$00,$00,$00,$06,$00,$00,$00,$00,$00,$01,$C0,$00 ;
 $4D40 DEFB $00,$00,$0F,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$02,$00,$40,$30,$00,$00,$80,$01,$00,$00,$01,$80,$06,$00,$00,$01,$C0,$00,$02 ;
 $4D60 DEFB $00,$00,$C0,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$30,$02,$46,$00,$F0,$64,$0C,$80,$38,$F0,$0E,$00,$00,$00,$00,$00,$00,$00 ;
 $4D80 DEFB $03,$80,$07,$00,$00,$00,$7C,$00,$00,$40,$00,$00,$00,$03,$0B,$90,$06,$00,$00,$01,$C0,$80,$78,$00,$00,$00,$00,$00,$00,$03,$FC,$00 ;
 $4DA0 DEFB $00,$04,$00,$00,$00,$00,$00,$00,$60,$00,$07,$C0,$00,$10,$02,$00,$C3,$01,$00,$C3,$03,$3C,$60,$00,$00,$00,$03,$00,$00,$07,$FE,$00 ;
 $4DC0 DEFB $00,$00,$00,$07,$80,$00,$00,$00,$01,$C0,$00,$00,$00,$C0,$20,$00,$00,$00,$00,$00,$00,$00,$01,$80,$00,$00,$00,$00,$00,$3F,$F8,$00 ;
 $4DE0 DEFB $00,$00,$00,$7F,$80,$0F,$00,$00,$3F,$F8,$00,$00,$06,$00,$00,$97,$F8,$60,$00,$21,$F6,$20,$00,$00,$00,$00,$00,$00,$00,$00,$FE,$00 ;
 $4E00 DEFB $00,$00,$00,$00,$C0,$00,$03,$80,$09,$C0,$00,$1F,$10,$3F,$00,$00,$0F,$C0,$00,$06,$1C,$00,$00,$F0,$00,$00,$00,$00,$00,$40,$00,$00 ;
 $4E20 DEFB $00,$00,$00,$30,$00,$00,$00,$00,$04,$00,$00,$00,$00,$C0,$00,$03,$80,$00,$08,$40,$00,$00,$00,$02,$00,$00,$00,$00,$00,$00,$40,$00 ;
 $4E40 DEFB $00,$00,$08,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$03,$00,$C0,$78,$00,$00,$81,$03,$80,$00,$00,$80,$1C,$00,$00,$00,$60,$00,$3E ;
 $4E60 DEFB $00,$00,$80,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$20,$02,$42,$00,$90,$44,$08,$81,$E0,$1E,$08,$00,$00,$00,$00,$00,$00,$00 ;
 $4E80 DEFB $00,$80,$0C,$00,$00,$00,$07,$00,$00,$40,$00,$00,$00,$02,$08,$D0,$3F,$80,$00,$1E,$F1,$01,$E0,$00,$00,$00,$00,$00,$00,$03,$FE,$00 ;
 $4EA0 DEFB $00,$00,$01,$00,$00,$00,$00,$00,$20,$00,$3C,$40,$00,$30,$03,$00,$C0,$01,$00,$E0,$07,$C3,$20,$00,$00,$00,$00,$00,$00,$1F,$FC,$00 ;
 $4EC0 DEFB $00,$00,$00,$0F,$80,$00,$00,$00,$00,$00,$00,$00,$00,$80,$7F,$00,$00,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$00,$3F,$FC,$00 ;
 $4EE0 DEFB $00,$00,$00,$7F,$80,$02,$00,$01,$FF,$C4,$00,$00,$04,$00,$00,$C1,$F8,$38,$00,$42,$72,$3F,$C0,$00,$00,$00,$00,$00,$00,$00,$7F,$00 ;
 $4F00 DEFB $00,$00,$00,$00,$80,$00,$03,$00,$09,$80,$00,$0E,$10,$3C,$00,$00,$0F,$00,$00,$04,$10,$00,$00,$90,$00,$00,$00,$00,$00,$60,$00,$00 ;
 $4F20 DEFB $00,$00,$00,$20,$00,$00,$00,$00,$04,$00,$00,$00,$00,$40,$00,$06,$00,$00,$0C,$C0,$00,$00,$00,$02,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $4F40 DEFB $00,$00,$18,$00,$00,$00,$00,$00,$02,$00,$00,$00,$00,$01,$E1,$80,$48,$00,$00,$C1,$02,$80,$00,$00,$80,$10,$00,$00,$00,$30,$00,$E0 ;
 $4F60 DEFB $60,$00,$00,$00,$00,$00,$00,$00,$00,$C0,$00,$00,$00,$00,$60,$03,$42,$00,$90,$47,$F8,$83,$00,$03,$98,$00,$00,$00,$00,$00,$00,$00 ;
 $4F80 DEFB $00,$C0,$30,$00,$00,$00,$01,$E0,$00,$40,$00,$00,$00,$06,$0C,$70,$FF,$C0,$00,$3F,$F8,$07,$80,$00,$00,$00,$00,$00,$00,$07,$FE,$00 ;
 $4FA0 DEFB $00,$00,$01,$00,$00,$00,$00,$00,$30,$00,$E0,$7C,$00,$20,$01,$00,$F0,$03,$00,$F0,$0E,$00,$E0,$00,$00,$00,$00,$00,$00,$7F,$FC,$00 ;
 $4FC0 DEFB $00,$00,$00,$0F,$80,$00,$00,$00,$00,$00,$00,$00,$01,$80,$01,$E7,$F0,$00,$3F,$00,$00,$00,$1F,$80,$00,$00,$00,$00,$00,$1F,$FC,$00 ;
 $4FE0 DEFB $00,$00,$00,$FF,$80,$00,$00,$03,$FC,$00,$00,$00,$04,$00,$01,$00,$38,$00,$00,$00,$72,$18,$7E,$00,$00,$00,$00,$00,$38,$00,$7F,$00 ;
 $5000 DEFB $00,$00,$07,$FF,$C0,$00,$00,$0F,$F0,$00,$00,$00,$04,$00,$0F,$C0,$00,$00,$00,$00,$00,$08,$07,$00,$00,$00,$1C,$00,$78,$00,$7F,$00 ;
 $5020 DEFB $00,$00,$FC,$00,$F0,$00,$07,$F8,$01,$00,$00,$00,$08,$06,$00,$7B,$04,$18,$07,$F8,$DC,$61,$00,$00,$00,$00,$00,$00,$00,$07,$80,$00 ;
 $5040 DEFB $00,$03,$00,$00,$FC,$00,$07,$F8,$00,$00,$00,$00,$20,$00,$00,$40,$0C,$01,$FC,$00,$FF,$FF,$FF,$FF,$C0,$3F,$FF,$FF,$80,$00,$00,$00 ;
 $5060 DEFB $00,$0F,$00,$00,$FE,$0F,$00,$FF,$80,$00,$00,$00,$C0,$00,$00,$01,$80,$03,$F8,$00,$88,$00,$07,$01,$FF,$FF,$07,$F8,$00,$00,$00,$00 ;
 $5080 DEFB $00,$7F,$00,$00,$80,$DF,$F0,$00,$00,$00,$00,$01,$00,$00,$00,$03,$FF,$FF,$00,$26,$10,$00,$00,$1F,$FC,$FF,$F8,$03,$FF,$FF,$00,$00 ;
 $50A0 DEFB $01,$00,$00,$00,$00,$00,$FC,$00,$00,$00,$00,$02,$00,$00,$00,$3E,$F8,$00,$18,$00,$00,$80,$00,$0F,$C3,$FF,$FF,$FF,$F0,$FF,$E0,$00 ;
 $50C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $50E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $5100 DEFB $00,$00,$0F,$E7,$C0,$00,$00,$3F,$C0,$00,$00,$00,$04,$01,$F9,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$3E,$1F,$FC,$00,$7F,$00 ;
 $5120 DEFB $00,$00,$F0,$00,$F0,$00,$07,$F0,$00,$00,$00,$00,$08,$00,$00,$73,$04,$0F,$0C,$71,$80,$C0,$00,$00,$00,$00,$00,$00,$0F,$C7,$80,$00 ;
 $5140 DEFB $00,$03,$00,$00,$FC,$00,$07,$F8,$00,$00,$00,$00,$20,$00,$00,$00,$08,$01,$FF,$F8,$7F,$FF,$FF,$FF,$F8,$3F,$FF,$FF,$C0,$00,$00,$00 ;
 $5160 DEFB $00,$1F,$00,$00,$FE,$0F,$80,$FF,$C0,$00,$00,$00,$80,$00,$00,$01,$C0,$07,$F0,$00,$90,$00,$7F,$83,$FF,$FF,$00,$F8,$03,$C0,$00,$00 ;
 $5180 DEFB $00,$7F,$00,$00,$80,$DF,$F8,$00,$00,$00,$00,$03,$00,$00,$00,$0F,$FF,$FF,$00,$4C,$10,$00,$00,$1F,$FF,$FF,$FC,$01,$FF,$FF,$00,$00 ;
 $51A0 DEFB $01,$00,$00,$00,$00,$00,$FF,$00,$00,$00,$00,$06,$00,$00,$00,$7C,$FC,$00,$00,$00,$00,$40,$00,$3F,$CF,$FF,$FF,$FF,$E0,$7F,$E0,$00 ;
 $51C0 DEFB $00,$00,$42,$00,$10,$10,$10,$00,$00,$00,$20,$00,$00,$00,$00,$7C,$40,$10,$10,$10,$00,$00,$42,$10,$10,$00,$40,$00,$10,$10,$00,$00 ;
 $51E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$42,$00,$00,$00,$00,$10,$20,$00,$00,$42,$00,$00,$10,$00,$00 ;
 $5200 DEFB $80,$00,$0F,$C3,$C0,$00,$00,$7F,$00,$00,$00,$00,$04,$0F,$01,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$01,$FE,$1F,$FC,$01,$FF,$00 ;
 $5220 DEFB $00,$01,$E0,$00,$F0,$00,$07,$F0,$00,$00,$00,$00,$18,$00,$00,$66,$04,$00,$F8,$71,$08,$40,$00,$00,$00,$00,$00,$00,$0F,$CF,$80,$00 ;
 $5240 DEFB $00,$07,$00,$00,$FC,$0C,$07,$F8,$00,$00,$01,$00,$60,$00,$00,$00,$08,$03,$FF,$E0,$3F,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$C0,$00,$00,$00 ;
 $5260 DEFB $00,$1F,$00,$00,$FE,$0F,$80,$7F,$E0,$00,$00,$01,$80,$00,$00,$00,$C0,$07,$F0,$01,$B0,$7F,$FF,$E0,$00,$00,$00,$00,$03,$F8,$00,$00 ;
 $5280 DEFB $00,$7F,$00,$00,$00,$DF,$F8,$00,$00,$00,$00,$02,$00,$00,$00,$0F,$FF,$FF,$00,$F8,$08,$00,$00,$07,$FF,$FF,$FC,$00,$3F,$FF,$00,$00 ;
 $52A0 DEFB $01,$00,$00,$00,$00,$00,$FF,$00,$00,$00,$00,$04,$00,$00,$00,$7C,$7F,$FC,$00,$00,$00,$78,$00,$7F,$FF,$FF,$FF,$FF,$F0,$3F,$C0,$00 ;
 $52C0 DEFB $00,$00,$42,$1C,$00,$38,$38,$38,$78,$00,$20,$44,$00,$00,$00,$42,$40,$00,$10,$00,$78,$00,$66,$00,$38,$1C,$40,$38,$10,$10,$00,$00 ;
 $52E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$42,$38,$1C,$38,$78,$00,$28,$38,$00,$66,$38,$3C,$10,$38,$1C ;
 $5300 DEFB $00,$00,$3F,$81,$C0,$00,$00,$FF,$00,$00,$00,$00,$04,$10,$01,$00,$00,$00,$00,$00,$00,$3F,$80,$00,$00,$01,$FF,$9F,$FC,$07,$FE,$00 ;
 $5320 DEFB $00,$01,$C0,$00,$F0,$00,$07,$F0,$00,$00,$00,$00,$10,$00,$00,$64,$04,$00,$00,$61,$08,$40,$00,$F8,$00,$00,$00,$00,$1F,$FF,$80,$00 ;
 $5340 DEFB $00,$07,$00,$00,$FC,$0C,$07,$FC,$00,$00,$01,$00,$40,$00,$00,$00,$08,$03,$FF,$00,$1F,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$C0,$00,$00,$00 ;
 $5360 DEFB $00,$1F,$00,$00,$FF,$0F,$C0,$3F,$F8,$00,$00,$01,$00,$00,$00,$00,$E0,$0F,$E0,$03,$60,$7F,$FF,$F8,$00,$00,$C0,$00,$0F,$FF,$00,$00 ;
 $5380 DEFB $00,$7F,$00,$00,$00,$FF,$F8,$00,$00,$00,$00,$02,$00,$00,$00,$1F,$FF,$FF,$01,$F0,$08,$00,$00,$03,$FF,$FB,$FF,$00,$3F,$FF,$80,$00 ;
 $53A0 DEFB $03,$00,$00,$00,$00,$00,$FF,$00,$00,$00,$00,$04,$00,$00,$00,$7C,$7F,$FC,$00,$00,$00,$0C,$00,$7F,$FF,$3F,$FF,$FF,$F8,$3F,$C0,$00 ;
 $53C0 DEFB $00,$00,$42,$20,$30,$10,$10,$44,$44,$00,$3C,$44,$00,$00,$00,$42,$78,$30,$10,$30,$44,$00,$5A,$30,$10,$20,$78,$44,$10,$10,$00,$00 ;
 $53E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$42,$44,$20,$44,$44,$30,$30,$04,$00,$5A,$44,$44,$10,$44,$20 ;
 $5400 DEFB $00,$00,$7F,$80,$E0,$00,$01,$FE,$00,$00,$00,$00,$04,$00,$03,$F8,$00,$00,$00,$00,$00,$04,$E0,$00,$00,$01,$FF,$80,$FC,$07,$FE,$00 ;
 $5420 DEFB $00,$01,$80,$00,$F0,$00,$07,$F0,$00,$00,$00,$00,$30,$00,$00,$64,$04,$00,$00,$61,$08,$40,$07,$F8,$00,$00,$7F,$C0,$1F,$FF,$00,$00 ;
 $5440 DEFB $00,$07,$00,$00,$FC,$0C,$03,$FC,$00,$00,$00,$00,$40,$00,$00,$00,$38,$03,$FC,$00,$32,$03,$FF,$FF,$FF,$FF,$FF,$FF,$C0,$00,$00,$00 ;
 $5460 DEFB $00,$3F,$00,$00,$FF,$0F,$C0,$0F,$FF,$02,$00,$01,$00,$00,$00,$00,$70,$0F,$E0,$06,$40,$7F,$FF,$FE,$00,$01,$C0,$00,$0F,$FF,$80,$00 ;
 $5480 DEFB $00,$FF,$00,$00,$00,$FF,$FC,$00,$00,$00,$00,$02,$00,$00,$00,$1F,$FD,$FF,$83,$C0,$04,$00,$00,$03,$FF,$C1,$FF,$80,$FF,$FF,$C0,$00 ;
 $54A0 DEFB $03,$00,$00,$00,$00,$00,$FF,$F0,$00,$00,$00,$04,$00,$00,$00,$78,$3F,$FC,$00,$00,$00,$06,$00,$7F,$FF,$3F,$FF,$FF,$F8,$3F,$80,$00 ;
 $54C0 DEFB $00,$00,$42,$20,$10,$10,$10,$78,$44,$00,$22,$44,$00,$00,$00,$7C,$44,$10,$10,$10,$44,$00,$42,$10,$10,$20,$44,$78,$10,$10,$00,$00 ;
 $54E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$42,$78,$20,$44,$44,$10,$30,$3C,$00,$42,$78,$44,$10,$78,$20 ;
 $5500 DEFB $00,$00,$7F,$80,$E0,$00,$01,$FC,$00,$00,$00,$00,$0C,$00,$1F,$00,$00,$00,$00,$00,$00,$44,$18,$00,$00,$00,$FF,$80,$F8,$07,$FC,$00 ;
 $5520 DEFB $00,$03,$00,$00,$F0,$00,$07,$F0,$00,$00,$00,$00,$20,$00,$00,$44,$04,$00,$00,$40,$08,$C0,$0F,$F8,$00,$01,$FF,$F0,$0F,$FE,$00,$00 ;
 $5540 DEFB $00,$07,$00,$00,$FC,$0E,$03,$FE,$00,$00,$00,$00,$40,$00,$00,$03,$E0,$03,$FC,$00,$26,$00,$FC,$FF,$FF,$FF,$FF,$FF,$00,$00,$00,$00 ;
 $5560 DEFB $00,$3F,$00,$00,$FF,$0F,$E0,$03,$FF,$FC,$00,$01,$00,$00,$00,$00,$38,$1F,$C0,$0C,$E0,$7F,$C0,$FF,$80,$01,$F0,$00,$FF,$FF,$80,$00 ;
 $5580 DEFB $00,$FF,$00,$00,$00,$FF,$FC,$00,$00,$00,$00,$02,$00,$00,$00,$3F,$F0,$0F,$E7,$80,$02,$00,$00,$03,$FE,$00,$FF,$E7,$FF,$FF,$C0,$00 ;
 $55A0 DEFB $07,$00,$00,$00,$00,$00,$FF,$F8,$00,$00,$00,$04,$00,$00,$00,$F8,$0F,$FC,$00,$00,$00,$03,$00,$7F,$FC,$0F,$FC,$1F,$F8,$00,$00,$00 ;
 $55C0 DEFB $00,$00,$5A,$20,$10,$10,$10,$40,$44,$00,$22,$3C,$00,$00,$00,$40,$44,$10,$10,$10,$78,$00,$42,$10,$10,$20,$44,$40,$10,$10,$00,$00 ;
 $55E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$24,$40,$20,$44,$44,$10,$28,$44,$00,$42,$40,$3C,$10,$40,$20 ;
 $5600 DEFB $00,$00,$FF,$00,$E0,$00,$03,$FC,$00,$00,$00,$00,$08,$00,$F0,$80,$0F,$E0,$00,$3F,$E0,$38,$06,$00,$08,$00,$7F,$80,$00,$07,$F8,$00 ;
 $5620 DEFB $00,$03,$00,$00,$F8,$00,$07,$F0,$00,$00,$00,$00,$20,$00,$00,$40,$04,$00,$00,$40,$08,$80,$7F,$F8,$00,$0F,$FF,$FF,$07,$F0,$00,$00 ;
 $5640 DEFB $00,$0F,$00,$00,$FC,$0E,$01,$FE,$00,$00,$00,$00,$40,$00,$00,$03,$00,$03,$F8,$00,$2C,$00,$00,$3F,$FF,$FF,$FF,$FF,$00,$00,$00,$00 ;
 $5660 DEFB $00,$3F,$00,$00,$FF,$9F,$E0,$00,$3F,$F0,$00,$01,$00,$00,$00,$00,$1C,$3F,$C0,$19,$A0,$00,$00,$FF,$E0,$0F,$F8,$03,$FF,$FF,$C0,$00 ;
 $5680 DEFB $00,$FF,$00,$00,$00,$FF,$FC,$00,$00,$00,$00,$02,$00,$00,$00,$3F,$F0,$03,$FF,$00,$02,$00,$00,$07,$F8,$00,$7F,$FF,$FF,$FF,$F0,$00 ;
 $56A0 DEFB $07,$00,$00,$00,$00,$00,$FF,$FC,$00,$00,$00,$04,$00,$00,$00,$F8,$03,$FE,$00,$00,$00,$01,$80,$FF,$E0,$07,$FC,$1F,$E0,$00,$00,$00 ;
 $56C0 DEFB $00,$00,$24,$20,$38,$0C,$0C,$3C,$44,$00,$3C,$04,$00,$00,$00,$40,$44,$38,$0C,$38,$40,$00,$42,$38,$0C,$1C,$44,$3C,$0C,$0C,$00,$00 ;
 $56E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$18,$3C,$20,$38,$44,$38,$24,$3C,$00,$42,$3C,$04,$0C,$3C,$20 ;
 $5700 DEFB $00,$00,$FF,$00,$E0,$00,$03,$F8,$01,$00,$00,$00,$08,$03,$80,$FF,$FC,$30,$00,$F8,$F8,$16,$00,$00,$08,$00,$0F,$00,$00,$07,$F0,$00 ;
 $5720 DEFB $00,$03,$00,$00,$FC,$00,$07,$F8,$00,$00,$00,$00,$20,$00,$00,$40,$04,$00,$00,$40,$08,$FF,$FF,$F8,$00,$1F,$FF,$FF,$80,$00,$00,$00 ;
 $5740 DEFB $00,$0F,$00,$00,$FC,$0F,$01,$FF,$00,$00,$00,$00,$C0,$00,$00,$03,$80,$03,$F8,$00,$68,$00,$00,$07,$FF,$FF,$FF,$FC,$00,$00,$00,$00 ;
 $5760 DEFB $00,$3F,$00,$00,$FF,$9F,$F0,$00,$07,$00,$00,$01,$00,$00,$00,$00,$0E,$7F,$80,$33,$20,$00,$00,$3F,$F0,$3F,$F8,$03,$FF,$FF,$00,$00 ;
 $5780 DEFB $00,$FF,$00,$00,$00,$FF,$FC,$00,$00,$00,$00,$02,$00,$00,$00,$3E,$F0,$00,$FC,$00,$01,$00,$00,$07,$E0,$00,$FF,$FF,$FC,$FF,$F0,$00 ;
 $57A0 DEFB $07,$00,$00,$00,$00,$00,$FF,$FE,$00,$00,$00,$04,$00,$00,$00,$F8,$00,$00,$00,$00,$00,$00,$F8,$FF,$E0,$07,$C0,$00,$00,$00,$00,$00 ;
 $57C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$38,$00,$00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $57E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$38,$00,$00,$00 ; }
 $5800 DEFB $03,$03,$03,$05,$07,$07,$07,$07,$07,$07,$07,$07,$05,$05,$05,$05,$05,$05,$05,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ; {Attributes
 $5820 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$05,$05,$05,$05,$05,$05,$05,$05,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5840 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$05,$05,$05,$05,$05,$05,$05,$05,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5860 DEFB $07,$07,$07,$07,$07,$07,$07,$05,$07,$05,$07,$05,$05,$05,$05,$05,$05,$05,$07,$07,$05,$07,$07,$05,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5880 DEFB $07,$07,$07,$07,$07,$07,$05,$05,$05,$05,$06,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$06,$07,$07,$07,$07,$07,$07 ;
 $58A0 DEFB $07,$07,$07,$07,$07,$07,$05,$05,$05,$05,$05,$07,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$07,$07,$07,$07,$07,$07,$07 ;
 $58C0 DEFB $07,$07,$07,$07,$07,$07,$05,$05,$05,$05,$05,$06,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $58E0 DEFB $07,$07,$07,$07,$07,$07,$05,$05,$06,$05,$05,$05,$05,$05,$05,$05,$05,$05,$06,$05,$05,$05,$07,$05,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5900 DEFB $07,$07,$07,$07,$07,$07,$05,$05,$06,$05,$07,$05,$06,$05,$05,$05,$05,$05,$05,$07,$05,$05,$06,$05,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5920 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5940 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5960 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5980 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$04,$07,$07,$04,$04,$07,$07,$07,$07,$07,$07,$07,$07,$06,$06,$07 ;
 $59A0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$20,$20,$07,$20,$20,$07,$07,$07,$07,$07,$07,$07,$07,$06,$06,$07 ;
 $59C0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$06,$06,$07 ;
 $59E0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$06,$06,$06,$07 ;
 $5A00 DEFB $07,$07,$07,$0F,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$06,$06,$06,$06,$06,$07 ;
 $5A20 DEFB $07,$07,$0F,$08,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$06,$06,$07,$06,$06,$06,$06,$06,$06,$07 ;
 $5A40 DEFB $07,$01,$08,$08,$01,$01,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$02,$02,$02,$06,$06,$06,$06,$06,$06,$06,$06,$06,$07,$07,$07 ;
 $5A60 DEFB $07,$01,$08,$08,$01,$01,$01,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$02,$02,$07,$07,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$07 ;
 $5A80 DEFB $07,$01,$08,$08,$08,$01,$01,$07,$07,$07,$07,$07,$07,$07,$07,$02,$02,$02,$07,$07,$07,$07,$07,$06,$06,$06,$06,$06,$06,$06,$06,$07 ;
 $5AA0 DEFB $01,$08,$08,$08,$08,$08,$01,$01,$07,$07,$07,$07,$07,$07,$07,$02,$02,$02,$07,$07,$07,$07,$07,$06,$06,$06,$06,$06,$06,$06,$06,$07 ;
 $5AC0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ;
 $5AE0 DEFB $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07 ; }

@expand=#DEF(#MOVEMENT(address) #TABLE(default,centre,centre,centre) { =h Direction | =h Via | =h Destination } { #MAP(#PEEK($address))(?,$01:N,$02:S,$03:E,$04:W,$05:NE,$06:NW,$07:SE,$08:SW,$09:UP,$0A:DN) | #IF(#PEEK($address + 1) > $00)(#OBJECT(#PEEK($address + $01), 1, 1)($),---) | #LOCATION(#PEEK($address + $02), 1, 1)($) - "#LOCATIONNAME(#PEEK($address + $02))" } TABLE#)
@expand=#DEF(#ACTION #MAP(#PEEK(#PC))(?,$00:None,$01:North,$02:South,$03:East,$04:West,$05:Northeast,$06:Northwest,$07:Southeast,$08:Southwest,$09:Up,$0A:Down,$0D:Drop,$0F:Attack,$13:Take,$17:Look,$1A:Inventory,$1C:Examine,$1D:Give To,$1F:Enter,$20:Go Into,$24:Run,$27:Follow,$2A:Throw At,$2D:Burn,$2E:Tie To,$30:Capture,$33:Untie,$35:Talk To,$37:Climb Out Of,$3A:Shoot,$3B:Carry))
@replace=/#WORDINDEX/#R#(#EVAL(#PEEK(#PC + 1) * $100 + #PEEK(#PC) + $6000))
; Data block at 5B00
b$5B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5ED0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5ED8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EF8 DEFB $00,$00,$00,$00,$00,$00,$00

; Stack
b$5EFF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F07 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F0F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F17 DEFB $00,$00,$00,$00,$FF,$00,$02,$00
 $5F1F DEFB $FB,$A5,$00,$00,$00,$02,$00,$5C
 $5F27 DEFB $AA,$00,$00,$00,$05,$00,$10,$AB
 $5F2F DEFB $00,$00,$00,$02,$00,$D9,$A4,$00
 $5F37 DEFB $00,$00,$02,$00,$AA,$A7,$02,$AA
 $5F3F DEFB $A7,$04,$00,$D5,$AA,$01,$B3,$AA
 $5F47 DEFB $00,$00,$E0,$AA,$00,$00,$00,$05
 $5F4F DEFB $00,$0B,$AB,$00,$00,$00,$04,$00
 $5F57 DEFB $3A,$AB,$03,$1F,$AB,$05,$00,$74
 $5F5F DEFB $AA,$01,$91,$AA,$FF,$3E,$07,$BA
 $5F67 DEFB $C8,$A1,$C8,$05,$3F,$02,$EC,$C8
 $5F6F DEFB $E2,$C8,$06,$40,$02,$1D,$C9,$13
 $5F77 DEFB $C9,$01,$43,$00,$28,$C9,$24,$C9
 $5F7F DEFB $00,$00,$02,$50,$C9,$46,$C9,$01
 $5F87 DEFB $41,$02,$9A,$C9,$90,$C9,$05,$44
 $5F8F DEFB $01,$F7,$C9,$F0,$C9,$03,$00,$01
 $5F97 DEFB $DE,$C9,$D7,$C9,$03,$00,$01,$B8
 $5F9F DEFB $C9,$B1,$C9,$00,$47,$01,$3B,$CA
 $5FA7 DEFB $34,$CA,$01,$48,$01,$3B,$CA,$34
 $5FAF DEFB $CA,$01,$3D,$01,$42,$C8,$2D,$C8
 $5FB7 DEFB $00,$45,$01,$42,$C8,$2D,$C8,$00
 $5FBF DEFB $4B,$01,$71,$C8,$34,$C8,$00,$49
 $5FC7 DEFB $01,$95,$C8,$3B,$C8,$00,$4A,$01
 $5FCF DEFB $95,$C8,$3B,$C8,$00,$4C,$01,$95
 $5FD7 DEFB $C8,$3B,$C8,$00,$FF,$00,$00,$00
 $5FDF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FE7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FEF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FF7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FFF DEFB $00

; Word Index
@label=WordIndex
w$6000 DEFW $0000
 $6002 DEFW $0040    ; #WORDINDEX("A")
 $6004 DEFW $007C    ; #WORDINDEX("B")
 $6006 DEFW $00E2    ; #WORDINDEX("C")
 $6008 DEFW $017C    ; #WORDINDEX("D")
 $600A DEFW $01F6    ; #WORDINDEX("E")
 $600C DEFW $024F    ; #WORDINDEX("F")
 $600E DEFW $02BD    ; #WORDINDEX("G")
 $6010 DEFW $0309    ; #WORDINDEX("H")
 $6012 DEFW $0373    ; #WORDINDEX("I")
 $6014 DEFW $03A1    ; #WORDINDEX("J")
 $6016 DEFW $03A5    ; #WORDINDEX("K")
 $6018 DEFW $03B2    ; #WORDINDEX("L")
 $601A DEFW $0424    ; #WORDINDEX("M")
 $601C DEFW $045F    ; #WORDINDEX("N")
 $601E DEFW $049C    ; #WORDINDEX("O")
 $6020 DEFW $04CD    ; #WORDINDEX("P")
 $6022 DEFW $050C    ; #WORDINDEX("Q")
 $6024 DEFW $0521    ; #WORDINDEX("R")
 $6026 DEFW $0577    ; #WORDINDEX("S")
 $6028 DEFW $068C    ; #WORDINDEX("T")
 $602A DEFW $070D    ; #WORDINDEX("U")
 $602C DEFW $0728    ; #WORDINDEX("V")
 $602E DEFW $0751    ; #WORDINDEX("W")
 $6030 DEFW $0000    ; "X" (does not exist)
 $6032 DEFW $07A8    ; #WORDINDEX("Y")
 $6034 DEFW $0000    ; "Z" (does not exist)
 $6036 DEFW $0000
 $6038 DEFW $0000
 $603A DEFW $0000
 $603C DEFW $0000
 $603E DEFW $0000

; "A"
;
; .
;
; .
;
; A
@label=A
b$6040 DEFB $41      ; #FIRSTLETTER(#PC)
 $6041 DEFB $00      ; #LETTER(#PC)
 $6042 DEFB $80      ; #LETTER(#PC)
; ACROSS
 $6043 DEFB $21      ; #FIRSTLETTER(#PC) A (PREPOSITION)
 $6044 DEFB $63      ; #LETTER(#PC)
 $6045 DEFB $12      ; #LETTER(#PC)
 $6046 DEFB $0F      ; #LETTER(#PC)
 $6047 DEFB $13      ; #LETTER(#PC)
 $6048 DEFB $93      ; #LETTER(#PC)
; AFTER
 $6049 DEFB $21      ; #FIRSTLETTER(#PC) A (PREPOSITION)
 $604A DEFB $66      ; #LETTER(#PC)
 $604B DEFB $14      ; #LETTER(#PC)
 $604C DEFB $05      ; #LETTER(#PC)
 $604D DEFB $92      ; #LETTER(#PC)
; ALL
 $604E DEFB $41      ; #FIRSTLETTER(#PC) A (SYSTEM_PRONOUN)
 $604F DEFB $2C      ; #LETTER(#PC)
 $6050 DEFB $8C      ; #LETTER(#PC)
; ALREADY
 $6051 DEFB $41      ; #FIRSTLETTER(#PC) A (ARTICLE_MISC)
 $6052 DEFB $0C      ; #LETTER(#PC)
 $6053 DEFB $12      ; #LETTER(#PC)
 $6054 DEFB $05      ; #LETTER(#PC)
 $6055 DEFB $01      ; #LETTER(#PC)
 $6056 DEFB $04      ; #LETTER(#PC)
 $6057 DEFB $99      ; #LETTER(#PC)
; AN
 $6058 DEFB $41      ; #FIRSTLETTER(#PC) A (ARTICLE_MISC)
 $6059 DEFB $0E      ; N
 $605A DEFB $80      ; @
; AND
 $605B DEFB $41      ; #FIRSTLETTER(#PC) A (AND)
 $605C DEFB $4E      ; N
 $605D DEFB $84      ; D
; ANOTHER
 $605E DEFB $41      ; #FIRSTLETTER(#PC) A (ARTICLE_MISC)
 $605F DEFB $0E      ; N
 $6060 DEFB $0F      ; O
 $6061 DEFB $14      ; T
 $6062 DEFB $08      ; H
 $6063 DEFB $05      ; E
 $6064 DEFB $92      ; R
; ARE
 $6065 DEFB $41      ; #FIRSTLETTER(#PC) A (ARTICLE_MISC)
 $6066 DEFB $12      ; R
 $6067 DEFB $85      ; E
; ARM
 $6068 DEFB $21      ; #FIRSTLETTER(#PC) A (NOUN)
 $6069 DEFB $32      ; R
 $606A DEFB $8D      ; M
; ARROW
 $606B DEFB $21      ; #FIRSTLETTER(#PC) A (NOUN)
 $606C DEFB $32      ; R
 $606D DEFB $12      ; R
 $606E DEFB $0F      ; O
 $606F DEFB $97      ; W
; AT
 $6070 DEFB $21      ; #FIRSTLETTER(#PC) A (PREPOSITION)
 $6071 DEFB $74      ; T
 $6072 DEFB $80      ; @
; ATTACK
 $6073 DEFB $01      ; #FIRSTLETTER(#PC) A (VERB)
 $6074 DEFB $F4      ; T (Beugung: S)
 $6075 DEFB $14      ; T
 $6076 DEFB $01      ; #FIRSTLETTER(#PC) A
 $6077 DEFB $03      ; C
 $6078 DEFB $8B      ; K
; AXE
 $6079 DEFB $21      ; #FIRSTLETTER(#PC) A (NOUN)
 $607A DEFB $38      ; X
 $607B DEFB $85      ; E

; "B"
;
; .
;
; .
;
; BACK
@label=B
b$607C DEFB $22      ; B (ADJECTIVE)
 $607D DEFB $41      ; #FIRSTLETTER(#PC) A
 $607E DEFB $03      ; C
 $607F DEFB $8B      ; K
; BARD
 $6080 DEFB $22      ; B (NOUN)
 $6081 DEFB $21      ; A
 $6082 DEFB $12      ; R
 $6083 DEFB $84      ; D
; BARREL
 $6084 DEFB $22      ; B (NOUN)
 $6085 DEFB $21      ; A
 $6086 DEFB $12      ; R
 $6087 DEFB $12      ; R
 $6088 DEFB $05      ; E
 $6089 DEFB $8C      ; L
; BARREN
 $608A DEFB $22      ; B (ADJECTIVE)
 $608B DEFB $41      ; A
 $608C DEFB $12      ; R
 $608D DEFB $12      ; R
 $608E DEFB $05      ; E
 $608F DEFB $8E      ; N
; BAY
 $6090 DEFB $22      ; B (NOUN)
 $6091 DEFB $21      ; A
 $6092 DEFB $99      ; Y
; BEORNS
 $6093 DEFB $22      ; B (ADJECTIVE)
 $6094 DEFB $45      ; E
 $6095 DEFB $0F      ; O
 $6096 DEFB $12      ; R
 $6097 DEFB $0E      ; N
 $6098 DEFB $93      ; S
; BEWITCHED
 $6099 DEFB $22      ; B (ADJECTIVE)
 $609A DEFB $45      ; E
 $609B DEFB $17      ; W
 $609C DEFB $09      ; I
 $609D DEFB $14      ; T
 $609E DEFB $03      ; C
 $609F DEFB $08      ; H
 $60A0 DEFB $05      ; E
 $60A1 DEFB $84      ; D
; BIG
 $60A2 DEFB $22      ; B (ADJECTIVE)
 $60A3 DEFB $49      ; I
 $60A4 DEFB $87      ; G
; BLACK
 $60A5 DEFB $22      ; B (ADJECTIVE)
 $60A6 DEFB $4C      ; L
 $60A7 DEFB $01      ; A
 $60A8 DEFB $03      ; C
 $60A9 DEFB $8B      ; K
; BLEAK
 $60AA DEFB $22      ; B (ADJECTIVE)
 $60AB DEFB $4C      ; L
 $60AC DEFB $05      ; E
 $60AD DEFB $01      ; A
 $60AE DEFB $8B      ; K
; BLOW
 $60AF DEFB $22      ; B (NOUN)
 $60B0 DEFB $2C      ; L
 $60B1 DEFB $0F      ; O
 $60B2 DEFB $97      ; W
; BLOOD
 $60B3 DEFB $22      ; B (NOUN)
 $60B4 DEFB $2C      ; L
 $60B5 DEFB $0F      ; O
 $60B6 DEFB $0F      ; O
 $60B7 DEFB $84      ; D
; BOAT
 $60B8 DEFB $22      ; B (NOUN)
 $60B9 DEFB $2F      ; O
 $60BA DEFB $01      ; A
 $60BB DEFB $94      ; T
; BOG
 $60BC DEFB $22      ; B (NOUN)
 $60BD DEFB $2F      ; O
 $60BE DEFB $87      ; G
; BODY
 $60BF DEFB $22      ; B (NOUN)
 $60C0 DEFB $2F      ; O
 $60C1 DEFB $04      ; D
 $60C2 DEFB $99      ; Y
; BOW
 $60C3 DEFB $22      ; B (NOUN)
 $60C4 DEFB $2F      ; O
 $60C5 DEFB $97      ; W
; BREAK
 $60C6 DEFB $02      ; B (VERB)
 $60C7 DEFB $F2      ; R (Beugung: S)
 $60C8 DEFB $05      ; E
 $60C9 DEFB $01      ; A
 $60CA DEFB $CB      ; K
 $60CB DEFW $0658    ; Alias of #R$6658.
; BROKEN
 $60CD DEFB $22      ; B (ADJECTIVE)
 $60CE DEFB $52      ; R
 $60CF DEFB $0F      ; O
 $60D0 DEFB $0B      ; K
 $60D1 DEFB $05      ; E
 $60D2 DEFB $8E      ; N
; BURN
 $60D3 DEFB $02      ; B (VERB)
 $60D4 DEFB $F5      ; U (Beugung: S)
 $60D5 DEFB $12      ; R
 $60D6 DEFB $8E      ; N
; BUT
 $60D7 DEFB $42      ; B (SYSTEM_PRONOUN)
 $60D8 DEFB $35      ; U
 $60D9 DEFB $D4      ; T
 $60DA DEFW $0245    ; Alias of #R$6245.
; BUTLER
 $60DC DEFB $22      ; B (NOUN)
 $60DD DEFB $35      ; U
 $60DE DEFB $14      ; T
 $60DF DEFB $0C      ; L
 $60E0 DEFB $05      ; E
 $60E1 DEFB $92      ; R

; "C"
;
; .
;
; .
;
; CACHE
@label=C
b$60E2 DEFB $23      ; C (NOUN)
 $60E3 DEFB $21      ; A
 $60E4 DEFB $03      ; C
 $60E5 DEFB $08      ; H
 $60E6 DEFB $85      ; E
; CAMP
 $60E7 DEFB $23      ; C (NOUN)
 $60E8 DEFB $21      ; A
 $60E9 DEFB $0D      ; M
 $60EA DEFB $90      ; P
; CAN
 $60EB DEFB $43      ; C (ARTICLE_MISC)
 $60EC DEFB $01      ; A
 $60ED DEFB $8E      ; N
; CANNOT
 $60EE DEFB $43      ; C (ARTICLE_MISC)
 $60EF DEFB $01      ; A
 $60F0 DEFB $0E      ; N
 $60F1 DEFB $0E      ; N
 $60F2 DEFB $0F      ; O
 $60F3 DEFB $94      ; T
; CAPTURE
 $60F4 DEFB $03      ; C (VERB)
 $60F5 DEFB $E1      ; A (Beugung: S)
 $60F6 DEFB $10      ; P
 $60F7 DEFB $14      ; T
 $60F8 DEFB $15      ; U
 $60F9 DEFB $12      ; R
 $60FA DEFB $C5      ; E
 $60FB DEFW $0073    ; Alias of #R$6073.
; CAREFULLY
 $60FD DEFB $03      ; C (ADVERB)
 $60FE DEFB $01      ; A
 $60FF DEFB $12      ; R
 $6100 DEFB $05      ; E
 $6101 DEFB $06      ; F
 $6102 DEFB $15      ; U
 $6103 DEFB $0C      ; L
 $6104 DEFB $0C      ; L
 $6105 DEFB $99      ; Y
; CARROCK
 $6106 DEFB $23      ; C (NOUN)
 $6107 DEFB $21      ; A
 $6108 DEFB $12      ; R
 $6109 DEFB $12      ; R
 $610A DEFB $0F      ; O
 $610B DEFB $03      ; C
 $610C DEFB $8B      ; K
; CARRY
 $610D DEFB $03      ; C (VERB)
 $610E DEFB $E1      ; A (Beugung: @IES)
 $610F DEFB $72      ; R
 $6110 DEFB $12      ; R
 $6111 DEFB $99      ; Y
; CAVE
 $6112 DEFB $23      ; C (NOUN)
 $6113 DEFB $21      ; A
 $6114 DEFB $16      ; V
 $6115 DEFB $85      ; E
; CAVERN
 $6116 DEFB $23      ; C (NOUN)
 $6117 DEFB $21      ; A
 $6118 DEFB $16      ; V
 $6119 DEFB $05      ; E
 $611A DEFB $12      ; R
 $611B DEFB $8E      ; N
; CELLAR
 $611C DEFB $23      ; C (NOUN)
 $611D DEFB $25      ; E
 $611E DEFB $0C      ; L
 $611F DEFB $0C      ; L
 $6120 DEFB $01      ; A
 $6121 DEFB $92      ; R
; CHEST
 $6122 DEFB $23      ; C (NOUN)
 $6123 DEFB $28      ; H
 $6124 DEFB $05      ; E
 $6125 DEFB $13      ; S
 $6126 DEFB $94      ; T
; CLEARING
 $6127 DEFB $23      ; C (NOUN)
 $6128 DEFB $2C      ; L
 $6129 DEFB $05      ; E
 $612A DEFB $01      ; A
 $612B DEFB $12      ; R
 $612C DEFB $09      ; I
 $612D DEFB $0E      ; N
 $612E DEFB $87      ; G
; CLIMB
 $612F DEFB $03      ; C (VERB)
 $6130 DEFB $EC      ; L (Beugung: S)
 $6131 DEFB $09      ; I
 $6132 DEFB $0D      ; M
 $6133 DEFB $82      ; B
; CLOSE
 $6134 DEFB $03      ; C (VERB)
 $6135 DEFB $EC      ; L (Beugung: S)
 $6136 DEFB $0F      ; O
 $6137 DEFB $13      ; S
 $6138 DEFB $85      ; E
; CLOSED
 $6139 DEFB $23      ; C (ADJECTIVE)
 $613A DEFB $4C      ; L
 $613B DEFB $0F      ; O
 $613C DEFB $13      ; S
 $613D DEFB $05      ; E
 $613E DEFB $84      ; D
; COMFORTABLE
 $613F DEFB $23      ; C (ADJECTIVE)
 $6140 DEFB $4F      ; O
 $6141 DEFB $0D      ; M
 $6142 DEFB $06      ; F
 $6143 DEFB $0F      ; O
 $6144 DEFB $12      ; R
 $6145 DEFB $14      ; T
 $6146 DEFB $01      ; A
 $6147 DEFB $02      ; B
 $6148 DEFB $0C      ; L
 $6149 DEFB $85      ; E
; COUNTRY
 $614A DEFB $23      ; C (NOUN)
 $614B DEFB $2F      ; O
 $614C DEFB $15      ; U
 $614D DEFB $0E      ; N
 $614E DEFB $14      ; T
 $614F DEFB $12      ; R
 $6150 DEFB $99      ; Y
; CRACK
 $6151 DEFB $23      ; C (NOUN)
 $6152 DEFB $32      ; R
 $6153 DEFB $01      ; A
 $6154 DEFB $03      ; C
 $6155 DEFB $8B      ; K
; CROSS
 $6156 DEFB $03      ; C (VERB)
 $6157 DEFB $F2      ; R (Beugung: ES)
 $6158 DEFB $2F      ; O
 $6159 DEFB $13      ; S
 $615A DEFB $93      ; S
; CUPBOARD
 $615B DEFB $23      ; C (NOUN)
 $615C DEFB $35      ; U
 $615D DEFB $10      ; P
 $615E DEFB $02      ; B
 $615F DEFB $0F      ; O
 $6160 DEFB $01      ; A
 $6161 DEFB $12      ; R
 $6162 DEFB $84      ; D
; CURIOUS
 $6163 DEFB $23      ; C (ADJECTIVE)
 $6164 DEFB $55      ; U
 $6165 DEFB $12      ; R
 $6166 DEFB $09      ; I
 $6167 DEFB $0F      ; O
 $6168 DEFB $15      ; U
 $6169 DEFB $93      ; S
; CURTAIN
 $616A DEFB $23      ; C (NOUN)
 $616B DEFB $35      ; U
 $616C DEFB $12      ; R
 $616D DEFB $14      ; T
 $616E DEFB $01      ; A
 $616F DEFB $09      ; I
 $6170 DEFB $8E      ; N
; CUNNING
 $6171 DEFB $23      ; C (ADJECTIVE)
 $6172 DEFB $55      ; U
 $6173 DEFB $0E      ; N
 $6174 DEFB $0E      ; N
 $6175 DEFB $09      ; I
 $6176 DEFB $0E      ; N
 $6177 DEFB $87      ; G
; CUT
 $6178 DEFB $03      ; C (VERB)
 $6179 DEFB $F5      ; U (Beugung: S)
 $617A DEFB $14      ; T
 $617B DEFB $80      ; @

; "D"
;
; .
;
; .
;
; D
@label=D
b$617C DEFB $04      ; D (MOVE_DIR)
 $617D DEFB $40      ; @
 $617E DEFB $C0      ; @
 $617F DEFW $01C4    ; Alias of #R$61C4.
; DALE
 $6181 DEFB $24      ; D (NOUN)
 $6182 DEFB $21      ; A
 $6183 DEFB $0C      ; L
 $6184 DEFB $85      ; E
; DANGEROUS
 $6185 DEFB $24      ; D (ADJECTIVE)
 $6186 DEFB $41      ; A
 $6187 DEFB $0E      ; N
 $6188 DEFB $07      ; G
 $6189 DEFB $05      ; E
 $618A DEFB $12      ; R
 $618B DEFB $0F      ; O
 $618C DEFB $15      ; U
 $618D DEFB $93      ; S
; DARK
 $618E DEFB $24      ; D (ADJECTIVE)
 $618F DEFB $41      ; A
 $6190 DEFB $12      ; R
 $6191 DEFB $8B      ; K
; DEAD
 $6192 DEFB $24      ; D (ADJECTIVE)
 $6193 DEFB $45      ; E
 $6194 DEFB $01      ; A
 $6195 DEFB $84      ; D
; DEEP
 $6196 DEFB $24      ; D (ADJECTIVE)
 $6197 DEFB $45      ; E
 $6198 DEFB $05      ; E
 $6199 DEFB $90      ; P
; DENSE
 $619A DEFB $24      ; D (ADJECTIVE)
 $619B DEFB $45      ; E
 $619C DEFB $0E      ; N
 $619D DEFB $13      ; S
 $619E DEFB $85      ; E
; DESOLATION
 $619F DEFB $24      ; D (NOUN)
 $61A0 DEFB $25      ; E
 $61A1 DEFB $13      ; S
 $61A2 DEFB $0F      ; O
 $61A3 DEFB $0C      ; L
 $61A4 DEFB $01      ; A
 $61A5 DEFB $14      ; T
 $61A6 DEFB $09      ; I
 $61A7 DEFB $0F      ; O
 $61A8 DEFB $8E      ; N
; DIG
 $61A9 DEFB $04      ; D (VERB)
 $61AA DEFB $E9      ; I (Beugung: S)
 $61AB DEFB $07      ; G
 $61AC DEFB $80      ; @
; DIRECTION
 $61AD DEFB $44      ; D (ARTICLE_MISC)
 $61AE DEFB $09      ; I
 $61AF DEFB $12      ; R
 $61B0 DEFB $05      ; E
 $61B1 DEFB $03      ; C
 $61B2 DEFB $14      ; T
 $61B3 DEFB $09      ; I
 $61B4 DEFB $0F      ; O
 $61B5 DEFB $8E      ; N
; DISGUSTING
 $61B6 DEFB $24      ; D (ADJECTIVE)
 $61B7 DEFB $49      ; I
 $61B8 DEFB $13      ; S
 $61B9 DEFB $07      ; G
 $61BA DEFB $15      ; U
 $61BB DEFB $13      ; S
 $61BC DEFB $14      ; T
 $61BD DEFB $09      ; I
 $61BE DEFB $0E      ; N
 $61BF DEFB $87      ; G
; DOOR
 $61C0 DEFB $24      ; D (NOUN)
 $61C1 DEFB $2F      ; O
 $61C2 DEFB $0F      ; O
 $61C3 DEFB $92      ; R
; DOWN
 $61C4 DEFB $04      ; D (MOVE_DIR)
 $61C5 DEFB $4F      ; O
 $61C6 DEFB $17      ; W
 $61C7 DEFB $8E      ; N
; DRAGON
 $61C8 DEFB $24      ; D (NOUN)
 $61C9 DEFB $32      ; R
 $61CA DEFB $01      ; A
 $61CB DEFB $07      ; G
 $61CC DEFB $0F      ; O
 $61CD DEFB $8E      ; N
; DRAGONS
 $61CE DEFB $24      ; D (ADJECTIVE)
 $61CF DEFB $52      ; R
 $61D0 DEFB $01      ; A
 $61D1 DEFB $07      ; G
 $61D2 DEFB $0F      ; O
 $61D3 DEFB $0E      ; N
 $61D4 DEFB $93      ; S
; DREADFUL
 $61D5 DEFB $24      ; D (ADJECTIVE)
 $61D6 DEFB $52      ; R
 $61D7 DEFB $05      ; E
 $61D8 DEFB $01      ; A
 $61D9 DEFB $04      ; D
 $61DA DEFB $06      ; F
 $61DB DEFB $15      ; U
 $61DC DEFB $8C      ; L
; DREARY
 $61DD DEFB $24      ; D (ADJECTIVE)
 $61DE DEFB $52      ; R
 $61DF DEFB $05      ; E
 $61E0 DEFB $01      ; A
 $61E1 DEFB $12      ; R
 $61E2 DEFB $99      ; Y
; DRINK
 $61E3 DEFB $04      ; D (VERB)
 $61E4 DEFB $F2      ; R (Beugung: S)
 $61E5 DEFB $09      ; I
 $61E6 DEFB $0E      ; N
 $61E7 DEFB $8B      ; K
; DROP
 $61E8 DEFB $04      ; D (VERB)
 $61E9 DEFB $F2      ; R (Beugung: S)
 $61EA DEFB $0F      ; O
 $61EB DEFB $90      ; P
; DRY
 $61EC DEFB $24      ; D (ADJECTIVE)
 $61ED DEFB $52      ; R
 $61EE DEFB $99      ; Y
; DUNGEON
 $61EF DEFB $24      ; D (NOUN)
 $61F0 DEFB $35      ; U
 $61F1 DEFB $0E      ; N
 $61F2 DEFB $07      ; G
 $61F3 DEFB $05      ; E
 $61F4 DEFB $0F      ; O
 $61F5 DEFB $8E      ; N

; "E"
;
; .
;
; .
;
; E
@label=E
b$61F6 DEFB $05      ; E (MOVE_DIR)
 $61F7 DEFB $40      ; @
 $61F8 DEFB $C0      ; @
 $61F9 DEFW $01FE    ; Alias of #R$61FE.
; EAR
 $61FB DEFB $25      ; E (NOUN)
 $61FC DEFB $21      ; A
 $61FD DEFB $92      ; R
; EAST
 $61FE DEFB $05      ; E (MOVE_DIR)
 $61FF DEFB $41      ; A
 $6200 DEFB $13      ; S
 $6201 DEFB $94      ; T
; EAT
 $6202 DEFB $05      ; E (VERB)
 $6203 DEFB $E1      ; A
 $6204 DEFB $14      ; T
 $6205 DEFB $80      ; @
; EDGE
 $6206 DEFB $25      ; E (ADJECTIVE)
 $6207 DEFB $44      ; D
 $6208 DEFB $07      ; G
 $6209 DEFB $85      ; E
; ELF
 $620A DEFB $25      ; E (NOUN)
 $620B DEFB $2C      ; L
 $620C DEFB $86      ; F
; ELROND
 $620D DEFB $25      ; E (NOUN)
 $620E DEFB $2C      ; L
 $620F DEFB $12      ; R
 $6210 DEFB $0F      ; O
 $6211 DEFB $0E      ; N
 $6212 DEFB $84      ; D
; ELVENKINGS
 $6213 DEFB $25      ; E (ADJECTIVE)
 $6214 DEFB $4C      ; L
 $6215 DEFB $16      ; V
 $6216 DEFB $05      ; E
 $6217 DEFB $0E      ; N
 $6218 DEFB $0B      ; K
 $6219 DEFB $09      ; I
 $621A DEFB $0E      ; N
 $621B DEFB $07      ; G
 $621C DEFB $93      ; S
; ELVES
 $621D DEFB $25      ; E (NOUN)
 $621E DEFB $2C      ; L
 $621F DEFB $16      ; V
 $6220 DEFB $05      ; E
 $6221 DEFB $93      ; S
; ELVISH
 $6222 DEFB $25      ; E (ADJECTIVE)
 $6223 DEFB $4C      ; L
 $6224 DEFB $16      ; V
 $6225 DEFB $09      ; I
 $6226 DEFB $13      ; S
 $6227 DEFB $88      ; H
; EMPTY
 $6228 DEFB $05      ; E (VERB)
 $6229 DEFB $ED      ; M
 $622A DEFB $50      ; P
 $622B DEFB $14      ; T
 $622C DEFB $99      ; Y
; ENTER
 $622D DEFB $05      ; E (VERB)
 $622E DEFB $EE      ; N
 $622F DEFB $14      ; T
 $6230 DEFB $05      ; E
 $6231 DEFB $92      ; R
; EVERYTHING
 $6232 DEFB $45      ; E (SYSTEM_PRONOUN)
 $6233 DEFB $36      ; V
 $6234 DEFB $05      ; E
 $6235 DEFB $12      ; R
 $6236 DEFB $19      ; Y
 $6237 DEFB $14      ; T
 $6238 DEFB $08      ; H
 $6239 DEFB $09      ; I
 $623A DEFB $0E      ; N
 $623B DEFB $C7      ; G
 $623C DEFW $004E    ; Alias of #R$604E.
; EXAMINE
 $623E DEFB $05      ; E (VERB)
 $623F DEFB $F8      ; X
 $6240 DEFB $01      ; A
 $6241 DEFB $0D      ; M
 $6242 DEFB $09      ; I
 $6243 DEFB $0E      ; N
 $6244 DEFB $85      ; E
; EXCEPT
 $6245 DEFB $45      ; E (SYSTEM_PRONOUN)
 $6246 DEFB $38      ; X
 $6247 DEFB $03      ; C
 $6248 DEFB $05      ; E
 $6249 DEFB $10      ; P
 $624A DEFB $94      ; T
; EYES
 $624B DEFB $25      ; E (NOUN)
 $624C DEFB $39      ; Y
 $624D DEFB $05      ; E
 $624E DEFB $93      ; S

; "F"
;
; .
;
; .
;
; FALL
@label=F
b$624F DEFB $06      ; F (VERB)
 $6250 DEFB $E1      ; A
 $6251 DEFB $0C      ; L
 $6252 DEFB $8C      ; L
; FAST
 $6253 DEFB $26      ; F (ADJECTIVE)
 $6254 DEFB $41      ; A
 $6255 DEFB $13      ; S
 $6256 DEFB $94      ; T
; FEEBLY
 $6257 DEFB $06      ; F (ADVERB)
 $6258 DEFB $05      ; E
 $6259 DEFB $05      ; E
 $625A DEFB $02      ; B
 $625B DEFB $0C      ; L
 $625C DEFB $99      ; Y
; FEET
 $625D DEFB $26      ; F (NOUN)
 $625E DEFB $25      ; E
 $625F DEFB $05      ; E
 $6260 DEFB $94      ; T
; FILL
 $6261 DEFB $06      ; F (VERB)
 $6262 DEFB $E9      ; I
 $6263 DEFB $0C      ; L
 $6264 DEFB $8C      ; L
; FINGER
 $6265 DEFB $26      ; F (NOUN)
 $6266 DEFB $29      ; I
 $6267 DEFB $0E      ; N
 $6268 DEFB $07      ; G
 $6269 DEFB $05      ; E
 $626A DEFB $92      ; R
; FIST
 $626B DEFB $26      ; F (NOUN)
 $626C DEFB $29      ; I
 $626D DEFB $13      ; S
 $626E DEFB $94      ; T
; FLAMES
 $626F DEFB $26      ; F (NOUN)
 $6270 DEFB $2C      ; L
 $6271 DEFB $01      ; A
 $6272 DEFB $0D      ; M
 $6273 DEFB $05      ; E
 $6274 DEFB $93      ; S
; FLAT
 $6275 DEFB $26      ; F (ADJECTIVE)
 $6276 DEFB $4C      ; L
 $6277 DEFB $01      ; A
 $6278 DEFB $94      ; T
; FLOOR
 $6279 DEFB $26      ; F (NOUN)
 $627A DEFB $2C      ; L
 $627B DEFB $0F      ; O
 $627C DEFB $0F      ; O
 $627D DEFB $92      ; R
; FLOWING
 $627E DEFB $26      ; F (ADJECTIVE)
 $627F DEFB $4C      ; L
 $6280 DEFB $0F      ; O
 $6281 DEFB $17      ; W
 $6282 DEFB $09      ; I
 $6283 DEFB $0E      ; N
 $6284 DEFB $87      ; G
; FOLLOW
 $6285 DEFB $06      ; F (VERB)
 $6286 DEFB $EF      ; O
 $6287 DEFB $0C      ; L
 $6288 DEFB $0C      ; L
 $6289 DEFB $0F      ; O
 $628A DEFB $97      ; W
; FOOD
 $628B DEFB $26      ; F (NOUN)
 $628C DEFB $2F      ; O
 $628D DEFB $0F      ; O
 $628E DEFB $84      ; D
; FOR
 $628F DEFB $26      ; F (PREPOSITION)
 $6290 DEFB $6F      ; O
 $6291 DEFB $92      ; R
; FORCEFULLY
 $6292 DEFB $06      ; F (ADVERB)
 $6293 DEFB $0F      ; O
 $6294 DEFB $12      ; R
 $6295 DEFB $03      ; C
 $6296 DEFB $05      ; E
 $6297 DEFB $06      ; F
 $6298 DEFB $15      ; U
 $6299 DEFB $0C      ; L
 $629A DEFB $0C      ; L
 $629B DEFB $99      ; Y
; FORD
 $629C DEFB $26      ; F (NOUN)
 $629D DEFB $2F      ; O
 $629E DEFB $12      ; R
 $629F DEFB $84      ; D
; FOREST
 $62A0 DEFB $26      ; F (NOUN)
 $62A1 DEFB $2F      ; O
 $62A2 DEFB $12      ; R
 $62A3 DEFB $05      ; E
 $62A4 DEFB $13      ; S
 $62A5 DEFB $94      ; T
; FORESTRIVER
 $62A6 DEFB $26      ; F (NOUN)
 $62A7 DEFB $2F      ; O
 $62A8 DEFB $12      ; R
 $62A9 DEFB $05      ; E
 $62AA DEFB $13      ; S
 $62AB DEFB $14      ; T
 $62AC DEFB $12      ; R
 $62AD DEFB $09      ; I
 $62AE DEFB $16      ; V
 $62AF DEFB $05      ; E
 $62B0 DEFB $92      ; R
; FOUL
 $62B1 DEFB $26      ; F (ADJECTIVE)
 $62B2 DEFB $4F      ; O
 $62B3 DEFB $15      ; U
 $62B4 DEFB $8C      ; L
; FROM
 $62B5 DEFB $26      ; F (PREPOSITION)
 $62B6 DEFB $72      ; R
 $62B7 DEFB $0F      ; O
 $62B8 DEFB $8D      ; M
; FULL
 $62B9 DEFB $26      ; F (ADJECTIVE)
 $62BA DEFB $55      ; U
 $62BB DEFB $0C      ; L
 $62BC DEFB $8C      ; L

; "G"
;
; .
;
; .
;
; GANDALF
@label=G
b$62BD DEFB $27      ; G (NOUN)
 $62BE DEFB $21      ; A
 $62BF DEFB $0E      ; N
 $62C0 DEFB $04      ; D
 $62C1 DEFB $01      ; A
 $62C2 DEFB $0C      ; L
 $62C3 DEFB $86      ; F
; GATE
 $62C4 DEFB $27      ; G (NOUN)
 $62C5 DEFB $21      ; A
 $62C6 DEFB $14      ; T
 $62C7 DEFB $85      ; E
; GENTLY
 $62C8 DEFB $27      ; G (ADJECTIVE)
 $62C9 DEFB $45      ; E
 $62CA DEFB $0E      ; N
 $62CB DEFB $14      ; T
 $62CC DEFB $0C      ; L
 $62CD DEFB $99      ; Y
; GET
 $62CE DEFB $07      ; G (VERB)
 $62CF DEFB $E5      ; E
 $62D0 DEFB $14      ; T
 $62D1 DEFB $C0      ; @
 $62D2 DEFW $068C    ; Alias of #R$668C.
; GIVE
 $62D4 DEFB $07      ; G (VERB)
 $62D5 DEFB $E9      ; I
 $62D6 DEFB $16      ; V
 $62D7 DEFB $85      ; E
; GLOOMY
 $62D8 DEFB $27      ; G (ADJECTIVE)
 $62D9 DEFB $4C      ; L
 $62DA DEFB $0F      ; O
 $62DB DEFB $0F      ; O
 $62DC DEFB $0D      ; M
 $62DD DEFB $99      ; Y
; GO
 $62DE DEFB $27      ; G (GO_RUN)
 $62DF DEFB $8F      ; O
 $62E0 DEFB $20      ; @
 $62E1 DEFB $80
; GOBLIN
 $62E2 DEFB $27      ; G (NOUN)
 $62E3 DEFB $2F      ; O
 $62E4 DEFB $02      ; B
 $62E5 DEFB $0C      ; L
 $62E6 DEFB $09      ; I
 $62E7 DEFB $8E      ; N
; GOBLINS
 $62E8 DEFB $27      ; G (ADJECTIVE)
 $62E9 DEFB $4F      ; O
 $62EA DEFB $02      ; B
 $62EB DEFB $0C      ; L
 $62EC DEFB $09      ; I
 $62ED DEFB $0E      ; N
 $62EE DEFB $93      ; S
; GOLD
 $62EF DEFB $27      ; G (NOUN)
 $62F0 DEFB $2F      ; O
 $62F1 DEFB $0C      ; L
 $62F2 DEFB $84      ; D
; GOLDEN
 $62F3 DEFB $27      ; G (ADJECTIVE)
 $62F4 DEFB $4F      ; O
 $62F5 DEFB $0C      ; L
 $62F6 DEFB $04      ; D
 $62F7 DEFB $05      ; E
 $62F8 DEFB $8E      ; N
; GOLLUM
 $62F9 DEFB $27      ; G (NOUN)
 $62FA DEFB $2F      ; O
 $62FB DEFB $0C      ; L
 $62FC DEFB $0C      ; L
 $62FD DEFB $15      ; U
 $62FE DEFB $8D      ; M
; GREAT
 $62FF DEFB $27      ; G (ADJECTIVE)
 $6300 DEFB $52      ; R
 $6301 DEFB $05      ; E
 $6302 DEFB $01      ; A
 $6303 DEFB $94      ; T
; GREEN
 $6304 DEFB $27      ; G (ADJECTIVE)
 $6305 DEFB $52      ; R
 $6306 DEFB $05      ; E
 $6307 DEFB $05      ; E
 $6308 DEFB $8E      ; N

; "H"
;
; .
;
; .
;
; HALL
@label=H
b$6309 DEFB $28      ; H (NOUN)
 $630A DEFB $21      ; A
 $630B DEFB $0C      ; L
 $630C DEFB $8C      ; L
; HALLS
 $630D DEFB $28      ; H (NOUN)
 $630E DEFB $21      ; A
 $630F DEFB $0C      ; L
 $6310 DEFB $0C      ; L
 $6311 DEFB $93      ; S
; HAND
 $6312 DEFB $28      ; H (NOUN)
 $6313 DEFB $21      ; A
 $6314 DEFB $0E      ; N
 $6315 DEFB $84      ; D
; HARD
 $6316 DEFB $28      ; H (ADJECTIVE)
 $6317 DEFB $41      ; A
 $6318 DEFB $12      ; R
 $6319 DEFB $84      ; D
; HEAD
 $631A DEFB $28      ; H (NOUN)
 $631B DEFB $25      ; E
 $631C DEFB $01      ; A
 $631D DEFB $84      ; D
; HELP
 $631E DEFB $48      ; H (SYSTEM_PRONOUN)
 $631F DEFB $25      ; E
 $6320 DEFB $0C      ; L
 $6321 DEFB $90      ; P
; HEART
 $6322 DEFB $28      ; H (NOUN)
 $6323 DEFB $25      ; E
 $6324 DEFB $01      ; A
 $6325 DEFB $12      ; R
 $6326 DEFB $94      ; T
; HEAVY
 $6327 DEFB $28      ; H (ADJECTIVE)
 $6328 DEFB $45      ; E
 $6329 DEFB $01      ; A
 $632A DEFB $16      ; V
 $632B DEFB $99      ; Y
; HELLO
 $632C DEFB $08      ; H (VERB)
 $632D DEFB $65      ; E
 $632E DEFB $0C      ; L
 $632F DEFB $0C      ; L
 $6330 DEFB $8F      ; O
; HIDDEN
 $6331 DEFB $28      ; H (ADJECTIVE)
 $6332 DEFB $49      ; I
 $6333 DEFB $04      ; D
 $6334 DEFB $04      ; D
 $6335 DEFB $05      ; E
 $6336 DEFB $8E      ; N
; HIDEOUS
 $6337 DEFB $28      ; H (ADJECTIVE)
 $6338 DEFB $49      ; I
 $6339 DEFB $04      ; D
 $633A DEFB $05      ; E
 $633B DEFB $0F      ; O
 $633C DEFB $15      ; U
 $633D DEFB $93      ; S
; HILL
 $633E DEFB $28      ; H (NOUN)
 $633F DEFB $29      ; I
 $6340 DEFB $0C      ; L
 $6341 DEFB $8C      ; L
; HILLS
 $6342 DEFB $28      ; H (NOUN)
 $6343 DEFB $29      ; I
 $6344 DEFB $0C      ; L
 $6345 DEFB $0C      ; L
 $6346 DEFB $93      ; S
; HIT
 $6347 DEFB $08      ; H (VERB)
 $6348 DEFB $E9      ; I
 $6349 DEFB $14      ; T
 $634A DEFB $C0      ; @
 $634B DEFW $0073    ; Alias of #R$6073.
; HOBBIT
 $634D DEFB $28      ; H (ADJECTIVE)
 $634E DEFB $4F      ; O
 $634F DEFB $02      ; B
 $6350 DEFB $02      ; B
 $6351 DEFB $09      ; I
 $6352 DEFB $94      ; T
; HOBBITLAND
 $6353 DEFB $28      ; H (NOUN)
 $6354 DEFB $2F      ; O
 $6355 DEFB $02      ; B
 $6356 DEFB $02      ; B
 $6357 DEFB $09      ; I
 $6358 DEFB $14      ; T
 $6359 DEFB $0C      ; L
 $635A DEFB $01      ; A
 $635B DEFB $0E      ; N
 $635C DEFB $84      ; D
; HOLE
 $635D DEFB $28      ; H (NOUN)
 $635E DEFB $2F      ; O
 $635F DEFB $0C      ; L
 $6360 DEFB $85      ; E
; HORRIBLE
 $6361 DEFB $28      ; H (ADJECTIVE)
 $6362 DEFB $4F      ; O
 $6363 DEFB $12      ; R
 $6364 DEFB $12      ; R
 $6365 DEFB $09      ; I
 $6366 DEFB $02      ; B
 $6367 DEFB $0C      ; L
 $6368 DEFB $85      ; E
; HOUSE
 $6369 DEFB $28      ; H (ADJECTIVE)
 $636A DEFB $4F      ; O
 $636B DEFB $15      ; U
 $636C DEFB $13      ; S
 $636D DEFB $85      ; E
; HURRY
 $636E DEFB $08      ; H (VERB)
 $636F DEFB $75      ; U
 $6370 DEFB $12      ; R
 $6371 DEFB $12      ; R
 $6372 DEFB $99      ; Y

; "I"
;
; .
;
; .
;
; I
@label=I
b$6373 DEFB $09      ; I (ADVERB)
 $6374 DEFB $00      ; @
 $6375 DEFB $C0      ; @
 $6376 DEFW $0392    ; Alias of #R$6392.
; IN
 $6378 DEFB $09      ; I (IN_INTO)
 $6379 DEFB $2E      ; N
 $637A DEFB $80      ; @
; INSIDE
 $637B DEFB $29      ; I (PREPOSITION)
 $637C DEFB $6E      ; N
 $637D DEFB $13      ; S
 $637E DEFB $09      ; I
 $637F DEFB $04      ; D
 $6380 DEFB $85      ; E
; INSIGNIFICANT
 $6381 DEFB $29      ; I (ADJECTIVE)
 $6382 DEFB $4E      ; N
 $6383 DEFB $13      ; S
 $6384 DEFB $09      ; I
 $6385 DEFB $07      ; G
 $6386 DEFB $0E      ; N
 $6387 DEFB $09      ; I
 $6388 DEFB $06      ; F
 $6389 DEFB $09      ; I
 $638A DEFB $03      ; C
 $638B DEFB $01      ; A
 $638C DEFB $0E      ; N
 $638D DEFB $94      ; T
; INTO
 $638E DEFB $09      ; I (IN_INTO)
 $638F DEFB $2E      ; N
 $6390 DEFB $14      ; T
 $6391 DEFB $8F      ; O
; INVENTORY
 $6392 DEFB $09      ; I (VERB)
 $6393 DEFB $6E      ; N
 $6394 DEFB $16      ; V
 $6395 DEFB $05      ; E
 $6396 DEFB $0E      ; N
 $6397 DEFB $14      ; T
 $6398 DEFB $0F      ; O
 $6399 DEFB $12      ; R
 $639A DEFB $99      ; Y
; IS
 $639B DEFB $49      ; I (ARTICLE_MISC)
 $639C DEFB $13      ; S
 $639D DEFB $80      ; @
; IT
 $639E DEFB $49      ; I (SYSTEM_PRONOUN)
 $639F DEFB $34      ; T
 $63A0 DEFB $80      ; @

; "J"
;
; .
;
; .
;
; JUMP
@label=J
b$63A1 DEFB $0A      ; J (VERB)
 $63A2 DEFB $F5      ; U
 $63A3 DEFB $0D      ; M
 $63A4 DEFB $90      ; P

; "K"
;
; .
;
; .
;
; KEY
@label=K
b$63A5 DEFB $2B      ; K (NOUN)
 $63A6 DEFB $25      ; E
 $63A7 DEFB $99      ; Y
; KILL
 $63A8 DEFB $0B      ; K (VERB)
 $63A9 DEFB $E9      ; I
 $63AA DEFB $0C      ; L
 $63AB DEFB $CC      ; L
 $63AC DEFW $0073    ; Alias of #R$6073.
; KING
 $63AE DEFB $2B      ; K (NOUN)
 $63AF DEFB $29      ; I
 $63B0 DEFB $0E      ; N
 $63B1 DEFB $87      ; G

; "L"
;
; .
;
; .
;
; L
@label=L
b$63B2 DEFB $0C      ; L (ADVERB)
 $63B3 DEFB $00      ; @
 $63B4 DEFB $C0      ; @
 $63B5 DEFW $0413    ; Alias of #R$6413.
; LAKE
 $63B7 DEFB $2C      ; L (NOUN)
 $63B8 DEFB $21      ; A
 $63B9 DEFB $0B      ; K
 $63BA DEFB $85      ; E
; LAND
 $63BB DEFB $2C      ; L (NOUN)
 $63BC DEFB $21      ; A
 $63BD DEFB $0E      ; N
 $63BE DEFB $84      ; D
; LARGE
 $63BF DEFB $2C      ; L (ADJECTIVE)
 $63C0 DEFB $41      ; A
 $63C1 DEFB $12      ; R
 $63C2 DEFB $07      ; G
 $63C3 DEFB $85      ; E
; LEAVE
 $63C4 DEFB $0C      ; L (VERB)
 $63C5 DEFB $E5      ; E
 $63C6 DEFB $01      ; A
 $63C7 DEFB $16      ; V
 $63C8 DEFB $85      ; E
; LEG
 $63C9 DEFB $2C      ; L (NOUN)
 $63CA DEFB $25      ; E
 $63CB DEFB $87      ; G
; LEVELLED
 $63CC DEFB $2C      ; L (ADJECTIVE)
 $63CD DEFB $45      ; E
 $63CE DEFB $16      ; V
 $63CF DEFB $05      ; E
 $63D0 DEFB $0C      ; L
 $63D1 DEFB $0C      ; L
 $63D2 DEFB $05      ; E
 $63D3 DEFB $84      ; D
; LIFT
 $63D4 DEFB $0C      ; L (VERB)
 $63D5 DEFB $E9      ; I
 $63D6 DEFB $06      ; F
 $63D7 DEFB $D4      ; T
 $63D8 DEFW $068C    ; Alias of #R$668C.
; LIKE
 $63DA DEFB $2C      ; L (ADJECTIVE)
 $63DB DEFB $49      ; I
 $63DC DEFB $0B      ; K
 $63DD DEFB $85      ; E
; LIGHT
 $63DE DEFB $0C      ; L (VERB)
 $63DF DEFB $E9      ; I
 $63E0 DEFB $07      ; G
 $63E1 DEFB $08      ; H
 $63E2 DEFB $94      ; T
; LITTLE
 $63E3 DEFB $2C      ; L (ADJECTIVE)
 $63E4 DEFB $49      ; I
 $63E5 DEFB $14      ; T
 $63E6 DEFB $14      ; T
 $63E7 DEFB $0C      ; L
 $63E8 DEFB $85      ; E
; LO
 $63E9 DEFB $0C      ; L (ADVERB)
 $63EA DEFB $0F      ; O
 $63EB DEFB $C0      ; @
 $63EC DEFW $0413    ; Alias of #R$6413.
; LOAD
 $63EE DEFB $4C      ; L (SYSTEM_PRONOUN)
 $63EF DEFB $2F      ; O
 $63F0 DEFB $01      ; A
 $63F1 DEFB $84      ; D
; LOCK
 $63F2 DEFB $0C      ; L (VERB)
 $63F3 DEFB $EF      ; O
 $63F4 DEFB $03      ; C
 $63F5 DEFB $8B      ; K
; LOCKED
 $63F6 DEFB $2C      ; L (ADJECTIVE)
 $63F7 DEFB $4F      ; O
 $63F8 DEFB $03      ; C
 $63F9 DEFB $0B      ; K
 $63FA DEFB $05      ; E
 $63FB DEFB $84      ; D
; LOGS
 $63FC DEFB $2C      ; L (NOUN)
 $63FD DEFB $2F      ; O
 $63FE DEFB $07      ; G
 $63FF DEFB $93      ; S
; LONELANDS
 $6400 DEFB $2C      ; L (NOUN)
 $6401 DEFB $2F      ; O
 $6402 DEFB $0E      ; N
 $6403 DEFB $05      ; E
 $6404 DEFB $0C      ; L
 $6405 DEFB $01      ; A
 $6406 DEFB $0E      ; N
 $6407 DEFB $04      ; D
 $6408 DEFB $93      ; S
; LONELY
 $6409 DEFB $2C      ; L (ADJECTIVE)
 $640A DEFB $4F      ; O
 $640B DEFB $0E      ; N
 $640C DEFB $05      ; E
 $640D DEFB $0C      ; L
 $640E DEFB $99      ; Y
; LONG
 $640F DEFB $2C      ; L (ADJECTIVE)
 $6410 DEFB $4F      ; O
 $6411 DEFB $0E      ; N
 $6412 DEFB $87      ; G
; LOOK
 $6413 DEFB $0C      ; L (VERB)
 $6414 DEFB $EF      ; O
 $6415 DEFB $0F      ; O
 $6416 DEFB $8B      ; K
; LOW
 $6417 DEFB $2C      ; L (ADJECTIVE)
 $6418 DEFB $4F      ; O
 $6419 DEFB $97      ; W
; LOWER
 $641A DEFB $2C      ; L (ADJECTIVE)
 $641B DEFB $4F      ; O
 $641C DEFB $17      ; W
 $641D DEFB $05      ; E
 $641E DEFB $92      ; R
; LUNCH
 $641F DEFB $2C      ; L (NOUN)
 $6420 DEFB $35      ; U
 $6421 DEFB $0E      ; N
 $6422 DEFB $03      ; C
 $6423 DEFB $88      ; H

; "M"
;
; .
;
; .
;
; MAGIC
@label=M
b$6424 DEFB $2D      ; M (ADJECTIVE)
 $6425 DEFB $41      ; A
 $6426 DEFB $07      ; G
 $6427 DEFB $09      ; I
 $6428 DEFB $83      ; C
; MAN
 $6429 DEFB $2D      ; M (NOUN)
 $642A DEFB $21      ; A
 $642B DEFB $8E      ; N
; MAP
 $642C DEFB $2D      ; M (NOUN)
 $642D DEFB $21      ; A
 $642E DEFB $90      ; P
; ME
 $642F DEFB $2D      ; M (NOUN)
 $6430 DEFB $25      ; E
 $6431 DEFB $C0      ; @
 $6432 DEFW $07A8    ; Alias of #R$67A8.
; MEAN
 $6434 DEFB $2D      ; M (ADJECTIVE)
 $6435 DEFB $45      ; E
 $6436 DEFB $01      ; A
 $6437 DEFB $8E      ; N
; MIRKWOOD
 $6438 DEFB $2D      ; M (NOUN)
 $6439 DEFB $29      ; I
 $643A DEFB $12      ; R
 $643B DEFB $0B      ; K
 $643C DEFB $17      ; W
 $643D DEFB $0F      ; O
 $643E DEFB $0F      ; O
 $643F DEFB $84      ; D
; MISTY
 $6440 DEFB $2D      ; M (ADJECTIVE)
 $6441 DEFB $49      ; I
 $6442 DEFB $13      ; S
 $6443 DEFB $14      ; T
 $6444 DEFB $99      ; Y
; MONSTROUS
 $6445 DEFB $2D      ; M (ADJECTIVE)
 $6446 DEFB $4F      ; O
 $6447 DEFB $0E      ; N
 $6448 DEFB $13      ; S
 $6449 DEFB $14      ; T
 $644A DEFB $12      ; R
 $644B DEFB $0F      ; O
 $644C DEFB $15      ; U
 $644D DEFB $93      ; S
; MOUNTAIN
 $644E DEFB $2D      ; M (NOUN)
 $644F DEFB $2F      ; O
 $6450 DEFB $15      ; U
 $6451 DEFB $0E      ; N
 $6452 DEFB $14      ; T
 $6453 DEFB $01      ; A
 $6454 DEFB $09      ; I
 $6455 DEFB $8E      ; N
; MOUNTAINS
 $6456 DEFB $2D      ; M (NOUN)
 $6457 DEFB $2F      ; O
 $6458 DEFB $15      ; U
 $6459 DEFB $0E      ; N
 $645A DEFB $14      ; T
 $645B DEFB $01      ; A
 $645C DEFB $09      ; I
 $645D DEFB $0E      ; N
 $645E DEFB $93      ; S

; "N"
;
; .
;
; .
;
; N
@label=N
b$645F DEFB $0E      ; N (MOVE_DIR)
 $6460 DEFB $40      ; @
 $6461 DEFB $C0      ; @
 $6462 DEFW $0480    ; Alias of #R$6480.
; NARROW
 $6464 DEFB $2E      ; N (ADJECTIVE)
 $6465 DEFB $41      ; A
 $6466 DEFB $12      ; R
 $6467 DEFB $12      ; R
 $6468 DEFB $0F      ; O
 $6469 DEFB $97      ; W
; NASTY
 $646A DEFB $2E      ; N (ADJECTIVE)
 $646B DEFB $41      ; A
 $646C DEFB $13      ; S
 $646D DEFB $14      ; T
 $646E DEFB $99      ; Y
; NE
 $646F DEFB $0E      ; N (MOVE_DIR)
 $6470 DEFB $45      ; E
 $6471 DEFB $C0      ; @
 $6472 DEFW $0485    ; Alias of #R$6485.
; NIGHT
 $6474 DEFB $2E      ; N (NOUN)
 $6475 DEFB $29      ; I
 $6476 DEFB $07      ; G
 $6477 DEFB $08      ; H
 $6478 DEFB $94      ; T
; NOPRINT
 $6479 DEFB $4E      ; N (SYSTEM_PRONOUN)
 $647A DEFB $2F      ; O
 $647B DEFB $10      ; P
 $647C DEFB $12      ; R
 $647D DEFB $09      ; I
 $647E DEFB $0E      ; N
 $647F DEFB $94      ; T
; NORTH
 $6480 DEFB $0E      ; N (MOVE_DIR)
 $6481 DEFB $4F      ; O
 $6482 DEFB $12      ; R
 $6483 DEFB $14      ; T
 $6484 DEFB $88      ; H
; NORTHEAST
 $6485 DEFB $0E      ; N (MOVE_DIR)
 $6486 DEFB $4F      ; O
 $6487 DEFB $12      ; R
 $6488 DEFB $14      ; T
 $6489 DEFB $08      ; H
 $648A DEFB $05      ; E
 $648B DEFB $01      ; A
 $648C DEFB $13      ; S
 $648D DEFB $94      ; T
; NORTHWEST
 $648E DEFB $0E      ; N (MOVE_DIR)
 $648F DEFB $4F      ; O
 $6490 DEFB $12      ; R
 $6491 DEFB $14      ; T
 $6492 DEFB $08      ; H
 $6493 DEFB $17      ; W
 $6494 DEFB $05      ; E
 $6495 DEFB $13      ; S
 $6496 DEFB $94      ; T
; NW
 $6497 DEFB $0E      ; N (MOVE_DIR)
 $6498 DEFB $57      ; W
 $6499 DEFB $C0      ; @
 $649A DEFW $048E    ; Alias of #R$648E.

; "O"
;
; .
;
; .
;
; OF
@label=O
b$649C DEFB $2F      ; O (PREPOSITION)
 $649D DEFB $66      ; F
 $649E DEFB $80      ; @
; OFF
 $649F DEFB $2F      ; O (PREPOSITION)
 $64A0 DEFB $66      ; F
 $64A1 DEFB $86      ; F
; OFFER
 $64A2 DEFB $0F      ; O (VERB)
 $64A3 DEFB $E6      ; F
 $64A4 DEFB $06      ; F
 $64A5 DEFB $05      ; E
 $64A6 DEFB $92      ; R
; OLD
 $64A7 DEFB $2F      ; O (ADJECTIVE)
 $64A8 DEFB $4C      ; L
 $64A9 DEFB $84      ; D
; ON
 $64AA DEFB $2F      ; O (PREPOSITION)
 $64AB DEFB $6E      ; N
 $64AC DEFB $80      ; @
; ONE
 $64AD DEFB $4F      ; O (SYSTEM_PRONOUN)
 $64AE DEFB $2E      ; N
 $64AF DEFB $85      ; E
; ONTO
 $64B0 DEFB $2F      ; O (PREPOSITION)
 $64B1 DEFB $6E      ; N
 $64B2 DEFB $14      ; T
 $64B3 DEFB $8F      ; O
; OPEN
 $64B4 DEFB $0F      ; O (VERB)
 $64B5 DEFB $F0      ; P
 $64B6 DEFB $05      ; E
 $64B7 DEFB $8E      ; N
; OPENING
 $64B8 DEFB $2F      ; O (NOUN)
 $64B9 DEFB $30      ; P
 $64BA DEFB $05      ; E
 $64BB DEFB $0E      ; N
 $64BC DEFB $09      ; I
 $64BD DEFB $0E      ; N
 $64BE DEFB $87      ; G
; OUT
 $64BF DEFB $2F      ; O (PREPOSITION)
 $64C0 DEFB $75      ; U
 $64C1 DEFB $94      ; T
; OUTSIDE
 $64C2 DEFB $2F      ; O (ADJECTIVE)
 $64C3 DEFB $55      ; U
 $64C4 DEFB $14      ; T
 $64C5 DEFB $13      ; S
 $64C6 DEFB $09      ; I
 $64C7 DEFB $04      ; D
 $64C8 DEFB $85      ; E
; OVER
 $64C9 DEFB $2F      ; O (PREPOSITION)
 $64CA DEFB $76      ; V
 $64CB DEFB $05      ; E
 $64CC DEFB $92      ; R

; "P"
;
; .
;
; .
;
; PASSAGE
@label=P
b$64CD DEFB $30      ; P (NOUN)
 $64CE DEFB $21      ; A
 $64CF DEFB $13      ; S
 $64D0 DEFB $13      ; S
 $64D1 DEFB $01      ; A
 $64D2 DEFB $07      ; G
 $64D3 DEFB $85      ; E
; PATH
 $64D4 DEFB $30      ; P (NOUN)
 $64D5 DEFB $21      ; A
 $64D6 DEFB $14      ; T
 $64D7 DEFB $88      ; H
; PAUSE
 $64D8 DEFB $50      ; P (SYSTEM_PRONOUN)
 $64D9 DEFB $21      ; A
 $64DA DEFB $15      ; U
 $64DB DEFB $13      ; S
 $64DC DEFB $85      ; E
; PICK
 $64DD DEFB $10      ; P (VERB)
 $64DE DEFB $E9      ; I
 $64DF DEFB $03      ; C
 $64E0 DEFB $CB      ; K
 $64E1 DEFW $010D    ; Alias of #R$610D.
; PIT
 $64E3 DEFB $30      ; P (NOUN)
 $64E4 DEFB $29      ; I
 $64E5 DEFB $94      ; T
; PLACE
 $64E6 DEFB $30      ; P (NOUN)
 $64E7 DEFB $2C      ; L
 $64E8 DEFB $01      ; A
 $64E9 DEFB $03      ; C
 $64EA DEFB $85      ; E
; PLEASE
 $64EB DEFB $10      ; P (ADVERB)
 $64EC DEFB $0C      ; L
 $64ED DEFB $05      ; E
 $64EE DEFB $01      ; A
 $64EF DEFB $13      ; S
 $64F0 DEFB $85      ; E
; PORTCULLIS
 $64F1 DEFB $30      ; P (NOUN)
 $64F2 DEFB $2F      ; O
 $64F3 DEFB $12      ; R
 $64F4 DEFB $14      ; T
 $64F5 DEFB $03      ; C
 $64F6 DEFB $15      ; U
 $64F7 DEFB $0C      ; L
 $64F8 DEFB $0C      ; L
 $64F9 DEFB $09      ; I
 $64FA DEFB $93      ; S
; PRINT
 $64FB DEFB $50      ; P (SYSTEM_PRONOUN)
 $64FC DEFB $32      ; R
 $64FD DEFB $09      ; I
 $64FE DEFB $0E      ; N
 $64FF DEFB $94      ; T
; PULL
 $6500 DEFB $10      ; P (VERB)
 $6501 DEFB $F5      ; U
 $6502 DEFB $0C      ; L
 $6503 DEFB $8C      ; L
; PUSH
 $6504 DEFB $10      ; P (VERB)
 $6505 DEFB $F5      ; U
 $6506 DEFB $33      ; S
 $6507 DEFB $88      ; H
; PUT
 $6508 DEFB $10      ; P (VERB)
 $6509 DEFB $F5      ; U
 $650A DEFB $14      ; T
 $650B DEFB $80      ; @

; "Q"
;
; .
;
; .
;
; QUICKLY
@label=Q
b$650C DEFB $11      ; Q (ADVERB)
 $650D DEFB $15      ; U
 $650E DEFB $09      ; I
 $650F DEFB $03      ; C
 $6510 DEFB $0B      ; K
 $6511 DEFB $0C      ; L
 $6512 DEFB $99      ; Y
; QUIET
 $6513 DEFB $11      ; Q (ADVERB)
 $6514 DEFB $15      ; U
 $6515 DEFB $09      ; I
 $6516 DEFB $05      ; E
 $6517 DEFB $94      ; T
; QUIT
 $6518 DEFB $51      ; Q (SYSTEM_PRONOUN)
 $6519 DEFB $35      ; U
 $651A DEFB $09      ; I
 $651B DEFB $94      ; T
; QUITE
 $651C DEFB $31      ; Q (ADJECTIVE)
 $651D DEFB $55      ; U
 $651E DEFB $09      ; I
 $651F DEFB $14      ; T
 $6520 DEFB $85      ; E

; "R"
;
; .
;
; .
;
; RAVENHILL
@label=R
b$6521 DEFB $32      ; R (NOUN)
 $6522 DEFB $21      ; A
 $6523 DEFB $16      ; V
 $6524 DEFB $05      ; E
 $6525 DEFB $0E      ; N
 $6526 DEFB $08      ; H
 $6527 DEFB $09      ; I
 $6528 DEFB $0C      ; L
 $6529 DEFB $8C      ; L
; RAVINE
 $652A DEFB $32      ; R (NOUN)
 $652B DEFB $21      ; A
 $652C DEFB $16      ; V
 $652D DEFB $09      ; I
 $652E DEFB $0E      ; N
 $652F DEFB $85      ; E
; READ
 $6530 DEFB $12      ; R (VERB)
 $6531 DEFB $65      ; E
 $6532 DEFB $01      ; A
 $6533 DEFB $C4      ; D
 $6534 DEFW $023E    ; Alias of #R$623E.
; RED
 $6536 DEFB $32      ; R (ADJECTIVE)
 $6537 DEFB $45      ; E
 $6538 DEFB $84      ; D
; RIBS
 $6539 DEFB $32      ; R (NOUN)
 $653A DEFB $29      ; I
 $653B DEFB $02      ; B
 $653C DEFB $93      ; S
; RING
 $653D DEFB $32      ; R (NOUN)
 $653E DEFB $29      ; I
 $653F DEFB $0E      ; N
 $6540 DEFB $87      ; G
; RIVENDELL
 $6541 DEFB $32      ; R (NOUN)
 $6542 DEFB $29      ; I
 $6543 DEFB $16      ; V
 $6544 DEFB $05      ; E
 $6545 DEFB $0E      ; N
 $6546 DEFB $04      ; D
 $6547 DEFB $05      ; E
 $6548 DEFB $0C      ; L
 $6549 DEFB $8C      ; L
; RIVER
 $654A DEFB $32      ; R (NOUN)
 $654B DEFB $29      ; I
 $654C DEFB $16      ; V
 $654D DEFB $05      ; E
 $654E DEFB $92      ; R
; ROAD
 $654F DEFB $32      ; R (NOUN)
 $6550 DEFB $2F      ; O
 $6551 DEFB $01      ; A
 $6552 DEFB $84      ; D
; ROCK
 $6553 DEFB $32      ; R (ADJECTIVE)
 $6554 DEFB $4F      ; O
 $6555 DEFB $03      ; C
 $6556 DEFB $8B      ; K
; ROOM
 $6557 DEFB $32      ; R (NOUN)
 $6558 DEFB $2F      ; O
 $6559 DEFB $0F      ; O
 $655A DEFB $8D      ; M
; ROPE
 $655B DEFB $32      ; R (NOUN)
 $655C DEFB $2F      ; O
 $655D DEFB $10      ; P
 $655E DEFB $85      ; E
; ROUND
 $655F DEFB $32      ; R (ADJECTIVE)
 $6560 DEFB $4F      ; O
 $6561 DEFB $15      ; U
 $6562 DEFB $0E      ; N
 $6563 DEFB $84      ; D
; RUG
 $6564 DEFB $32      ; R (NOUN)
 $6565 DEFB $35      ; U
 $6566 DEFB $87      ; G
; RUINS
 $6567 DEFB $32      ; R (NOUN)
 $6568 DEFB $35      ; U
 $6569 DEFB $09      ; I
 $656A DEFB $0E      ; N
 $656B DEFB $93      ; S
; RUN
 $656C DEFB $32      ; R (GO_RUN)
 $656D DEFB $95      ; U
 $656E DEFB $0E      ; N
 $656F DEFB $80      ; @
; RUNNING
 $6570 DEFB $32      ; R (NOUN)
 $6571 DEFB $35      ; U
 $6572 DEFB $0E      ; N
 $6573 DEFB $0E      ; N
 $6574 DEFB $09      ; I
 $6575 DEFB $0E      ; N
 $6576 DEFB $87      ; G

; "S"
;
; .
;
; .
;
; S
@label=S
b$6577 DEFB $13      ; S (MOVE_DIR)
 $6578 DEFB $40      ; @
 $6579 DEFB $C0      ; @
 $657A DEFW $0607    ; Alias of #R$6607.
; SAND
 $657C DEFB $33      ; S (NOUN)
 $657D DEFB $21      ; A
 $657E DEFB $0E      ; N
 $657F DEFB $84      ; D
; SAVE
 $6580 DEFB $53      ; S (SYSTEM_PRONOUN)
 $6581 DEFB $21      ; A
 $6582 DEFB $16      ; V
 $6583 DEFB $85      ; E
; SAY
 $6584 DEFB $13      ; S (VERB)
 $6585 DEFB $E1      ; A
 $6586 DEFB $19      ; Y
 $6587 DEFB $C0      ; @
 $6588 DEFW $0690    ; Alias of #R$6690.
; SCORE
 $658A DEFB $53      ; S (SYSTEM_PRONOUN)
 $658B DEFB $23      ; C
 $658C DEFB $0F      ; O
 $658D DEFB $12      ; R
 $658E DEFB $85      ; E
; SE
 $658F DEFB $13      ; S (MOVE_DIR)
 $6590 DEFB $45      ; E
 $6591 DEFB $C0      ; @
 $6592 DEFW $060C    ; Alias of #R$660C.
; SHOOT
 $6594 DEFB $13      ; S (VERB)
 $6595 DEFB $E8      ; H
 $6596 DEFB $0F      ; O
 $6597 DEFB $0F      ; O
 $6598 DEFB $94      ; T
; SHORT
 $6599 DEFB $33      ; S (ADJECTIVE)
 $659A DEFB $48      ; H
 $659B DEFB $0F      ; O
 $659C DEFB $12      ; R
 $659D DEFB $94      ; T
; SHOULDER
 $659E DEFB $33      ; S (NOUN)
 $659F DEFB $28      ; H
 $65A0 DEFB $0F      ; O
 $65A1 DEFB $15      ; U
 $65A2 DEFB $0C      ; L
 $65A3 DEFB $04      ; D
 $65A4 DEFB $05      ; E
 $65A5 DEFB $92      ; R
; SIDE
 $65A6 DEFB $33      ; S (ADJECTIVE)
 $65A7 DEFB $49      ; I
 $65A8 DEFB $04      ; D
 $65A9 DEFB $85      ; E
; SIDEDOOR
 $65AA DEFB $33      ; S (NOUN)
 $65AB DEFB $29      ; I
 $65AC DEFB $04      ; D
 $65AD DEFB $05      ; E
 $65AE DEFB $04      ; D
 $65AF DEFB $0F      ; O
 $65B0 DEFB $0F      ; O
 $65B1 DEFB $92      ; R
; SIGN
 $65B2 DEFB $33      ; S (NOUN)
 $65B3 DEFB $29      ; I
 $65B4 DEFB $07      ; G
 $65B5 DEFB $8E      ; N
; SING
 $65B6 DEFB $13      ; S (VERB)
 $65B7 DEFB $69      ; I
 $65B8 DEFB $0E      ; N
 $65B9 DEFB $87      ; G
; SIT
 $65BA DEFB $13      ; S (VERB)
 $65BB DEFB $E9      ; I
 $65BC DEFB $14      ; T
 $65BD DEFB $80      ; @
; SKULL
 $65BE DEFB $33      ; S (NOUN)
 $65BF DEFB $2B      ; K
 $65C0 DEFB $15      ; U
 $65C1 DEFB $0C      ; L
 $65C2 DEFB $8C      ; L
; SLASH
 $65C3 DEFB $13      ; S (VERB)
 $65C4 DEFB $EC      ; L
 $65C5 DEFB $21      ; A
 $65C6 DEFB $13      ; S
 $65C7 DEFB $C8      ; H
 $65C8 DEFW $0073    ; Alias of #R$6073.
; SLEEP
 $65CA DEFB $13      ; S (VERB)
 $65CB DEFB $EC      ; L
 $65CC DEFB $05      ; E
 $65CD DEFB $05      ; E
 $65CE DEFB $90      ; P
; SLICE
 $65CF DEFB $13      ; S (VERB)
 $65D0 DEFB $EC      ; L
 $65D1 DEFB $09      ; I
 $65D2 DEFB $03      ; C
 $65D3 DEFB $C5      ; E
 $65D4 DEFW $0073    ; Alias of #R$6073.
; SLIMY
 $65D6 DEFB $33      ; S (ADJECTIVE)
 $65D7 DEFB $4C      ; L
 $65D8 DEFB $09      ; I
 $65D9 DEFB $0D      ; M
 $65DA DEFB $99      ; Y
; SLOWLY
 $65DB DEFB $13      ; S (ADVERB)
 $65DC DEFB $0C      ; L
 $65DD DEFB $0F      ; O
 $65DE DEFB $17      ; W
 $65DF DEFB $0C      ; L
 $65E0 DEFB $99      ; Y
; SMALL
 $65E1 DEFB $33      ; S (ADJECTIVE)
 $65E2 DEFB $4D      ; M
 $65E3 DEFB $01      ; A
 $65E4 DEFB $0C      ; L
 $65E5 DEFB $8C      ; L
; SMASH
 $65E6 DEFB $13      ; S (VERB)
 $65E7 DEFB $ED      ; M
 $65E8 DEFB $21      ; A
 $65E9 DEFB $13      ; S
 $65EA DEFB $C8      ; H
 $65EB DEFW $0658    ; Alias of #R$6658.
; SMOOTH
 $65ED DEFB $33      ; S (ADJECTIVE)
 $65EE DEFB $4D      ; M
 $65EF DEFB $0F      ; O
 $65F0 DEFB $0F      ; O
 $65F1 DEFB $14      ; T
 $65F2 DEFB $88      ; H
; SMOTHERING
 $65F3 DEFB $33      ; S (ADJECTIVE)
 $65F4 DEFB $4D      ; M
 $65F5 DEFB $0F      ; O
 $65F6 DEFB $14      ; T
 $65F7 DEFB $08      ; H
 $65F8 DEFB $05      ; E
 $65F9 DEFB $12      ; R
 $65FA DEFB $09      ; I
 $65FB DEFB $0E      ; N
 $65FC DEFB $87      ; G
; SOFTLY
 $65FD DEFB $13      ; S (ADVERB)
 $65FE DEFB $0F      ; O
 $65FF DEFB $06      ; F
 $6600 DEFB $14      ; T
 $6601 DEFB $0C      ; L
 $6602 DEFB $99      ; Y
; SOME
 $6603 DEFB $33      ; S (ADJECTIVE)
 $6604 DEFB $4F      ; O
 $6605 DEFB $0D      ; M
 $6606 DEFB $85      ; E
; SOUTH
 $6607 DEFB $13      ; S (MOVE_DIR)
 $6608 DEFB $4F      ; O
 $6609 DEFB $15      ; U
 $660A DEFB $14      ; T
 $660B DEFB $88      ; H
; SOUTHEAST
 $660C DEFB $13      ; S (MOVE_DIR)
 $660D DEFB $4F      ; O
 $660E DEFB $15      ; U
 $660F DEFB $14      ; T
 $6610 DEFB $08      ; H
 $6611 DEFB $05      ; E
 $6612 DEFB $01      ; A
 $6613 DEFB $13      ; S
 $6614 DEFB $94      ; T
; SOUTHWEST
 $6615 DEFB $13      ; S (MOVE_DIR)
 $6616 DEFB $4F      ; O
 $6617 DEFB $15      ; U
 $6618 DEFB $14      ; T
 $6619 DEFB $08      ; H
 $661A DEFB $17      ; W
 $661B DEFB $05      ; E
 $661C DEFB $13      ; S
 $661D DEFB $94      ; T
; SPACE
 $661E DEFB $33      ; S (NOUN)
 $661F DEFB $30      ; P
 $6620 DEFB $01      ; A
 $6621 DEFB $03      ; C
 $6622 DEFB $85      ; E
; SPIDER
 $6623 DEFB $33      ; S (ADJECTIVE)
 $6624 DEFB $50      ; P
 $6625 DEFB $09      ; I
 $6626 DEFB $04      ; D
 $6627 DEFB $05      ; E
 $6628 DEFB $92      ; R
; STAIRS
 $6629 DEFB $33      ; S (NOUN)
 $662A DEFB $34      ; T
 $662B DEFB $01      ; A
 $662C DEFB $09      ; I
 $662D DEFB $12      ; R
 $662E DEFB $93      ; S
; STATUE
 $662F DEFB $33      ; S (NOUN)
 $6630 DEFB $34      ; T
 $6631 DEFB $01      ; A
 $6632 DEFB $14      ; T
 $6633 DEFB $15      ; U
 $6634 DEFB $85      ; E
; STEAL
 $6635 DEFB $13      ; S (VERB)
 $6636 DEFB $F4      ; T
 $6637 DEFB $05      ; E
 $6638 DEFB $01      ; A
 $6639 DEFB $CC      ; L
 $663A DEFW $068C    ; Alias of #R$668C.
; STEEP
 $663C DEFB $33      ; S (ADJECTIVE)
 $663D DEFB $54      ; T
 $663E DEFB $05      ; E
 $663F DEFB $05      ; E
 $6640 DEFB $90      ; P
; STONE
 $6641 DEFB $33      ; S (NOUN)
 $6642 DEFB $34      ; T
 $6643 DEFB $0F      ; O
 $6644 DEFB $0E      ; N
 $6645 DEFB $85      ; E
; STRAIGHT
 $6646 DEFB $33      ; S (ADJECTIVE)
 $6647 DEFB $54      ; T
 $6648 DEFB $12      ; R
 $6649 DEFB $01      ; A
 $664A DEFB $09      ; I
 $664B DEFB $07      ; G
 $664C DEFB $08      ; H
 $664D DEFB $94      ; T
; STRETCHING
 $664E DEFB $33      ; S (ADJECTIVE)
 $664F DEFB $54      ; T
 $6650 DEFB $12      ; R
 $6651 DEFB $05      ; E
 $6652 DEFB $14      ; T
 $6653 DEFB $03      ; C
 $6654 DEFB $08      ; H
 $6655 DEFB $09      ; I
 $6656 DEFB $0E      ; N
 $6657 DEFB $87      ; G
; STRIKE
 $6658 DEFB $13      ; S (VERB)
 $6659 DEFB $F4      ; T
 $665A DEFB $12      ; R
 $665B DEFB $09      ; I
 $665C DEFB $0B      ; K
 $665D DEFB $85      ; E
; STROKE
 $665E DEFB $33      ; S (NOUN)
 $665F DEFB $34      ; T
 $6660 DEFB $12      ; R
 $6661 DEFB $0F      ; O
 $6662 DEFB $0B      ; K
 $6663 DEFB $85      ; E
; STRONG
 $6664 DEFB $33      ; S (NOUN)
 $6665 DEFB $34      ; T
 $6666 DEFB $12      ; R
 $6667 DEFB $0F      ; O
 $6668 DEFB $0E      ; N
 $6669 DEFB $87      ; G
; STUFFY
 $666A DEFB $33      ; S (ADJECTIVE)
 $666B DEFB $54      ; T
 $666C DEFB $15      ; U
 $666D DEFB $06      ; F
 $666E DEFB $06      ; F
 $666F DEFB $99      ; Y
; STUNNED
 $6670 DEFB $33      ; S (ADJECTIVE)
 $6671 DEFB $54      ; T
 $6672 DEFB $15      ; U
 $6673 DEFB $0E      ; N
 $6674 DEFB $0E      ; N
 $6675 DEFB $05      ; E
 $6676 DEFB $84      ; D
; SW
 $6677 DEFB $13      ; S (MOVE_DIR)
 $6678 DEFB $57      ; W
 $6679 DEFB $C0      ; @
 $667A DEFW $0615    ; Alias of #R$6615.
; SWIM
 $667C DEFB $13      ; S (VERB)
 $667D DEFB $F7      ; W
 $667E DEFB $09      ; I
 $667F DEFB $8D      ; M
; SWORD
 $6680 DEFB $33      ; S (NOUN)
 $6681 DEFB $37      ; W
 $6682 DEFB $0F      ; O
 $6683 DEFB $12      ; R
 $6684 DEFB $84      ; D
; SYMBOLS
 $6685 DEFB $33      ; S (NOUN)
 $6686 DEFB $39      ; Y
 $6687 DEFB $0D      ; M
 $6688 DEFB $02      ; B
 $6689 DEFB $0F      ; O
 $668A DEFB $0C      ; L
 $668B DEFB $93      ; S

; "T"
;
; .
;
; .
;
; TAKE
@label=T
b$668C DEFB $14      ; T (VERB)
 $668D DEFB $E1      ; A
 $668E DEFB $0B      ; K
 $668F DEFB $85      ; E
; TALK
 $6690 DEFB $14      ; T (VERB)
 $6691 DEFB $61      ; A
 $6692 DEFB $0C      ; L
 $6693 DEFB $8B      ; K
; TANGLED
 $6694 DEFB $34      ; T (ADJECTIVE)
 $6695 DEFB $41      ; A
 $6696 DEFB $0E      ; N
 $6697 DEFB $07      ; G
 $6698 DEFB $0C      ; L
 $6699 DEFB $05      ; E
 $669A DEFB $84      ; D
; THAT
 $669B DEFB $54      ; T (ARTICLE_MISC)
 $669C DEFB $08      ; H
 $669D DEFB $01      ; A
 $669E DEFB $94      ; T
; THE
 $669F DEFB $54      ; T (ARTICLE_MISC)
 $66A0 DEFB $08      ; H
 $66A1 DEFB $85      ; E
; THEN
 $66A2 DEFB $54      ; T (THEN)
 $66A3 DEFB $68      ; H
 $66A4 DEFB $05      ; E
 $66A5 DEFB $8E      ; N
; THICK
 $66A6 DEFB $34      ; T (ADJECTIVE)
 $66A7 DEFB $48      ; H
 $66A8 DEFB $09      ; I
 $66A9 DEFB $03      ; C
 $66AA DEFB $8B      ; K
; THIEF
 $66AB DEFB $34      ; T (NOUN)
 $66AC DEFB $28      ; H
 $66AD DEFB $09      ; I
 $66AE DEFB $05      ; E
 $66AF DEFB $86      ; F
; THIN
 $66B0 DEFB $34      ; T (ADJECTIVE)
 $66B1 DEFB $48      ; H
 $66B2 DEFB $09      ; I
 $66B3 DEFB $8E      ; N
; THORIN
 $66B4 DEFB $34      ; T (NOUN)
 $66B5 DEFB $28      ; H
 $66B6 DEFB $0F      ; O
 $66B7 DEFB $12      ; R
 $66B8 DEFB $09      ; I
 $66B9 DEFB $8E      ; N
; THREADS
 $66BA DEFB $34      ; T (ADJECTIVE)
 $66BB DEFB $48      ; H
 $66BC DEFB $12      ; R
 $66BD DEFB $05      ; E
 $66BE DEFB $01      ; A
 $66BF DEFB $04      ; D
 $66C0 DEFB $93      ; S
; THROUGH
 $66C1 DEFB $34      ; T (PREPOSITION)
 $66C2 DEFB $68      ; H
 $66C3 DEFB $12      ; R
 $66C4 DEFB $0F      ; O
 $66C5 DEFB $15      ; U
 $66C6 DEFB $07      ; G
 $66C7 DEFB $88      ; H
; THROW
 $66C8 DEFB $14      ; T (VERB)
 $66C9 DEFB $E8      ; H
 $66CA DEFB $12      ; R
 $66CB DEFB $0F      ; O
 $66CC DEFB $97      ; W
; TIE
 $66CD DEFB $14      ; T (VERB)
 $66CE DEFB $E9      ; I
 $66CF DEFB $05      ; E
 $66D0 DEFB $80      ; @
; TO
 $66D1 DEFB $34      ; T (PREPOSITION)
 $66D2 DEFB $6F      ; O
 $66D3 DEFB $80      ; @
; TOO
 $66D4 DEFB $34      ; T (PREPOSITION)
 $66D5 DEFB $6F      ; O
 $66D6 DEFB $8F      ; O
; TORCH
 $66D7 DEFB $34      ; T (NOUN)
 $66D8 DEFB $AF      ; O
 $66D9 DEFB $32      ; R
 $66DA DEFB $03      ; C
 $66DB DEFB $88      ; H
; TOWN
 $66DC DEFB $34      ; T (NOUN)
 $66DD DEFB $2F      ; O
 $66DE DEFB $17      ; W
 $66DF DEFB $8E      ; N
; TRAP
 $66E0 DEFB $34      ; T (ADJECTIVE)
 $66E1 DEFB $52      ; R
 $66E2 DEFB $01      ; A
 $66E3 DEFB $90      ; P
; TREASURE
 $66E4 DEFB $34      ; T (NOUN)
 $66E5 DEFB $32      ; R
 $66E6 DEFB $05      ; E
 $66E7 DEFB $01      ; A
 $66E8 DEFB $13      ; S
 $66E9 DEFB $15      ; U
 $66EA DEFB $12      ; R
 $66EB DEFB $85      ; E
; TREE
 $66EC DEFB $34      ; T (NOUN)
 $66ED DEFB $B2      ; R
 $66EE DEFB $05      ; E
 $66EF DEFB $85      ; E
; TREELESS
 $66F0 DEFB $34      ; T (ADJECTIVE)
 $66F1 DEFB $52      ; R
 $66F2 DEFB $05      ; E
 $66F3 DEFB $05      ; E
 $66F4 DEFB $0C      ; L
 $66F5 DEFB $05      ; E
 $66F6 DEFB $13      ; S
 $66F7 DEFB $93      ; S
; TROLL
 $66F8 DEFB $34      ; T (NOUN)
 $66F9 DEFB $32      ; R
 $66FA DEFB $0F      ; O
 $66FB DEFB $0C      ; L
 $66FC DEFB $8C      ; L
; TROLLS
 $66FD DEFB $34      ; T (ADJECTIVE)
 $66FE DEFB $52      ; R
 $66FF DEFB $0F      ; O
 $6700 DEFB $0C      ; L
 $6701 DEFB $0C      ; L
 $6702 DEFB $93      ; S
; TUNNEL
 $6703 DEFB $34      ; T (ADJECTIVE)
 $6704 DEFB $55      ; U
 $6705 DEFB $0E      ; N
 $6706 DEFB $0E      ; N
 $6707 DEFB $05      ; E
 $6708 DEFB $8C      ; L
; TURN
 $6709 DEFB $14      ; T (VERB)
 $670A DEFB $F5      ; U
 $670B DEFB $12      ; R
 $670C DEFB $8E      ; N

; "U"
;
; .
;
; .
;
; U
@label=U
b$670D DEFB $15      ; U (ADVERB)
 $670E DEFB $00      ; @
 $670F DEFB $C0      ; @
 $6710 DEFW $0725    ; Alias of #R$6725.
; UNLOCK
 $6712 DEFB $15      ; U (VERB)
 $6713 DEFB $EE      ; N
 $6714 DEFB $0C      ; L
 $6715 DEFB $0F      ; O
 $6716 DEFB $03      ; C
 $6717 DEFB $8B      ; K
; UNLOCKED
 $6718 DEFB $35      ; U (ADJECTIVE)
 $6719 DEFB $4E      ; N
 $671A DEFB $0C      ; L
 $671B DEFB $0F      ; O
 $671C DEFB $03      ; C
 $671D DEFB $0B      ; K
 $671E DEFB $05      ; E
 $671F DEFB $84      ; D
; UNTIE
 $6720 DEFB $15      ; U (VERB)
 $6721 DEFB $EE      ; N (Beugung: S)
 $6722 DEFB $14      ; T
 $6723 DEFB $09      ; I
 $6724 DEFB $85      ; E
; UP
 $6725 DEFB $15      ; U (MOVE_DIR)
 $6726 DEFB $50      ; P
 $6727 DEFB $80      ; @

; "V"
;
; .
;
; .
;
; VALIANT
@label=V
b$6728 DEFB $36      ; V (ADJECTIVE)
 $6729 DEFB $41      ; A
 $672A DEFB $0C      ; L
 $672B DEFB $09      ; I
 $672C DEFB $01      ; A
 $672D DEFB $0E      ; N
 $672E DEFB $94      ; T
; VALLEY
 $672F DEFB $36      ; V (NOUN)
 $6730 DEFB $21      ; A
 $6731 DEFB $0C      ; L
 $6732 DEFB $0C      ; L
 $6733 DEFB $05      ; E
 $6734 DEFB $99      ; Y
; VALUABLE
 $6735 DEFB $36      ; V (ADJECTIVE)
 $6736 DEFB $41      ; A
 $6737 DEFB $0C      ; L
 $6738 DEFB $15      ; U
 $6739 DEFB $01      ; A
 $673A DEFB $02      ; B
 $673B DEFB $0C      ; L
 $673C DEFB $85      ; E
; VERY
 $673D DEFB $36      ; V (ADJECTIVE)
 $673E DEFB $45      ; E
 $673F DEFB $12      ; R
 $6740 DEFB $99      ; Y
; VICIOUS
 $6741 DEFB $36      ; V (ADJECTIVE)
 $6742 DEFB $49      ; I
 $6743 DEFB $03      ; C
 $6744 DEFB $09      ; I
 $6745 DEFB $0F      ; O
 $6746 DEFB $15      ; U
 $6747 DEFB $93      ; S
; VICIOUSLY
 $6748 DEFB $16      ; V (ADVERB)
 $6749 DEFB $09      ; I
 $674A DEFB $03      ; C
 $674B DEFB $09      ; I
 $674C DEFB $0F      ; O
 $674D DEFB $15      ; U
 $674E DEFB $13      ; S
 $674F DEFB $0C      ; L
 $6750 DEFB $99      ; Y

; "W"
;
; .
;
; .
;
; W
@label=W
b$6751 DEFB $17      ; W (MOVE_DIR)
 $6752 DEFB $40      ; @
 $6753 DEFB $C0      ; @
 $6754 DEFW $0779    ; Alias of #R$6779.
; WAIT
 $6756 DEFB $17      ; W (VERB)
 $6757 DEFB $E1      ; A
 $6758 DEFB $09      ; I
 $6759 DEFB $94      ; T
; WALL
 $675A DEFB $37      ; W (NOUN)
 $675B DEFB $A1      ; A
 $675C DEFB $0C      ; L
 $675D DEFB $8C      ; L
; WATER
 $675E DEFB $37      ; W (NOUN)
 $675F DEFB $21      ; A
 $6760 DEFB $14      ; T
 $6761 DEFB $05      ; E
 $6762 DEFB $92      ; R
; WATERFALL
 $6763 DEFB $37      ; W (NOUN)
 $6764 DEFB $21      ; A
 $6765 DEFB $14      ; T
 $6766 DEFB $05      ; E
 $6767 DEFB $12      ; R
 $6768 DEFB $06      ; F
 $6769 DEFB $01      ; A
 $676A DEFB $0C      ; L
 $676B DEFB $8C      ; L
; WEAPON
 $676C DEFB $37      ; W (NOUN)
 $676D DEFB $25      ; E
 $676E DEFB $01      ; A
 $676F DEFB $10      ; P
 $6770 DEFB $0F      ; O
 $6771 DEFB $8E      ; N
; WEAR
 $6772 DEFB $17      ; W (VERB)
 $6773 DEFB $E5      ; E
 $6774 DEFB $01      ; A
 $6775 DEFB $92      ; R
; WEB
 $6776 DEFB $37      ; W (NOUN)
 $6777 DEFB $25      ; E
 $6778 DEFB $82      ; B
; WEST
 $6779 DEFB $17      ; W (MOVE_DIR)
 $677A DEFB $45      ; E
 $677B DEFB $13      ; S
 $677C DEFB $94      ; T
; WIDE
 $677D DEFB $37      ; W (ADJECTIVE)
 $677E DEFB $49      ; I
 $677F DEFB $04      ; D
 $6780 DEFB $85      ; E
; WILD
 $6781 DEFB $37      ; W (ADJECTIVE)
 $6782 DEFB $49      ; I
 $6783 DEFB $0C      ; L
 $6784 DEFB $84      ; D
; WINDING
 $6785 DEFB $37      ; W (ADJECTIVE)
 $6786 DEFB $49      ; I
 $6787 DEFB $0E      ; N
 $6788 DEFB $04      ; D
 $6789 DEFB $09      ; I
 $678A DEFB $0E      ; N
 $678B DEFB $87      ; G
; WINDOW
 $678C DEFB $37      ; W (NOUN)
 $678D DEFB $29      ; I
 $678E DEFB $0E      ; N
 $678F DEFB $04      ; D
 $6790 DEFB $0F      ; O
 $6791 DEFB $97      ; W
; WINE
 $6792 DEFB $37      ; W (NOUN)
 $6793 DEFB $29      ; I
 $6794 DEFB $0E      ; N
 $6795 DEFB $85      ; E
; WITH
 $6796 DEFB $37      ; W (PREPOSITION)
 $6797 DEFB $69      ; I
 $6798 DEFB $14      ; T
 $6799 DEFB $88      ; H
; WARG
 $679A DEFB $37      ; W (NOUN)
 $679B DEFB $21      ; A
 $679C DEFB $12      ; R
 $679D DEFB $87      ; G
; WOOD
 $679E DEFB $37      ; W (ADJECTIVE)
 $679F DEFB $4F      ; O
 $67A0 DEFB $0F      ; O
 $67A1 DEFB $84      ; D
; WOODEN
 $67A2 DEFB $37      ; W (ADJECTIVE)
 $67A3 DEFB $4F      ; O
 $67A4 DEFB $0F      ; O
 $67A5 DEFB $04      ; D
 $67A6 DEFB $05      ; E
 $67A7 DEFB $8E      ; N

; "Y"
;
; .
;
; .
;
; YOU
@label=Y
b$67A8 DEFB $39      ; Y (NOUN)
 $67A9 DEFB $2F      ; O
 $67AA DEFB $95      ; U

; Data block at 67AB
b$67AB DEFB $00
; ABLE
 $67AC DEFB $01                             ; A
 $67AD DEFB $02                             ; B
 $67AE DEFB $0C                             ; L
 $67AF DEFB $85                             ; E
; ABOUT
 $67B0 DEFB $01                             ; A
 $67B1 DEFB $02                             ; B
 $67B2 DEFB $0F                             ; O
 $67B3 DEFB $15                             ; U
 $67B4 DEFB $94                             ; T
; ABOVE
 $67B5 DEFB $01                             ; A
 $67B6 DEFB $02                             ; B
 $67B7 DEFB $0F                             ; O
 $67B8 DEFB $16                             ; V
 $67B9 DEFB $85                             ; E
; ADVENTURE
 $67BA DEFB $01                             ; A
 $67BB DEFB $04                             ; D
 $67BC DEFB $16                             ; V
 $67BD DEFB $05                             ; E
 $67BE DEFB $0E                             ; N
 $67BF DEFB $14                             ; T
 $67C0 DEFB $15                             ; U
 $67C1 DEFB $12                             ; R
 $67C2 DEFB $85                             ; E
; AGAIN
 $67C3 DEFB $01                             ; A
 $67C4 DEFB $07                             ; G
 $67C5 DEFB $01                             ; A
 $67C6 DEFB $09                             ; I
 $67C7 DEFB $8E                             ; N
; AGAINST
 $67C8 DEFB $01                             ; A
 $67C9 DEFB $07                             ; G
 $67CA DEFB $01                             ; A
 $67CB DEFB $09                             ; I
 $67CC DEFB $0E                             ; N
 $67CD DEFB $13                             ; S
 $67CE DEFB $94                             ; T
; AHEAD
 $67CF DEFB $01                             ; A
 $67D0 DEFB $08                             ; H
 $67D1 DEFB $05                             ; E
 $67D2 DEFB $01                             ; A
 $67D3 DEFB $84                             ; D
; ALIVE
 $67D4 DEFB $01                             ; A
 $67D5 DEFB $0C                             ; L
 $67D6 DEFB $09                             ; I
 $67D7 DEFB $16                             ; V
 $67D8 DEFB $85                             ; E
; ALMOST
 $67D9 DEFB $01                             ; A
 $67DA DEFB $0C                             ; L
 $67DB DEFB $0D                             ; M
 $67DC DEFB $0F                             ; O
 $67DD DEFB $13                             ; S
 $67DE DEFB $94                             ; T
; ALONG
 $67DF DEFB $01                             ; A
 $67E0 DEFB $0C                             ; L
 $67E1 DEFB $0F                             ; O
 $67E2 DEFB $0E                             ; N
 $67E3 DEFB $87                             ; G
; ANIMAL
 $67E4 DEFB $01                             ; A
 $67E5 DEFB $0E                             ; N
 $67E6 DEFB $09                             ; I
 $67E7 DEFB $0D                             ; M
 $67E8 DEFB $01                             ; A
 $67E9 DEFB $8C                             ; L
; APPEAR
 $67EA DEFB $01                             ; A
 $67EB DEFB $90                             ; P
 $67EC DEFB $10                             ; P
 $67ED DEFB $05                             ; E
 $67EE DEFB $01                             ; A
 $67EF DEFB $92                             ; R
; APPROACH
 $67F0 DEFB $01                             ; A
 $67F1 DEFB $90                             ; P
 $67F2 DEFB $B0                             ; P
 $67F3 DEFB $12                             ; R
 $67F4 DEFB $0F                             ; O
 $67F5 DEFB $01                             ; A
 $67F6 DEFB $03                             ; C
 $67F7 DEFB $88                             ; H
; AROUND
 $67F8 DEFB $01                             ; A
 $67F9 DEFB $12                             ; R
 $67FA DEFB $0F                             ; O
 $67FB DEFB $15                             ; U
 $67FC DEFB $0E                             ; N
 $67FD DEFB $84                             ; D
; ARRIVES
 $67FE DEFB $01                             ; A
 $67FF DEFB $12                             ; R
 $6800 DEFB $12                             ; R
 $6801 DEFB $09                             ; I
 $6802 DEFB $16                             ; V
 $6803 DEFB $05                             ; E
 $6804 DEFB $93                             ; S
; AS
 $6805 DEFB $01                             ; A
 $6806 DEFB $13                             ; S
 $6807 DEFB $80                             ; @
; ASIDE
 $6808 DEFB $01                             ; A
 $6809 DEFB $13                             ; S
 $680A DEFB $09                             ; I
 $680B DEFB $04                             ; D
 $680C DEFB $85                             ; E
; ASLEEP
 $680D DEFB $01                             ; A
 $680E DEFB $13                             ; S
 $680F DEFB $0C                             ; L
 $6810 DEFB $05                             ; E
 $6811 DEFB $05                             ; E
 $6812 DEFB $90                             ; P
; ATTEMPT
 $6813 DEFB $01                             ; A
 $6814 DEFB $94                             ; T
 $6815 DEFB $14                             ; T
 $6816 DEFB $05                             ; E
 $6817 DEFB $0D                             ; M
 $6818 DEFB $10                             ; P
 $6819 DEFB $94                             ; T
; AWAY
 $681A DEFB $01                             ; A
 $681B DEFB $17                             ; W
 $681C DEFB $01                             ; A
 $681D DEFB $99                             ; Y
; BANK
 $681E DEFB $02                             ; B
 $681F DEFB $01                             ; A
 $6820 DEFB $0E                             ; N
 $6821 DEFB $8B                             ; K
; BE
 $6822 DEFB $02                             ; B
 $6823 DEFB $05                             ; E
 $6824 DEFB $80                             ; @
; BEHIND
 $6825 DEFB $02                             ; B
 $6826 DEFB $05                             ; E
 $6827 DEFB $08                             ; H
 $6828 DEFB $09                             ; I
 $6829 DEFB $0E                             ; N
 $682A DEFB $84                             ; D
; BELOW
 $682B DEFB $02                             ; B
 $682C DEFB $05                             ; E
 $682D DEFB $0C                             ; L
 $682E DEFB $0F                             ; O
 $682F DEFB $97                             ; W
; BIRTHDAY
 $6830 DEFB $02                             ; B
 $6831 DEFB $09                             ; I
 $6832 DEFB $12                             ; R
 $6833 DEFB $14                             ; T
 $6834 DEFB $08                             ; H
 $6835 DEFB $04                             ; D
 $6836 DEFB $01                             ; A
 $6837 DEFB $99                             ; Y
; BLIMEY
 $6838 DEFB $02                             ; B
 $6839 DEFB $0C                             ; L
 $683A DEFB $09                             ; I
 $683B DEFB $0D                             ; M
 $683C DEFB $05                             ; E
 $683D DEFB $99                             ; Y
; BRANDISH
 $683E DEFB $02                             ; B
 $683F DEFB $92                             ; R
 $6840 DEFB $21                             ; A
 $6841 DEFB $0E                             ; N
 $6842 DEFB $04                             ; D
 $6843 DEFB $09                             ; I
 $6844 DEFB $13                             ; S
 $6845 DEFB $88                             ; H
; BRINK
 $6846 DEFB $02                             ; B
 $6847 DEFB $12                             ; R
 $6848 DEFB $09                             ; I
 $6849 DEFB $0E                             ; N
 $684A DEFB $8B                             ; K
; BROADSIDE
 $684B DEFB $02                             ; B
 $684C DEFB $12                             ; R
 $684D DEFB $0F                             ; O
 $684E DEFB $01                             ; A
 $684F DEFB $04                             ; D
 $6850 DEFB $13                             ; S
 $6851 DEFB $09                             ; I
 $6852 DEFB $04                             ; D
 $6853 DEFB $85                             ; E
; BULBOUS
 $6854 DEFB $02                             ; B
 $6855 DEFB $15                             ; U
 $6856 DEFB $0C                             ; L
 $6857 DEFB $02                             ; B
 $6858 DEFB $0F                             ; O
 $6859 DEFB $15                             ; U
 $685A DEFB $93                             ; S
; BY
 $685B DEFB $02                             ; B
 $685C DEFB $19                             ; Y
 $685D DEFB $80                             ; @
; CARRYING
 $685E DEFB $03                             ; C
 $685F DEFB $01                             ; A
 $6860 DEFB $12                             ; R
 $6861 DEFB $12                             ; R
 $6862 DEFB $19                             ; Y
 $6863 DEFB $09                             ; I
 $6864 DEFB $0E                             ; N
 $6865 DEFB $87                             ; G
; CLEAVE
 $6866 DEFB $03                             ; C
 $6867 DEFB $8C                             ; L
 $6868 DEFB $05                             ; E
 $6869 DEFB $01                             ; A
 $686A DEFB $16                             ; V
 $686B DEFB $85                             ; E
; CLIFF
 $686C DEFB $03                             ; C
 $686D DEFB $0C                             ; L
 $686E DEFB $09                             ; I
 $686F DEFB $06                             ; F
 $6870 DEFB $86                             ; F
; COME
 $6871 DEFB $03                             ; C
 $6872 DEFB $8F                             ; O
 $6873 DEFB $0D                             ; M
 $6874 DEFB $85                             ; E
; COMPLETE
 $6875 DEFB $03                             ; C
 $6876 DEFB $8F                             ; O
 $6877 DEFB $8D                             ; M
 $6878 DEFB $10                             ; P
 $6879 DEFB $0C                             ; L
 $687A DEFB $05                             ; E
 $687B DEFB $14                             ; T
 $687C DEFB $85                             ; E
; CONGRATULATION
 $687D DEFB $03                             ; C
 $687E DEFB $8F                             ; O
 $687F DEFB $0E                             ; N
 $6880 DEFB $07                             ; G
 $6881 DEFB $12                             ; R
 $6882 DEFB $01                             ; A
 $6883 DEFB $14                             ; T
 $6884 DEFB $15                             ; U
 $6885 DEFB $0C                             ; L
 $6886 DEFB $01                             ; A
 $6887 DEFB $14                             ; T
 $6888 DEFB $09                             ; I
 $6889 DEFB $0F                             ; O
 $688A DEFB $8E                             ; N
; COOK
 $688B DEFB $03                             ; C
 $688C DEFB $0F                             ; O
 $688D DEFB $0F                             ; O
 $688E DEFB $8B                             ; K
; CURRENT
 $688F DEFB $03                             ; C
 $6890 DEFB $15                             ; U
 $6891 DEFB $12                             ; R
 $6892 DEFB $12                             ; R
 $6893 DEFB $05                             ; E
 $6894 DEFB $0E                             ; N
 $6895 DEFB $94                             ; T
; CRISP
 $6896 DEFB $03                             ; C
 $6897 DEFB $12                             ; R
 $6898 DEFB $09                             ; I
 $6899 DEFB $13                             ; S
 $689A DEFB $90                             ; P
; DAWN
 $689B DEFB $04                             ; D
 $689C DEFB $81                             ; A
 $689D DEFB $17                             ; W
 $689E DEFB $8E                             ; N
; DAY
 $689F DEFB $04                             ; D
 $68A0 DEFB $01                             ; A
 $68A1 DEFB $99                             ; Y
; DEFENSE
 $68A2 DEFB $04                             ; D
 $68A3 DEFB $05                             ; E
 $68A4 DEFB $06                             ; F
 $68A5 DEFB $05                             ; E
 $68A6 DEFB $0E                             ; N
 $68A7 DEFB $13                             ; S
 $68A8 DEFB $85                             ; E
; DESCENDS
 $68A9 DEFB $04                             ; D
 $68AA DEFB $05                             ; E
 $68AB DEFB $13                             ; S
 $68AC DEFB $03                             ; C
 $68AD DEFB $05                             ; E
 $68AE DEFB $0E                             ; N
 $68AF DEFB $04                             ; D
 $68B0 DEFB $93                             ; S
; DIE
 $68B1 DEFB $04                             ; D
 $68B2 DEFB $09                             ; I
 $68B3 DEFB $85                             ; E
; DID
 $68B4 DEFB $04                             ; D
 $68B5 DEFB $09                             ; I
 $68B6 DEFB $84                             ; D
; DIM
 $68B7 DEFB $04                             ; D
 $68B8 DEFB $09                             ; I
 $68B9 DEFB $8D                             ; M
; DISTANCE
 $68BA DEFB $04                             ; D
 $68BB DEFB $09                             ; I
 $68BC DEFB $13                             ; S
 $68BD DEFB $14                             ; T
 $68BE DEFB $01                             ; A
 $68BF DEFB $0E                             ; N
 $68C0 DEFB $03                             ; C
 $68C1 DEFB $85                             ; E
; DO
 $68C2 DEFB $04                             ; D
 $68C3 DEFB $8F                             ; O
 $68C4 DEFB $20                             ; @
 $68C5 DEFB $80                             ; @
; DO
 $68C6 DEFB $04                             ; D
 $68C7 DEFB $8F                             ; O
 $68C8 DEFB $A0                             ; @
 $68C9 DEFB $80                             ; @
; DRIPS
 $68CA DEFB $04                             ; D
 $68CB DEFB $12                             ; R
 $68CC DEFB $09                             ; I
 $68CD DEFB $10                             ; P
 $68CE DEFB $93                             ; S
; EFFORT
 $68CF DEFB $05                             ; E
 $68D0 DEFB $06                             ; F
 $68D1 DEFB $06                             ; F
 $68D2 DEFB $0F                             ; O
 $68D3 DEFB $12                             ; R
 $68D4 DEFB $94                             ; T
; END
 $68D5 DEFB $05                             ; E
 $68D6 DEFB $8E                             ; N
 $68D7 DEFB $04                             ; D
 $68D8 DEFB $80                             ; @
; ENTRANCE
 $68D9 DEFB $05                             ; E
 $68DA DEFB $0E                             ; N
 $68DB DEFB $14                             ; T
 $68DC DEFB $12                             ; R
 $68DD DEFB $01                             ; A
 $68DE DEFB $0E                             ; N
 $68DF DEFB $03                             ; C
 $68E0 DEFB $85                             ; E
; EVAPORATE
 $68E1 DEFB $05                             ; E
 $68E2 DEFB $96                             ; V
 $68E3 DEFB $01                             ; A
 $68E4 DEFB $10                             ; P
 $68E5 DEFB $0F                             ; O
 $68E6 DEFB $12                             ; R
 $68E7 DEFB $01                             ; A
 $68E8 DEFB $14                             ; T
 $68E9 DEFB $85                             ; E
; EVENING
 $68EA DEFB $05                             ; E
 $68EB DEFB $16                             ; V
 $68EC DEFB $05                             ; E
 $68ED DEFB $0E                             ; N
 $68EE DEFB $09                             ; I
 $68EF DEFB $0E                             ; N
 $68F0 DEFB $87                             ; G
; EXITS
 $68F1 DEFB $05                             ; E
 $68F2 DEFB $18                             ; X
 $68F3 DEFB $09                             ; I
 $68F4 DEFB $14                             ; T
 $68F5 DEFB $93                             ; S
; EXPECT
 $68F6 DEFB $05                             ; E
 $68F7 DEFB $18                             ; X
 $68F8 DEFB $10                             ; P
 $68F9 DEFB $05                             ; E
 $68FA DEFB $03                             ; C
 $68FB DEFB $94                             ; T
; FAILED
 $68FC DEFB $06                             ; F
 $68FD DEFB $01                             ; A
 $68FE DEFB $09                             ; I
 $68FF DEFB $0C                             ; L
 $6900 DEFB $05                             ; E
 $6901 DEFB $84                             ; D
; FAILING
 $6902 DEFB $06                             ; F
 $6903 DEFB $01                             ; A
 $6904 DEFB $09                             ; I
 $6905 DEFB $0C                             ; L
 $6906 DEFB $09                             ; I
 $6907 DEFB $0E                             ; N
 $6908 DEFB $87                             ; G
; FAR
 $6909 DEFB $06                             ; F
 $690A DEFB $01                             ; A
 $690B DEFB $92                             ; R
; FATAL
 $690C DEFB $06                             ; F
 $690D DEFB $01                             ; A
 $690E DEFB $14                             ; T
 $690F DEFB $01                             ; A
 $6910 DEFB $8C                             ; L
; FEED
 $6911 DEFB $06                             ; F
 $6912 DEFB $05                             ; E
 $6913 DEFB $05                             ; E
 $6914 DEFB $84                             ; D
; FELT
 $6915 DEFB $06                             ; F
 $6916 DEFB $05                             ; E
 $6917 DEFB $0C                             ; L
 $6918 DEFB $94                             ; T
; FIT
 $6919 DEFB $06                             ; F
 $691A DEFB $09                             ; I
 $691B DEFB $94                             ; T
; FIRST
 $691C DEFB $06                             ; F
 $691D DEFB $09                             ; I
 $691E DEFB $12                             ; R
 $691F DEFB $13                             ; S
 $6920 DEFB $94                             ; T
; FLAME
 $6921 DEFB $06                             ; F
 $6922 DEFB $8C                             ; L
 $6923 DEFB $01                             ; A
 $6924 DEFB $0D                             ; M
 $6925 DEFB $85                             ; E
; FLOAT
 $6926 DEFB $06                             ; F
 $6927 DEFB $8C                             ; L
 $6928 DEFB $0F                             ; O
 $6929 DEFB $01                             ; A
 $692A DEFB $94                             ; T
; FLYING
 $692B DEFB $06                             ; F
 $692C DEFB $0C                             ; L
 $692D DEFB $19                             ; Y
 $692E DEFB $09                             ; I
 $692F DEFB $0E                             ; N
 $6930 DEFB $87                             ; G
; FOOT
 $6931 DEFB $06                             ; F
 $6932 DEFB $0F                             ; O
 $6933 DEFB $0F                             ; O
 $6934 DEFB $94                             ; T
; FOOTING
 $6935 DEFB $06                             ; F
 $6936 DEFB $0F                             ; O
 $6937 DEFB $0F                             ; O
 $6938 DEFB $14                             ; T
 $6939 DEFB $09                             ; I
 $693A DEFB $0E                             ; N
 $693B DEFB $87                             ; G
; FOUR
 $693C DEFB $06                             ; F
 $693D DEFB $0F                             ; O
 $693E DEFB $15                             ; U
 $693F DEFB $92                             ; R
; FRONT
 $6940 DEFB $06                             ; F
 $6941 DEFB $12                             ; R
 $6942 DEFB $0F                             ; O
 $6943 DEFB $0E                             ; N
 $6944 DEFB $94                             ; T
; GETTING
 $6945 DEFB $07                             ; G
 $6946 DEFB $05                             ; E
 $6947 DEFB $14                             ; T
 $6948 DEFB $14                             ; T
 $6949 DEFB $09                             ; I
 $694A DEFB $0E                             ; N
 $694B DEFB $87                             ; G
; GLANCING
 $694C DEFB $07                             ; G
 $694D DEFB $0C                             ; L
 $694E DEFB $01                             ; A
 $694F DEFB $0E                             ; N
 $6950 DEFB $03                             ; C
 $6951 DEFB $09                             ; I
 $6952 DEFB $0E                             ; N
 $6953 DEFB $87                             ; G
; GLIDES
 $6954 DEFB $07                             ; G
 $6955 DEFB $0C                             ; L
 $6956 DEFB $09                             ; I
 $6957 DEFB $04                             ; D
 $6958 DEFB $05                             ; E
 $6959 DEFB $93                             ; S
; GLUTTONY
 $695A DEFB $07                             ; G
 $695B DEFB $0C                             ; L
 $695C DEFB $15                             ; U
 $695D DEFB $14                             ; T
 $695E DEFB $14                             ; T
 $695F DEFB $0F                             ; O
 $6960 DEFB $0E                             ; N
 $6961 DEFB $99                             ; Y
; GOT
 $6962 DEFB $07                             ; G
 $6963 DEFB $0F                             ; O
 $6964 DEFB $94                             ; T
; GROUND
 $6965 DEFB $07                             ; G
 $6966 DEFB $12                             ; R
 $6967 DEFB $0F                             ; O
 $6968 DEFB $15                             ; U
 $6969 DEFB $0E                             ; N
 $696A DEFB $84                             ; D
; GROW
 $696B DEFB $07                             ; G
 $696C DEFB $12                             ; R
 $696D DEFB $0F                             ; O
 $696E DEFB $97                             ; W
; GUARD
 $696F DEFB $07                             ; G
 $6970 DEFB $15                             ; U
 $6971 DEFB $01                             ; A
 $6972 DEFB $12                             ; R
 $6973 DEFB $84                             ; D
; HANGING
 $6974 DEFB $08                             ; H
 $6975 DEFB $01                             ; A
 $6976 DEFB $0E                             ; N
 $6977 DEFB $07                             ; G
 $6978 DEFB $09                             ; I
 $6979 DEFB $0E                             ; N
 $697A DEFB $87                             ; G
; HAS
 $697B DEFB $08                             ; H
 $697C DEFB $01                             ; A
 $697D DEFB $93                             ; S
; HAVE
 $697E DEFB $08                             ; H
 $697F DEFB $01                             ; A
 $6980 DEFB $16                             ; V
 $6981 DEFB $85                             ; E
; HE
 $6982 DEFB $08                             ; H
 $6983 DEFB $05                             ; E
 $6984 DEFB $80                             ; @
; HEAR
 $6985 DEFB $08                             ; H
 $6986 DEFB $85                             ; E
 $6987 DEFB $81                             ; A
 $6988 DEFB $92                             ; R
; HERE
 $6989 DEFB $08                             ; H
 $698A DEFB $05                             ; E
 $698B DEFB $12                             ; R
 $698C DEFB $85                             ; E
; HIM
 $698D DEFB $08                             ; H
 $698E DEFB $09                             ; I
 $698F DEFB $8D                             ; M
; HIS
 $6990 DEFB $08                             ; H
 $6991 DEFB $09                             ; I
 $6992 DEFB $93                             ; S
; HOW
 $6993 DEFB $08                             ; H
 $6994 DEFB $0F                             ; O
 $6995 DEFB $97                             ; W
; HOWLS
 $6996 DEFB $08                             ; H
 $6997 DEFB $0F                             ; O
 $6998 DEFB $17                             ; W
 $6999 DEFB $0C                             ; L
 $699A DEFB $93                             ; S
; HURRY
 $699B DEFB $08                             ; H
 $699C DEFB $15                             ; U
 $699D DEFB $12                             ; R
 $699E DEFB $12                             ; R
 $699F DEFB $99                             ; Y
; INEFFECTIVE
 $69A0 DEFB $09                             ; I
 $69A1 DEFB $0E                             ; N
 $69A2 DEFB $05                             ; E
 $69A3 DEFB $06                             ; F
 $69A4 DEFB $06                             ; F
 $69A5 DEFB $05                             ; E
 $69A6 DEFB $03                             ; C
 $69A7 DEFB $14                             ; T
 $69A8 DEFB $09                             ; I
 $69A9 DEFB $16                             ; V
 $69AA DEFB $85                             ; E
; ITS
 $69AB DEFB $09                             ; I
 $69AC DEFB $14                             ; T
 $69AD DEFB $93                             ; S
; JOB
 $69AE DEFB $0A                             ; J
 $69AF DEFB $0F                             ; O
 $69B0 DEFB $82                             ; B
; JUST
 $69B1 DEFB $0A                             ; J
 $69B2 DEFB $15                             ; U
 $69B3 DEFB $13                             ; S
 $69B4 DEFB $94                             ; T
; LURCH
 $69B5 DEFB $0C                             ; L
 $69B6 DEFB $15                             ; U
 $69B7 DEFB $12                             ; R
 $69B8 DEFB $03                             ; C
 $69B9 DEFB $88                             ; H
; KEEPS
 $69BA DEFB $0B                             ; K
 $69BB DEFB $05                             ; E
 $69BC DEFB $05                             ; E
 $69BD DEFB $10                             ; P
 $69BE DEFB $93                             ; S
; KNOCKS
 $69BF DEFB $0B                             ; K
 $69C0 DEFB $0E                             ; N
 $69C1 DEFB $0F                             ; O
 $69C2 DEFB $03                             ; C
 $69C3 DEFB $0B                             ; K
 $69C4 DEFB $93                             ; S
; KNOW
 $69C5 DEFB $0B                             ; K
 $69C6 DEFB $0E                             ; N
 $69C7 DEFB $0F                             ; O
 $69C8 DEFB $97                             ; W
; LAST
 $69C9 DEFB $0C                             ; L
 $69CA DEFB $01                             ; A
 $69CB DEFB $13                             ; S
 $69CC DEFB $94                             ; T
; LAUGHS
 $69CD DEFB $0C                             ; L
 $69CE DEFB $01                             ; A
 $69CF DEFB $15                             ; U
 $69D0 DEFB $07                             ; G
 $69D1 DEFB $08                             ; H
 $69D2 DEFB $93                             ; S
; LAUGHTER
 $69D3 DEFB $0C                             ; L
 $69D4 DEFB $01                             ; A
 $69D5 DEFB $15                             ; U
 $69D6 DEFB $07                             ; G
 $69D7 DEFB $08                             ; H
 $69D8 DEFB $14                             ; T
 $69D9 DEFB $05                             ; E
 $69DA DEFB $92                             ; R
; LIE
 $69DB DEFB $0C                             ; L
 $69DC DEFB $89                             ; I
 $69DD DEFB $05                             ; E
 $69DE DEFB $80                             ; @
; LIFE
 $69DF DEFB $0C                             ; L
 $69E0 DEFB $09                             ; I
 $69E1 DEFB $06                             ; F
 $69E2 DEFB $85                             ; E
; LIVES
 $69E3 DEFB $0C                             ; L
 $69E4 DEFB $09                             ; I
 $69E5 DEFB $16                             ; V
 $69E6 DEFB $05                             ; E
 $69E7 DEFB $93                             ; S
; LOSE
 $69E8 DEFB $0C                             ; L
 $69E9 DEFB $8F                             ; O
 $69EA DEFB $13                             ; S
 $69EB DEFB $85                             ; E
; LOUD
 $69EC DEFB $0C                             ; L
 $69ED DEFB $0F                             ; O
 $69EE DEFB $15                             ; U
 $69EF DEFB $84                             ; D
; LUCKY
 $69F0 DEFB $0C                             ; L
 $69F1 DEFB $15                             ; U
 $69F2 DEFB $03                             ; C
 $69F3 DEFB $0B                             ; K
 $69F4 DEFB $99                             ; Y
; MADE
 $69F5 DEFB $0D                             ; M
 $69F6 DEFB $01                             ; A
 $69F7 DEFB $04                             ; D
 $69F8 DEFB $85                             ; E
; MAKE
 $69F9 DEFB $0D                             ; M
 $69FA DEFB $01                             ; A
 $69FB DEFB $0B                             ; K
 $69FC DEFB $85                             ; E
; MARGIN
 $69FD DEFB $0D                             ; M
 $69FE DEFB $01                             ; A
 $69FF DEFB $12                             ; R
 $6A00 DEFB $07                             ; G
 $6A01 DEFB $09                             ; I
 $6A02 DEFB $8E                             ; N
; MARVELLOUS
 $6A03 DEFB $0D                             ; M
 $6A04 DEFB $01                             ; A
 $6A05 DEFB $12                             ; R
 $6A06 DEFB $16                             ; V
 $6A07 DEFB $05                             ; E
 $6A08 DEFB $0C                             ; L
 $6A09 DEFB $0C                             ; L
 $6A0A DEFB $0F                             ; O
 $6A0B DEFB $15                             ; U
 $6A0C DEFB $93                             ; S
; MAY
 $6A0D DEFB $0D                             ; M
 $6A0E DEFB $01                             ; A
 $6A0F DEFB $99                             ; Y
; MAYBE
 $6A10 DEFB $0D                             ; M
 $6A11 DEFB $01                             ; A
 $6A12 DEFB $19                             ; Y
 $6A13 DEFB $02                             ; B
 $6A14 DEFB $85                             ; E
; MEND
 $6A15 DEFB $0D                             ; M
 $6A16 DEFB $85                             ; E
 $6A17 DEFB $AE                             ; N
 $6A18 DEFB $84                             ; D
; MIDDLE
 $6A19 DEFB $0D                             ; M
 $6A1A DEFB $09                             ; I
 $6A1B DEFB $04                             ; D
 $6A1C DEFB $04                             ; D
 $6A1D DEFB $0C                             ; L
 $6A1E DEFB $85                             ; E
; MIDDAY
 $6A1F DEFB $0D                             ; M
 $6A20 DEFB $09                             ; I
 $6A21 DEFB $04                             ; D
 $6A22 DEFB $04                             ; D
 $6A23 DEFB $01                             ; A
 $6A24 DEFB $99                             ; Y
; MISS
 $6A25 DEFB $0D                             ; M
 $6A26 DEFB $89                             ; I
 $6A27 DEFB $33                             ; S
 $6A28 DEFB $93                             ; S
; MOMENT
 $6A29 DEFB $0D                             ; M
 $6A2A DEFB $0F                             ; O
 $6A2B DEFB $0D                             ; M
 $6A2C DEFB $05                             ; E
 $6A2D DEFB $0E                             ; N
 $6A2E DEFB $94                             ; T
; MOMENTARILY
 $6A2F DEFB $0D                             ; M
 $6A30 DEFB $0F                             ; O
 $6A31 DEFB $0D                             ; M
 $6A32 DEFB $05                             ; E
 $6A33 DEFB $0E                             ; N
 $6A34 DEFB $14                             ; T
 $6A35 DEFB $01                             ; A
 $6A36 DEFB $12                             ; R
 $6A37 DEFB $09                             ; I
 $6A38 DEFB $0C                             ; L
 $6A39 DEFB $99                             ; Y
; MORN
 $6A3A DEFB $0D                             ; M
 $6A3B DEFB $8F                             ; O
 $6A3C DEFB $B2                             ; R
 $6A3D DEFB $8E                             ; N
; MOUTHFULL
 $6A3E DEFB $0D                             ; M
 $6A3F DEFB $0F                             ; O
 $6A40 DEFB $15                             ; U
 $6A41 DEFB $14                             ; T
 $6A42 DEFB $08                             ; H
 $6A43 DEFB $06                             ; F
 $6A44 DEFB $15                             ; U
 $6A45 DEFB $0C                             ; L
 $6A46 DEFB $8C                             ; L
; MOVE
 $6A47 DEFB $0D                             ; M
 $6A48 DEFB $0F                             ; O
 $6A49 DEFB $16                             ; V
 $6A4A DEFB $85                             ; E
; MUCH
 $6A4B DEFB $0D                             ; M
 $6A4C DEFB $15                             ; U
 $6A4D DEFB $03                             ; C
 $6A4E DEFB $88                             ; H
; MY
 $6A4F DEFB $0D                             ; M
 $6A50 DEFB $19                             ; Y
 $6A51 DEFB $80                             ; @
; NO
 $6A52 DEFB $0E                             ; N
 $6A53 DEFB $0F                             ; O
 $6A54 DEFB $80                             ; @
; NOISE
 $6A55 DEFB $0E                             ; N
 $6A56 DEFB $0F                             ; O
 $6A57 DEFB $09                             ; I
 $6A58 DEFB $13                             ; S
 $6A59 DEFB $85                             ; E
; NOT
 $6A5A DEFB $0E                             ; N
 $6A5B DEFB $0F                             ; O
 $6A5C DEFB $94                             ; T
; NOTHING
 $6A5D DEFB $0E                             ; N
 $6A5E DEFB $0F                             ; O
 $6A5F DEFB $14                             ; T
 $6A60 DEFB $08                             ; H
 $6A61 DEFB $09                             ; I
 $6A62 DEFB $0E                             ; N
 $6A63 DEFB $87                             ; G
; NOW
 $6A64 DEFB $0E                             ; N
 $6A65 DEFB $0F                             ; O
 $6A66 DEFB $97                             ; W
; ONCE
 $6A67 DEFB $0F                             ; O
 $6A68 DEFB $0E                             ; N
 $6A69 DEFB $03                             ; C
 $6A6A DEFB $85                             ; E
; OTHER
 $6A6B DEFB $0F                             ; O
 $6A6C DEFB $14                             ; T
 $6A6D DEFB $08                             ; H
 $6A6E DEFB $05                             ; E
 $6A6F DEFB $92                             ; R
; PALE
 $6A70 DEFB $10                             ; P
 $6A71 DEFB $01                             ; A
 $6A72 DEFB $0C                             ; L
 $6A73 DEFB $85                             ; E
; PASSES
 $6A74 DEFB $10                             ; P
 $6A75 DEFB $01                             ; A
 $6A76 DEFB $13                             ; S
 $6A77 DEFB $13                             ; S
 $6A78 DEFB $05                             ; E
 $6A79 DEFB $93                             ; S
; PAST
 $6A7A DEFB $10                             ; P
 $6A7B DEFB $01                             ; A
 $6A7C DEFB $13                             ; S
 $6A7D DEFB $94                             ; T
; PLACE
 $6A7E DEFB $10                             ; P
 $6A7F DEFB $8C                             ; L
 $6A80 DEFB $81                             ; A
 $6A81 DEFB $03                             ; C
 $6A82 DEFB $85                             ; E
; POCKET
 $6A83 DEFB $10                             ; P
 $6A84 DEFB $8F                             ; O
 $6A85 DEFB $03                             ; C
 $6A86 DEFB $0B                             ; K
 $6A87 DEFB $05                             ; E
 $6A88 DEFB $94                             ; T
; PRECIOUS
 $6A89 DEFB $10                             ; P
 $6A8A DEFB $92                             ; R
 $6A8B DEFB $05                             ; E
 $6A8C DEFB $03                             ; C
 $6A8D DEFB $09                             ; I
 $6A8E DEFB $0F                             ; O
 $6A8F DEFB $15                             ; U
 $6A90 DEFB $93                             ; S
; PREPARE
 $6A91 DEFB $10                             ; P
 $6A92 DEFB $12                             ; R
 $6A93 DEFB $05                             ; E
 $6A94 DEFB $10                             ; P
 $6A95 DEFB $01                             ; A
 $6A96 DEFB $12                             ; R
 $6A97 DEFB $85                             ; E
; PRESENT
 $6A98 DEFB $10                             ; P
 $6A99 DEFB $12                             ; R
 $6A9A DEFB $05                             ; E
 $6A9B DEFB $13                             ; S
 $6A9C DEFB $05                             ; E
 $6A9D DEFB $0E                             ; N
 $6A9E DEFB $94                             ; T
; REACH
 $6A9F DEFB $12                             ; R
 $6AA0 DEFB $05                             ; E
 $6AA1 DEFB $01                             ; A
 $6AA2 DEFB $03                             ; C
 $6AA3 DEFB $88                             ; H
; RECOVER
 $6AA4 DEFB $12                             ; R
 $6AA5 DEFB $85                             ; E
 $6AA6 DEFB $03                             ; C
 $6AA7 DEFB $0F                             ; O
 $6AA8 DEFB $16                             ; V
 $6AA9 DEFB $05                             ; E
 $6AAA DEFB $92                             ; R
; SAIL
 $6AAB DEFB $13                             ; S
 $6AAC DEFB $81                             ; A
 $6AAD DEFB $09                             ; I
 $6AAE DEFB $8C                             ; L
; SEE
 $6AAF DEFB $13                             ; S
 $6AB0 DEFB $05                             ; E
 $6AB1 DEFB $85                             ; E
; SEEM
 $6AB2 DEFB $13                             ; S
 $6AB3 DEFB $85                             ; E
 $6AB4 DEFB $05                             ; E
 $6AB5 DEFB $8D                             ; M
; SHADOW
 $6AB6 DEFB $13                             ; S
 $6AB7 DEFB $08                             ; H
 $6AB8 DEFB $01                             ; A
 $6AB9 DEFB $04                             ; D
 $6ABA DEFB $0F                             ; O
 $6ABB DEFB $97                             ; W
; SHAPE
 $6ABC DEFB $13                             ; S
 $6ABD DEFB $08                             ; H
 $6ABE DEFB $01                             ; A
 $6ABF DEFB $10                             ; P
 $6AC0 DEFB $85                             ; E
; SHATTER
 $6AC1 DEFB $13                             ; S
 $6AC2 DEFB $88                             ; H
 $6AC3 DEFB $01                             ; A
 $6AC4 DEFB $14                             ; T
 $6AC5 DEFB $14                             ; T
 $6AC6 DEFB $05                             ; E
 $6AC7 DEFB $92                             ; R
; SING
 $6AC8 DEFB $13                             ; S
 $6AC9 DEFB $89                             ; I
 $6ACA DEFB $AE                             ; N
 $6ACB DEFB $87                             ; G
; SINK
 $6ACC DEFB $13                             ; S
 $6ACD DEFB $89                             ; I
 $6ACE DEFB $AE                             ; N
 $6ACF DEFB $8B                             ; K
; SIT
 $6AD0 DEFB $13                             ; S
 $6AD1 DEFB $89                             ; I
 $6AD2 DEFB $14                             ; T
 $6AD3 DEFB $80                             ; @
; SLIDE
 $6AD4 DEFB $13                             ; S
 $6AD5 DEFB $8C                             ; L
 $6AD6 DEFB $09                             ; I
 $6AD7 DEFB $04                             ; D
 $6AD8 DEFB $85                             ; E
; SMELL
 $6AD9 DEFB $13                             ; S
 $6ADA DEFB $0D                             ; M
 $6ADB DEFB $05                             ; E
 $6ADC DEFB $0C                             ; L
 $6ADD DEFB $8C                             ; L
; SMELT
 $6ADE DEFB $13                             ; S
 $6ADF DEFB $0D                             ; M
 $6AE0 DEFB $05                             ; E
 $6AE1 DEFB $0C                             ; L
 $6AE2 DEFB $94                             ; T
; SOMEONE
 $6AE3 DEFB $13                             ; S
 $6AE4 DEFB $0F                             ; O
 $6AE5 DEFB $0D                             ; M
 $6AE6 DEFB $05                             ; E
 $6AE7 DEFB $0F                             ; O
 $6AE8 DEFB $0E                             ; N
 $6AE9 DEFB $85                             ; E
; SOMEWHERE
 $6AEA DEFB $13                             ; S
 $6AEB DEFB $0F                             ; O
 $6AEC DEFB $0D                             ; M
 $6AED DEFB $05                             ; E
 $6AEE DEFB $17                             ; W
 $6AEF DEFB $08                             ; H
 $6AF0 DEFB $05                             ; E
 $6AF1 DEFB $12                             ; R
 $6AF2 DEFB $85                             ; E
; SOON
 $6AF3 DEFB $13                             ; S
 $6AF4 DEFB $0F                             ; O
 $6AF5 DEFB $0F                             ; O
 $6AF6 DEFB $8E                             ; N
; SPECIAL
 $6AF7 DEFB $13                             ; S
 $6AF8 DEFB $10                             ; P
 $6AF9 DEFB $05                             ; E
 $6AFA DEFB $03                             ; C
 $6AFB DEFB $09                             ; I
 $6AFC DEFB $01                             ; A
 $6AFD DEFB $8C                             ; L
; SPOUT
 $6AFE DEFB $13                             ; S
 $6AFF DEFB $90                             ; P
 $6B00 DEFB $0F                             ; O
 $6B01 DEFB $15                             ; U
 $6B02 DEFB $94                             ; T
; STAGGER
 $6B03 DEFB $13                             ; S
 $6B04 DEFB $94                             ; T
 $6B05 DEFB $01                             ; A
 $6B06 DEFB $07                             ; G
 $6B07 DEFB $07                             ; G
 $6B08 DEFB $05                             ; E
 $6B09 DEFB $92                             ; R
; STAND
 $6B0A DEFB $13                             ; S
 $6B0B DEFB $94                             ; T
 $6B0C DEFB $A1                             ; A
 $6B0D DEFB $0E                             ; N
 $6B0E DEFB $84                             ; D
; STAR
 $6B0F DEFB $13                             ; S
 $6B10 DEFB $94                             ; T
 $6B11 DEFB $01                             ; A
 $6B12 DEFB $92                             ; R
; STAR
 $6B13 DEFB $13                             ; S
 $6B14 DEFB $94                             ; T
 $6B15 DEFB $A1                             ; A
 $6B16 DEFB $92                             ; R
; START
 $6B17 DEFB $13                             ; S
 $6B18 DEFB $94                             ; T
 $6B19 DEFB $01                             ; A
 $6B1A DEFB $12                             ; R
 $6B1B DEFB $94                             ; T
; STILL
 $6B1C DEFB $13                             ; S
 $6B1D DEFB $14                             ; T
 $6B1E DEFB $09                             ; I
 $6B1F DEFB $0C                             ; L
 $6B20 DEFB $8C                             ; L
; STING
 $6B21 DEFB $13                             ; S
 $6B22 DEFB $94                             ; T
 $6B23 DEFB $09                             ; I
 $6B24 DEFB $0E                             ; N
 $6B25 DEFB $87                             ; G
; STRANGLE
 $6B26 DEFB $13                             ; S
 $6B27 DEFB $94                             ; T
 $6B28 DEFB $12                             ; R
 $6B29 DEFB $01                             ; A
 $6B2A DEFB $0E                             ; N
 $6B2B DEFB $07                             ; G
 $6B2C DEFB $0C                             ; L
 $6B2D DEFB $85                             ; E
; STRENGTH
 $6B2E DEFB $13                             ; S
 $6B2F DEFB $14                             ; T
 $6B30 DEFB $12                             ; R
 $6B31 DEFB $05                             ; E
 $6B32 DEFB $0E                             ; N
 $6B33 DEFB $07                             ; G
 $6B34 DEFB $14                             ; T
 $6B35 DEFB $88                             ; H
; SURROUNDED
 $6B36 DEFB $13                             ; S
 $6B37 DEFB $15                             ; U
 $6B38 DEFB $12                             ; R
 $6B39 DEFB $12                             ; R
 $6B3A DEFB $0F                             ; O
 $6B3B DEFB $15                             ; U
 $6B3C DEFB $0E                             ; N
 $6B3D DEFB $04                             ; D
 $6B3E DEFB $05                             ; E
 $6B3F DEFB $84                             ; D
; SWEEPS
 $6B40 DEFB $13                             ; S
 $6B41 DEFB $17                             ; W
 $6B42 DEFB $05                             ; E
 $6B43 DEFB $05                             ; E
 $6B44 DEFB $10                             ; P
 $6B45 DEFB $93                             ; S
; SWEPT
 $6B46 DEFB $13                             ; S
 $6B47 DEFB $17                             ; W
 $6B48 DEFB $05                             ; E
 $6B49 DEFB $10                             ; P
 $6B4A DEFB $94                             ; T
; SWING
 $6B4B DEFB $13                             ; S
 $6B4C DEFB $97                             ; W
 $6B4D DEFB $09                             ; I
 $6B4E DEFB $0E                             ; N
 $6B4F DEFB $87                             ; G
; TERRIFIC
 $6B50 DEFB $14                             ; T
 $6B51 DEFB $05                             ; E
 $6B52 DEFB $12                             ; R
 $6B53 DEFB $12                             ; R
 $6B54 DEFB $09                             ; I
 $6B55 DEFB $06                             ; F
 $6B56 DEFB $09                             ; I
 $6B57 DEFB $83                             ; C
; THANK
 $6B58 DEFB $14                             ; T
 $6B59 DEFB $08                             ; H
 $6B5A DEFB $01                             ; A
 $6B5B DEFB $0E                             ; N
 $6B5C DEFB $8B                             ; K
; THEM
 $6B5D DEFB $14                             ; T
 $6B5E DEFB $08                             ; H
 $6B5F DEFB $05                             ; E
 $6B60 DEFB $8D                             ; M
; THERE
 $6B61 DEFB $14                             ; T
 $6B62 DEFB $08                             ; H
 $6B63 DEFB $05                             ; E
 $6B64 DEFB $12                             ; R
 $6B65 DEFB $85                             ; E
; THING
 $6B66 DEFB $14                             ; T
 $6B67 DEFB $08                             ; H
 $6B68 DEFB $09                             ; I
 $6B69 DEFB $0E                             ; N
 $6B6A DEFB $87                             ; G
; THIS
 $6B6B DEFB $14                             ; T
 $6B6C DEFB $08                             ; H
 $6B6D DEFB $09                             ; I
 $6B6E DEFB $93                             ; S
; THRAINS
 $6B6F DEFB $14                             ; T
 $6B70 DEFB $08                             ; H
 $6B71 DEFB $12                             ; R
 $6B72 DEFB $01                             ; A
 $6B73 DEFB $09                             ; I
 $6B74 DEFB $0E                             ; N
 $6B75 DEFB $93                             ; S
; THREE
 $6B76 DEFB $14                             ; T
 $6B77 DEFB $08                             ; H
 $6B78 DEFB $12                             ; R
 $6B79 DEFB $05                             ; E
 $6B7A DEFB $85                             ; E
; THROWN
 $6B7B DEFB $14                             ; T
 $6B7C DEFB $08                             ; H
 $6B7D DEFB $12                             ; R
 $6B7E DEFB $0F                             ; O
 $6B7F DEFB $17                             ; W
 $6B80 DEFB $8E                             ; N
; THRUST
 $6B81 DEFB $14                             ; T
 $6B82 DEFB $88                             ; H
 $6B83 DEFB $12                             ; R
 $6B84 DEFB $15                             ; U
 $6B85 DEFB $13                             ; S
 $6B86 DEFB $94                             ; T
; TIME
 $6B87 DEFB $14                             ; T
 $6B88 DEFB $09                             ; I
 $6B89 DEFB $0D                             ; M
 $6B8A DEFB $85                             ; E
; TIRED
 $6B8B DEFB $14                             ; T
 $6B8C DEFB $09                             ; I
 $6B8D DEFB $12                             ; R
 $6B8E DEFB $05                             ; E
 $6B8F DEFB $84                             ; D
; TRY
 $6B90 DEFB $14                             ; T
 $6B91 DEFB $12                             ; R
 $6B92 DEFB $99                             ; Y
; TOUCH
 $6B93 DEFB $14                             ; T
 $6B94 DEFB $0F                             ; O
 $6B95 DEFB $15                             ; U
 $6B96 DEFB $03                             ; C
 $6B97 DEFB $88                             ; H
; TWO
 $6B98 DEFB $14                             ; T
 $6B99 DEFB $17                             ; W
 $6B9A DEFB $8F                             ; O
; UNDER
 $6B9B DEFB $15                             ; U
 $6B9C DEFB $0E                             ; N
 $6B9D DEFB $04                             ; D
 $6B9E DEFB $05                             ; E
 $6B9F DEFB $92                             ; R
; US
 $6BA0 DEFB $15                             ; U
 $6BA1 DEFB $13                             ; S
 $6BA2 DEFB $80                             ; @
; VANISH
 $6BA3 DEFB $16                             ; V
 $6BA4 DEFB $81                             ; A
 $6BA5 DEFB $2E                             ; N
 $6BA6 DEFB $09                             ; I
 $6BA7 DEFB $13                             ; S
 $6BA8 DEFB $88                             ; H
; VERB
 $6BA9 DEFB $16                             ; V
 $6BAA DEFB $05                             ; E
 $6BAB DEFB $12                             ; R
 $6BAC DEFB $82                             ; B
; VISIBLE
 $6BAD DEFB $16                             ; V
 $6BAE DEFB $09                             ; I
 $6BAF DEFB $13                             ; S
 $6BB0 DEFB $09                             ; I
 $6BB1 DEFB $02                             ; B
 $6BB2 DEFB $0C                             ; L
 $6BB3 DEFB $85                             ; E
; WARN
 $6BB4 DEFB $17                             ; W
 $6BB5 DEFB $81                             ; A
 $6BB6 DEFB $12                             ; R
 $6BB7 DEFB $8E                             ; N
; WAS
 $6BB8 DEFB $17                             ; W
 $6BB9 DEFB $01                             ; A
 $6BBA DEFB $93                             ; S
; WASTED
 $6BBB DEFB $17                             ; W
 $6BBC DEFB $01                             ; A
 $6BBD DEFB $13                             ; S
 $6BBE DEFB $14                             ; T
 $6BBF DEFB $05                             ; E
 $6BC0 DEFB $84                             ; D
; WE
 $6BC1 DEFB $17                             ; W
 $6BC2 DEFB $05                             ; E
 $6BC3 DEFB $80                             ; @
; WELL
 $6BC4 DEFB $17                             ; W
 $6BC5 DEFB $05                             ; E
 $6BC6 DEFB $0C                             ; L
 $6BC7 DEFB $8C                             ; L
; WHAT
 $6BC8 DEFB $17                             ; W
 $6BC9 DEFB $08                             ; H
 $6BCA DEFB $01                             ; A
 $6BCB DEFB $94                             ; T
; WHERE
 $6BCC DEFB $17                             ; W
 $6BCD DEFB $08                             ; H
 $6BCE DEFB $05                             ; E
 $6BCF DEFB $12                             ; R
 $6BD0 DEFB $85                             ; E
; WHICH
 $6BD1 DEFB $17                             ; W
 $6BD2 DEFB $08                             ; H
 $6BD3 DEFB $09                             ; I
 $6BD4 DEFB $03                             ; C
 $6BD5 DEFB $88                             ; H
; WILL
 $6BD6 DEFB $17                             ; W
 $6BD7 DEFB $09                             ; I
 $6BD8 DEFB $0C                             ; L
 $6BD9 DEFB $8C                             ; L
; WIND
 $6BDA DEFB $17                             ; W
 $6BDB DEFB $09                             ; I
 $6BDC DEFB $0E                             ; N
 $6BDD DEFB $84                             ; D
; WORD
 $6BDE DEFB $17                             ; W
 $6BDF DEFB $0F                             ; O
 $6BE0 DEFB $12                             ; R
 $6BE1 DEFB $84                             ; D
; WOULD
 $6BE2 DEFB $17                             ; W
 $6BE3 DEFB $0F                             ; O
 $6BE4 DEFB $15                             ; U
 $6BE5 DEFB $0C                             ; L
 $6BE6 DEFB $84                             ; D
; YER
 $6BE7 DEFB $19                             ; Y
 $6BE8 DEFB $05                             ; E
 $6BE9 DEFB $92                             ; R
; YOUR
 $6BEA DEFB $19                             ; Y
 $6BEB DEFB $0F                             ; O
 $6BEC DEFB $15                             ; U
 $6BED DEFB $92                             ; R
 $6BEE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BF6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BFE DEFB $00,$00

; Game Entry Point
@label=Start
c$6C00 DI            ; Disable interrupts.
; Initial set-up; copies "clean" data to the "CopyOf..." store. This is then
; used to create a new game in #R$6C27.
 $6C01 LD DE,$F400   ; {Copies #R$C11B to #R$F400 ($615 bytes).
 $6C04 LD HL,$C11B   ;
 $6C07 LD BC,$0615   ;
 $6C0A LDIR          ; }
 $6C0C LD HL,$BA8A   ; {Copies #R$BA8A to #R$FA15 ($5D9 bytes).
 $6C0F LD BC,$05D9   ;
 $6C12 LDIR          ; }
 $6C14 LD DE,$5F00   ; {Copies #R$B6EB to $5F00 ($1D bytes).
 $6C17 LD HL,$B6EB   ;
 $6C1A LD BC,$001D   ;
 $6C1D LDIR          ; }
 $6C1F LD HL,$CA84   ; {Copies $CA84 to $5F1D ($BF bytes).
 $6C22 LD BC,$00BF   ;
 $6C25 LDIR          ; }
; This entry point is used by the routines at #R$82B3, #R$8451 and #R$90D2.
@label=ReStart
*$6C27 DI            ; Disable interrupts.
 $6C28 LD SP,$5EFF   ; Set the stack pointer to #R$5EFF.
; Reset the border and paper colours for location #LOCATION($05, 1, 1)($) -
; "#LOCATIONNAME($05)".
 $6C2B LD IX,$CC00   ; #REGix=#R$CC00
 $6C2F LD A,$05      ; {Call #R$9DBD with location #LOCATION($05, 1, 1)($) -
 $6C31 CALL $9DBD    ; "#LOCATIONNAME($05)".}
 $6C34 LD L,(IX+$01) ; {#REGhl=#R$E142 (#REGhl=location graphics data for
 $6C37 LD H,(IX+$02) ; "#LOCATIONNAME($05)").}
 $6C3A LD (HL),$00   ; {Write $00 (black) to the first (border) and second
 $6C3C INC HL        ; (paper) addresses.
 $6C3D LD (HL),$00   ; }
; Copy "clean" data to the game tables ready for a new game.
 $6C3F LD HL,$F400   ; {Copies #R$F400 to #R$C11B ($615 bytes).
 $6C42 LD DE,$C11B   ;
 $6C45 LD BC,$0615   ;
 $6C48 LDIR          ; }
 $6C4A LD DE,$BA8A   ; {Copies #R$FA15 to #R$BA8A ($5D9 bytes).
 $6C4D LD BC,$05D9   ;
 $6C50 LDIR          ; }
 $6C52 LD HL,$5F00   ; {Copies $5F00 to #R$B6EB ($1D bytes).
 $6C55 LD DE,$B6EB   ;
 $6C58 LD BC,$001D   ;
 $6C5B LDIR          ; }
 $6C5D LD DE,$CA84   ; {Copies $CA84 to $5F1D ($BF bytes).
 $6C60 LD BC,$00BF   ;
 $6C63 LDIR          ; }
 $6C65 XOR A         ; {Set the border colour to black.
 $6C66 OUT ($FE),A   ; }
 $6C68 LD A,$38      ; {#HTML(Write $38 to <a
 $6C6A LD ($5C48),A  ; href="https://skoolkid.github.io/rom/asm/5C48.html">BORDCR</a>.)
                     ; }
@label=ReStart_Keypress
*$6C6D XOR A         ; {Read from the keyboard port.
 $6C6E IN A,($FE)    ; }
 $6C70 AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $6C72 CP $1F        ; {Loop back to #R$6C6D until any key has been pressed.
 $6C74 JR Z,$6C6D    ; }
 $6C76 LD A,$7F      ; {Read from the keyboard port.
 $6C78 IN A,($FE)    ; #TABLE(default,centre,centre,centre,centre,centre,centre)
                     ; { =h,r2 Port Number | =h,c5 Bit }
                     ; { =h 0 | =h 1 | =h 2 | =h 3 | =h 4 }
                     ; { $7F | SPACE | FULL-STOP | M | N | B }
                     ; TABLE#}
 $6C7A AND %00001000 ; Keep bit 3 ("N").
 $6C7C LD ($B707),A  ; Write it to #R$B707.
 $6C7F LD HL,$50E0   ; {Write $50E0 to #R$85B4(the percentage buffer).
 $6C82 LD ($85B4),HL ; }
 $6C85 LD A,$2B      ; {Write $2B to #R$85B4($85B6).
 $6C87 LD ($85B6),A  ; }
 $6C8A LD HL,$5020   ; {Write $5020 to #R$869C.
 $6C8D LD ($869C),HL ; }
 $6C90 LD A,$01      ; {Write $01 to #R$869E.
 $6C92 LD ($869E),A  ; }
 $6C95 LD A,$20      ; {Write $20 to #R$85B3.
 $6C97 LD ($85B3),A  ; }
 $6C9A LD A,$2A      ; {Write $2A to #R$869B.
 $6C9C LD ($869B),A  ; }
 $6C9F LD B,$C8      ; {Write $00 to #N$C8 bytes, starting from #R$B738 (using
 $6CA1 LD HL,$B738   ; #R$70E2).
 $6CA4 CALL $70E2    ; }
 $6CA7 LD A,R        ; {#REGr = refresh register; i.e. write a semi-random
 $6CA9 LD ($B70E),A  ; number to #R$B70E.}
 $6CAC XOR A         ; {Write $00 to;
 $6CAD LD ($869F),A  ;           #LIST
 $6CB0 LD ($86A0),A  ;           { #R$869F }
 $6CB3 LD ($B71A),A  ;           { #R$86A0 }
 $6CB6 LD ($B700),A  ;           { #R$B71A }
 $6CB9 LD ($B6F2),A  ;           { #R$B700 }
                     ;           { #R$B6F2 }
                     ; LIST#}
 $6CBC LD A,$01      ; {Write $01 to;
 $6CBE LD ($B702),A  ;           #LIST
 $6CC1 LD ($B6FA),A  ;           { #R$B702 }
 $6CC4 LD ($B704),A  ;           { #R$B6FA }
                     ;           { #R$B704 }
                     ; LIST#}
 $6CC7 LD HL,$0000   ; {Write $0000 to #R$B6F7.
 $6CCA LD ($B6F7),HL ; }
; This section draws the "Squiggle" line which separates the windows.
 $6CCD CALL $6FD3    ; Call #R$6FD3.
 $6CD0 LD HL,$5140   ; #REGhl=#R$5140
 $6CD3 LD DE,$6DCC   ; #REGde=#R$6DCC
 $6CD6 LD C,$05      ; #REGc=$05.
@label=SquiggleGFX_Loop_1
*$6CD8 LD B,$10      ; Set a counter of $10.
 $6CDA PUSH HL       ; Stash #REGhl (the screen buffer pointer) temporarily -
                     ; this is because the line is a repeated pattern.
@label=SquiggleGFX_Loop_2
*$6CDB LD A,(DE)     ; {Copy one byte from #REGde (the squiggle graphics data),
 $6CDC LD (HL),A     ; to #REGhl (the screen buffer).}
 $6CDD INC HL        ; {Increase both pointers by one.
 $6CDE INC DE        ; }
 $6CDF LD A,(DE)     ; {Copy one byte from #REGde (the squiggle graphics data),
 $6CE0 LD (HL),A     ; to #REGhl (the screen buffer).}
 $6CE1 INC HL        ; Increase #REGhl (the screen buffer) pointer by one.
 $6CE2 DEC DE        ; Decrease #REGde (the squiggle graphics data) pointer by
                     ; one.
 $6CE3 DJNZ $6CDB    ; Decrease counter by one and loop back to #R$6CDB until
                     ; counter is zero.
 $6CE5 INC DE        ; {Increase #REGde (the squiggle graphics data) pointer by
 $6CE6 INC DE        ; two.}
 $6CE7 POP HL        ; Restore #REGhl (the screen buffer position) from the
                     ; stack.
 $6CE8 INC H         ; Increase #REGh by one (i.e. move down a line).
 $6CE9 DEC C         ; {Decrease #REGc by one and loop back to #R$6CD8 until
 $6CEA JR NZ,$6CD8   ; counter is zero.}
 $6CEC LD A,$11      ; {Write $11 to #R$B716.
 $6CEE LD ($B716),A  ; }
 $6CF1 LD A,($B706)  ; #REGa=#R$B706.
 $6CF4 INC A         ; Increase #REGa by one.
 $6CF5 JR NZ,$6D13   ; If #REGa is not zero then jump to #R$6D13.
 $6CF7 CALL $97AD    ; Call #R$97AD.
 $6CFA LD HL,$6FF2   ; #REGhl=#R$6FF2
*$6CFD LD A,(HL)     ;
 $6CFE CALL $85B8    ;
 $6D01 INC HL        ;
 $6D02 CP $0D        ;
 $6D04 JR NZ,$6CFD   ;
 $6D06 LD HL,$6FF4   ; {Copies $6FF4 to $6FF9 ($05 bytes).
 $6D09 LD DE,$6FF9   ;
 $6D0C LD BC,$0005   ;
 $6D0F LDIR          ; }
 $6D11 JR $6D22      ; Jump to #R$6D22.
*$6D13 LD A,$01      ; {Write $01 to #R$B705.
 $6D15 LD ($B705),A  ; }
 $6D18 LD A,$09      ; {Write $09 to #R$B716.
 $6D1A LD ($B716),A  ; }
 $6D1D CALL $6DD6    ; Call #R$6DD6.
 $6D20 JR Z,$6D8A    ;
*$6D22 LD HL,$709C   ; {Write $00 to #N$40 bytes, starting from #R$709C (using
 $6D25 LD B,$40      ; #R$70E2).
 $6D27 CALL $70E2    ; }
 $6D2A LD HL,$6FF9   ; #REGhl=#R$6FF9.
 $6D2D LD IY,$709C   ; #REGiy=#R$709C.
*$6D31 CALL $6E97    ; Call #R$6E97.
 $6D34 CP $D0        ;
 $6D36 JR Z,$6DA2    ;
 $6D38 CP $90        ;
 $6D3A JR NZ,$6D6C   ;
 $6D3C LD A,B        ;
 $6D3D AND $0F       ;
 $6D3F OR C          ;
 $6D40 JR NZ,$6D6C   ;
 $6D42 LD A,($B71B)  ;
 $6D45 AND A         ;
 $6D46 JR NZ,$6D4E   ;
 $6D48 INC A         ;
 $6D49 LD ($B71B),A  ;
 $6D4C JR $6D6C      ;
*$6D4E DEC A         ;
 $6D4F LD ($B71B),A  ;
 $6D52 LD A,(IY-$02) ;
 $6D55 AND $F0       ;
 $6D57 CP $B0        ;
 $6D59 JR Z,$6D6C    ;
 $6D5B CP $A0        ;
 $6D5D JR Z,$6D6C    ;
 $6D5F LD A,$B0      ;
 $6D61 LD (IY+$00),A ;
 $6D64 XOR A         ;
 $6D65 LD (IY+$01),A ;
 $6D68 INC IY        ;
 $6D6A INC IY        ;
*$6D6C LD (IY+$00),B ;
 $6D6F LD (IY+$01),C ;
 $6D72 INC IY        ;
 $6D74 INC IY        ;
 $6D76 LD A,D        ;
 $6D77 CP $C0        ;
 $6D79 JR NZ,$6D31   ;
 $6D7B LD A,($B71B)  ;
 $6D7E AND A         ;
 $6D7F JR Z,$6D8A    ;
 $6D81 XOR A         ;
 $6D82 LD ($B71B),A  ;
 $6D85 CALL $792F    ;
 $6D88 JR $6D13      ;
*$6D8A LD HL,$709C   ;
 $6D8D LD ($B6DC),HL ;
*$6D90 CALL $7585    ;
 $6D93 JP NZ,$6D13   ;
 $6D96 CALL $7960    ;
 $6D99 LD A,($B705)  ;
 $6D9C AND A         ;
 $6D9D JR NZ,$6D90   ;
 $6D9F JP $6D13      ; Jump to #R$6D13.
*$6DA2 LD HL,$AD93   ; #REGhl=#R$AD93("i do not know the word "[0x16]"")
 $6DA5 LD A,$01      ; {Write $01 to #R$B701.
 $6DA7 LD ($B701),A  ; }
 $6DAA CALL $72DD    ; Call #R$72DD.
 $6DAD LD HL,($B6DA) ;
*$6DB0 LD A,(HL)     ;
 $6DB1 CP $0D        ;
 $6DB3 JR Z,$6DC1    ;
 $6DB5 CP $22        ;
 $6DB7 JR Z,$6DC1    ;
 $6DB9 CALL $858B    ;
 $6DBC INC HL        ;
 $6DBD CP $20        ;
 $6DBF JR NZ,$6DB0   ;
*$6DC1 LD A,$22      ;
 $6DC3 CALL $858B    ;
 $6DC6 CALL $8583    ;
 $6DC9 JP $6D13      ; Jump to #R$6D13.

; Squiggle Graphics
@label=SquiggleGFX
b$6DCC DEFB $C3,$C3,$2C,$34,$10,$08,$2C,$34
 $6DD4 DEFB $C3,$C3

; Routine at 6DD6
;
; Used by the routine at #R$6C00.
c$6DD6 LD HL,$0BB8    ;
 $6DD9 LD ($B714),HL  ;
 $6DDC LD A,$01       ;
 $6DDE LD ($B701),A   ;
 $6DE1 LD ($B6FA),A   ;
 $6DE4 LD A,$3E       ;
 $6DE6 CALL $858B     ;
 $6DE9 LD A,$20       ;
 $6DEB CALL $858B     ;
 $6DEE LD HL,$6FF9    ;
 $6DF1 LD B,$80       ;
*$6DF3 LD C,$00       ;
*$6DF5 CALL $7249     ;
 $6DF8 BIT 7,B        ;
 $6DFA JR Z,$6E01     ;
 $6DFC CP $40         ;
 $6DFE JP Z,$6E7A     ;
*$6E01 BIT 0,C        ;
 $6E03 CALL Z,$6E4F   ;
 $6E06 LD C,$01       ;
 $6E08 CP $18         ;
 $6E0A JR NZ,$6E11    ;
 $6E0C CALL $6E8B     ;
 $6E0F JR $6DF3       ;
*$6E11 CP $08         ;
 $6E13 JR NZ,$6E22    ;
 $6E15 BIT 7,B        ;
 $6E17 JR NZ,$6DF5    ;
 $6E19 LD A,$08       ;
 $6E1B CALL $858B     ;
 $6E1E INC B          ;
 $6E1F DEC HL         ;
 $6E20 JR $6DF5       ;
*$6E22 CP $40         ;
 $6E24 JR NC,$6E3A    ;
 $6E26 CP $22         ;
 $6E28 JR Z,$6E3A     ;
 $6E2A CP $20         ;
 $6E2C JR Z,$6E3A     ;
 $6E2E CP $0D         ;
 $6E30 JR Z,$6E3A     ;
 $6E32 CP $2E         ;
 $6E34 JR Z,$6E3A     ;
 $6E36 CP $2C         ;
 $6E38 JR NZ,$6DF5    ;
*$6E3A LD ($B704),A   ;
 $6E3D DEC B          ;
 $6E3E INC B          ;
 $6E3F JR Z,$6E47     ;
 $6E41 CALL $858B     ;
 $6E44 LD (HL),A      ;
 $6E45 INC HL         ;
 $6E46 DEC B          ;
*$6E47 CP $0D         ;
 $6E49 JP NZ,$6DF5    ;
 $6E4C OR $01         ;
 $6E4E RET            ;
*$6E4F CP $09         ;
 $6E51 JR Z,$6E72     ;
 $6E53 CP $08         ;
 $6E55 JR Z,$6E76     ;
 $6E57 CP $0A         ;
 $6E59 JR Z,$6E6E     ;
 $6E5B CP $5B         ;
 $6E5D RET NZ         ;
 $6E5E LD A,$4E       ;
*$6E60 LD (HL),A      ;
 $6E61 INC HL         ;
 $6E62 CALL $858B     ;
 $6E65 DEC B          ;
 $6E66 LD A,$0D       ;
 $6E68 LD (HL),A      ;
 $6E69 INC HL         ;
 $6E6A DEC B          ;
 $6E6B OR $01         ;
 $6E6D RET            ;
*$6E6E LD A,$53       ;
 $6E70 JR $6E60       ;
*$6E72 LD A,$45       ;
 $6E74 JR $6E60       ;
*$6E76 LD A,$57       ;
 $6E78 JR $6E60       ;
*$6E7A LD A,($B71A)   ;
 $6E7D AND A          ;
 $6E7E JP NZ,$6DF5    ;
 $6E81 LD A,$08       ;
 $6E83 CALL $858B     ;
 $6E86 CALL $858B     ;
 $6E89 XOR A          ;
 $6E8A RET            ;
; This entry point is used by the routine at #R$70F3.
*$6E8B BIT 7,B        ;
 $6E8D RET NZ         ;
 $6E8E LD A,$08       ;
 $6E90 CALL $858B     ;
 $6E93 INC B          ;
 $6E94 DEC HL         ;
 $6E95 JR $6E8B       ;
; This entry point is used by the routine at #R$6C00.
*$6E97 PUSH DE        ;
*$6E98 LD A,(HL)      ;
 $6E99 INC HL         ;
 $6E9A CP $20         ;
 $6E9C JR Z,$6E98     ;
 $6E9E DEC HL         ;
 $6E9F LD ($B6DA),HL  ;
 $6EA2 CP $0D         ;
 $6EA4 JR Z,$6EDE     ;
 $6EA6 CALL $6F30     ;
 $6EA9 JR Z,$6EE3     ;
 $6EAB CALL $6F47     ;
 $6EAE JR NZ,$6EBC    ;
 $6EB0 PUSH HL        ;
*$6EB1 CALL $6FBA     ;
 $6EB4 JR Z,$6EC0     ;
*$6EB6 CALL $6F72     ;
 $6EB9 JR Z,$6EB1     ;
 $6EBB POP HL         ;
*$6EBC LD A,$D0       ;
 $6EBE JR $6EE0       ;
*$6EC0 LD A,($708A)   ;
 $6EC3 LD B,A         ;
 $6EC4 LD A,($709B)   ;
 $6EC7 CP B           ;
 $6EC8 JR NC,$6EEB    ;
 $6ECA CP $04         ;
 $6ECC JR C,$6EB6     ;
 $6ECE PUSH IX        ;
 $6ED0 CALL $6F76     ;
 $6ED3 JR NZ,$6EE9    ;
 $6ED5 CALL $6FBA     ;
 $6ED8 JR NZ,$6EE9    ;
 $6EDA POP IX         ;
 $6EDC JR $6EB6       ;
*$6EDE LD A,$C0       ;
*$6EE0 LD BC,$0000    ;
*$6EE3 POP DE         ;
 $6EE4 LD D,A         ;
 $6EE5 ADD A,B        ;
 $6EE6 LD B,A         ;
 $6EE7 LD A,D         ;
 $6EE8 RET            ;
*$6EE9 POP IX         ;
*$6EEB LD IX,($B717)  ;
 $6EEF PUSH IX        ;
 $6EF1 XOR A          ;
*$6EF2 INC IX         ;
 $6EF4 INC A          ;
 $6EF5 BIT 7,(IX-$01) ;
 $6EF9 JR Z,$6EF2     ;
 $6EFB CP $02         ;
 $6EFD JR Z,$6EF2     ;
 $6EFF CP $03         ;
 $6F01 JR NZ,$6F09    ;
 $6F03 BIT 7,(IX-$02) ;
 $6F07 JR NZ,$6EF2    ;
*$6F09 BIT 6,(IX-$01) ;
 $6F0D JR Z,$6F1A     ;
 $6F0F LD L,(IX+$00)  ;
 $6F12 LD H,(IX+$01)  ;
 $6F15 LD DE,$6000    ;
 $6F18 ADD HL,DE      ;
 $6F19 EX (SP),HL     ;
*$6F1A POP HL         ;
 $6F1B LD A,(HL)      ;
 $6F1C RLCA           ;
 $6F1D AND $C0        ;
 $6F1F LD B,A         ;
 $6F20 INC HL         ;
 $6F21 LD A,(HL)      ;
 $6F22 RRCA           ;
 $6F23 AND $30        ;
 $6F25 ADD A,B        ;
 $6F26 DEC HL         ;
 $6F27 LD DE,$A000    ;
 $6F2A ADD HL,DE      ;
 $6F2B PUSH HL        ;
 $6F2C POP BC         ;
 $6F2D POP HL         ;
 $6F2E JR $6EE3       ;
*$6F30 LD B,$B0       ;
 $6F32 CP $2E         ;
 $6F34 JR Z,$6F41     ;
 $6F36 LD B,$A0       ;
 $6F38 CP $2C         ;
 $6F3A JR Z,$6F41     ;
 $6F3C CP $22         ;
 $6F3E RET NZ         ;
 $6F3F LD B,$90       ;
*$6F41 INC HL         ;
 $6F42 LD A,B         ;
 $6F43 LD BC,$0000    ;
 $6F46 RET            ;
*$6F47 LD DE,$707A    ;
 $6F4A LD B,$00       ;
*$6F4C LD A,(HL)      ;
 $6F4D CP $40         ;
 $6F4F JR C,$6F59     ;
 $6F51 AND $1F        ;
 $6F53 LD (DE),A      ;
 $6F54 INC DE         ;
 $6F55 INC HL         ;
 $6F56 INC B          ;
 $6F57 JR $6F4C       ;
*$6F59 LD A,B         ;
 $6F5A LD ($708A),A   ;
 $6F5D PUSH HL        ;
 $6F5E LD HL,($707A)  ;
 $6F61 LD H,$00       ;
 $6F63 LD DE,$6000    ;
 $6F66 ADD HL,HL      ;
 $6F67 ADD HL,DE      ;
 $6F68 LD E,(HL)      ;
 $6F69 INC HL         ;
 $6F6A LD D,(HL)      ;
 $6F6B LD IX,$6000    ;
 $6F6F ADD IX,DE      ;
 $6F71 POP HL         ;
*$6F72 LD ($B717),IX  ;
*$6F76 LD A,(IX+$00)  ;
 $6F79 AND $1F        ;
 $6F7B LD B,A         ;
 $6F7C LD A,($707A)   ;
 $6F7F CP B           ;
 $6F80 RET NZ         ;
 $6F81 PUSH HL        ;
 $6F82 LD HL,$708B    ;
 $6F85 LD BC,$0000    ;
*$6F88 LD A,(IX+$00)  ;
 $6F8B AND $1F        ;
 $6F8D JR Z,$6F92     ;
 $6F8F LD (HL),A      ;
 $6F90 INC HL         ;
 $6F91 INC B          ;
*$6F92 INC IX         ;
 $6F94 INC C          ;
 $6F95 BIT 7,(IX-$01) ;
 $6F99 JR Z,$6F88     ;
 $6F9B LD A,C         ;
 $6F9C CP $02         ;
 $6F9E JR Z,$6F88     ;
 $6FA0 CP $03         ;
 $6FA2 JR NZ,$6FAA    ;
 $6FA4 BIT 7,(IX-$02) ;
 $6FA8 JR NZ,$6F88    ;
*$6FAA POP HL         ;
 $6FAB LD A,B         ;
 $6FAC LD ($709B),A   ;
 $6FAF BIT 6,(IX-$01) ;
 $6FB3 RET Z          ;
 $6FB4 INC IX         ;
 $6FB6 INC IX         ;
 $6FB8 XOR A          ;
 $6FB9 RET            ;
*$6FBA LD A,($708A)   ;
 $6FBD LD B,A         ;
 $6FBE LD A,($709B)   ;
 $6FC1 CP B           ;
 $6FC2 JR NC,$6FC5    ;
 $6FC4 LD B,A         ;
*$6FC5 LD HL,$707A    ;
 $6FC8 LD DE,$708B    ;
*$6FCB LD A,(DE)      ;
 $6FCC CP (HL)        ;
 $6FCD RET NZ         ;
 $6FCE INC DE         ;
 $6FCF INC HL         ;
 $6FD0 DJNZ $6FCB     ;
 $6FD2 RET            ;

; Clear Screen
;
; Used by the routine at #R$6C00.
@label=ClearScreen
c$6FD3 PUSH HL       ; {Push #REGhl, #REGde and #REGbc onto the stack.
 $6FD4 PUSH DE       ;
 $6FD5 PUSH BC       ; }
 $6FD6 LD A,$07      ; {Set the border colour to white.
 $6FD8 OUT ($FE),A   ; }
 $6FDA LD HL,$4000   ; {Write $00 to $1800 memory locations (clearing the
 $6FDD LD DE,$4001   ; screen buffer).
 $6FE0 LD BC,$1800   ;
 $6FE3 LD (HL),$00   ;
 $6FE5 LDIR          ; }
 $6FE7 LD BC,$0300   ; {Write $38 to the following $300 memory locations (the
 $6FEA LD (HL),$38   ; attribute buffer).
 $6FEC LDIR          ; }
 $6FEE POP BC        ; {Pop #REGhl, #REGde and #REGbc from the stack.
 $6FEF POP DE        ;
 $6FF0 POP HL        ; }
 $6FF1 RET           ; Return.

; Input Buffer
@label=InputBuffer
b$6FF2 DEFB $3E,$20
 $6FF4 DEFB $4C,$4F,$4F,$4B,$0D
 $6FF9 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7009 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7019 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7029 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7039 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7049 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7059 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7069 DEFB $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
 $7079 DEFB $0D
 $707A DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $7084 DEFB $00,$00,$00,$00,$00,$00
 $708A DEFB $00
 $708B DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $7095 DEFB $00,$00,$00,$00,$00,$00
 $709B DEFB $01
 $709C DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $70AC DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $70BC DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $70CC DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $70DC DEFB $00
 $70DD DEFW $0000
 $70DF DEFB $00
 $70E0 DEFW $0000

; Blanks "n" memory locations
;
; Used by the routines at #R$6C00, #R$7574 and #R$77D1.
;
; B Counter
; HL Target
@label=Blanker
c$70E2 XOR A         ; #REGa=$00.
@label=Blanker_Loop
*$70E3 LD (HL),A     ; Write #REGa to #REGhl.
 $70E4 INC HL        ; Increment #REGhl by one.
 $70E5 DJNZ $70E3    ; Decrease counter by one and loop back to #R$70E3 until
                     ; counter is zero.
 $70E7 RET           ; Return.

; Index Action
;
; Used by the routines at #R$70F3 and #R$77D1.
;
; A The ID of the Action; $01-$3B
@label=IndexAction
c$70E8 LD L,A        ; {Create an offset in #REGhl.
 $70E9 LD H,$00      ; }
 $70EB ADD HL,HL     ; {#REGhl = #R$AB53($AB4B) + (#REGhl * $08).
 $70EC ADD HL,HL     ;
 $70ED ADD HL,HL     ;
 $70EE LD DE,$AB4B   ;
 $70F1 ADD HL,DE     ; }
 $70F2 RET           ; Return.

; Routine at 70F3
;
; Used by the routine at #R$77D1.
c$70F3 LD A,(IX+$05) ;
 $70F6 RRCA          ;
 $70F7 RRCA          ;
 $70F8 RRCA          ;
 $70F9 RRCA          ;
 $70FA AND $0F       ;
 $70FC LD C,A        ;
 $70FD LD A,(IX+$07) ;
 $7100 AND $F0       ;
 $7102 ADD A,C       ;
 $7103 LD ($B71E),A  ;
 $7106 LD A,(IX+$01) ;
 $7109 RRCA          ;
 $710A RRCA          ;
 $710B RRCA          ;
 $710C RRCA          ;
 $710D AND $0F       ;
 $710F LD C,A        ;
 $7110 LD A,(IX+$03) ;
 $7113 AND $F0       ;
 $7115 ADD A,C       ;
 $7116 LD ($B71D),A  ;
 $7119 RET           ;
; This entry point is used by the routine at #R$77D1.
*$711A XOR A         ;
 $711B LD ($B6FB),A  ;
 $711E INC A         ;
 $711F LD ($B6FA),A  ;
 $7122 LD A,($B71B)  ;
 $7125 AND A         ;
 $7126 CALL Z,$712B  ;
 $7129 XOR A         ;
 $712A RET           ;
; This entry point is used by the routines at #R$77D1, #R$96B3 and #R$9F76.
*$712B LD A,$01      ;
 $712D LD ($70DF),A  ;
 $7130 XOR A         ;
 $7131 LD ($B703),A  ;
 $7134 PUSH IY       ;
 $7136 PUSH BC       ;
 $7137 LD A,($B6FB)  ;
 $713A LD B,A        ;
 $713B AND A         ;
 $713C LD A,$01      ;
 $713E JR Z,$7141    ;
 $7140 XOR A         ;
*$7141 LD ($B701),A  ;
 $7144 PUSH IX       ;
 $7146 PUSH HL       ;
 $7147 PUSH DE       ;
 $7148 LD A,($B6E7)  ;
 $714B CALL $70E8    ;
 $714E PUSH HL       ;
 $714F POP IX        ;
 $7151 XOR A         ;
 $7152 CP B          ;
 $7153 JR Z,$715C    ;
 $7155 LD A,($B6EA)  ;
 $7158 AND A         ;
 $7159 CALL Z,$8583  ;
*$715C CALL $70F3    ;
 $715F BIT 4,A       ;
 $7161 LD C,A        ;
 $7162 JP NZ,$71C9   ;
 $7165 CALL $73A7    ;
 $7168 LD DE,$00EE   ;
 $716B XOR A         ;
 $716C CP B          ;
 $716D CALL Z,$74C1  ;
 $7170 PUSH HL       ;
 $7171 LD DE,$0006   ;
 $7174 ADD HL,DE     ;
 $7175 CALL $74BA    ;
 $7178 CALL $95ED    ;
 $717B POP HL        ;
 $717C JR NC,$718F   ;
 $717E LD A,($B6E7)  ;
 $7181 CP $0B        ;
 $7183 JR NC,$718F   ;
 $7185 LD DE,$0AEA   ;
 $7188 INC HL        ;
 $7189 INC HL        ;
 $718A CALL $74C1    ;
 $718D JR $7192      ;
*$718F CALL $74BA    ;
*$7192 BIT 3,C       ;
 $7194 JR Z,$71A6    ;
 $7196 BIT 5,C       ;
 $7198 CALL NZ,$74BA ;
 $719B LD A,($B71E)  ;
 $719E BIT 7,A       ;
 $71A0 CALL NZ,$74BA ;
 $71A3 CALL $73B4    ;
*$71A6 LD A,($B6E9)  ;
 $71A9 CP $FF        ;
 $71AB JR Z,$71C1    ;
 $71AD BIT 2,C       ;
 $71AF JR Z,$71C1    ;
 $71B1 BIT 5,C       ;
 $71B3 CALL Z,$74BA  ;
 $71B6 LD A,($B71E)  ;
 $71B9 BIT 7,A       ;
 $71BB CALL Z,$74BA  ;
 $71BE CALL $73C7    ;
*$71C1 LD A,$2E      ;
 $71C3 CALL $858B    ;
 $71C6 CALL $8583    ;
*$71C9 XOR A         ;
 $71CA LD ($70DF),A  ;
 $71CD POP DE        ;
 $71CE POP HL        ;
 $71CF POP IX        ;
 $71D1 POP BC        ;
 $71D2 POP IY        ;
 $71D4 RET           ;
; This entry point is used by the routines at #R$73C2 and #R$77D1.
*$71D5 PUSH IX       ;
 $71D7 CALL $9BB1    ;
 $71DA PUSH IX       ;
 $71DC POP HL        ;
 $71DD INC HL        ;
 $71DE INC HL        ;
 $71DF POP IX        ;
 $71E1 RET           ;
; This entry point is used by the routines at #R$73C2 and #R$77D1.
*$71E2 PUSH DE       ;
 $71E3 PUSH IX       ;
 $71E5 CALL $9BCA    ;
 $71E8 PUSH IX       ;
 $71EA POP HL        ;
 $71EB LD DE,$0008   ;
 $71EE ADD HL,DE     ;
 $71EF POP IX        ;
 $71F1 POP DE        ;
 $71F2 RET           ;
; This entry point is used by the routines at #R$77D1, #R$9DD9 and #R$9EA0.
*$71F3 PUSH DE       ;
 $71F4 PUSH HL       ;
 $71F5 PUSH IY       ;
 $71F7 CALL $722E    ;
 $71FA JR NZ,$7229   ;
 $71FC LD A,$01      ;
 $71FE LD ($B6DF),A  ;
 $7201 CALL $722E    ;
 $7204 JR NZ,$720D   ;
 $7206 CALL $722E    ;
 $7209 LD A,$00      ;
 $720B JR Z,$7229    ;
*$720D POP IY        ;
 $720F POP HL        ;
 $7210 PUSH HL       ;
 $7211 PUSH IY       ;
 $7213 LD DE,$0004   ;
 $7216 ADD IY,DE     ;
 $7218 INC HL        ;
 $7219 INC HL        ;
 $721A CALL $722E    ;
 $721D JR NZ,$7229   ;
 $721F LD DE,$FFFC   ;
 $7222 ADD IY,DE     ;
 $7224 CALL $722E    ;
 $7227 LD A,$01      ;
*$7229 POP IY        ;
 $722B POP HL        ;
 $722C POP DE        ;
 $722D RET           ;
*$722E PUSH HL       ;
 $722F LD A,(HL)     ;
 $7230 INC HL        ;
 $7231 OR (HL)       ;
 $7232 JR Z,$7241    ;
 $7234 LD A,(IY+$01) ;
 $7237 XOR (HL)      ;
 $7238 AND $0F       ;
 $723A JR NZ,$7241   ;
 $723C DEC HL        ;
 $723D LD A,(HL)     ;
 $723E CP (IY+$00)   ;
*$7241 POP HL        ;
 $7242 INC HL        ;
 $7243 INC HL        ;
 $7244 INC IY        ;
 $7246 INC IY        ;
 $7248 RET           ;
; This entry point is used by the routine at #R$6DD6.
*$7249 PUSH HL       ;
 $724A LD HL,($B714) ;
*$724D CALL $8B93    ;
 $7250 AND A         ;
 $7251 JR NZ,$7273   ;
 $7253 DEC HL        ;
 $7254 LD A,H        ;
 $7255 OR L          ;
 $7256 JR NZ,$724D   ;
 $7258 POP HL        ;
 $7259 PUSH HL       ;
 $725A CALL $6E8B    ;
 $725D LD DE,$7291   ;
 $7260 LD B,$04      ;
*$7262 LD A,(DE)     ;
 $7263 LD (HL),A     ;
 $7264 INC HL        ;
 $7265 INC DE        ;
 $7266 CALL $858B    ;
 $7269 DJNZ $7262    ;
 $726B EX (SP),HL    ;
 $726C LD B,$7C      ;
 $726E LD A,$0D      ;
 $7270 LD HL,$FE0C   ;
*$7273 PUSH AF       ;
 $7274 XOR A         ;
 $7275 LD DE,$01F4   ;
 $7278 ADC HL,DE     ;
 $727A LD DE,$0BB8   ;
 $727D JR C,$7284    ;
 $727F CALL $728B    ;
 $7282 JR C,$7285    ;
*$7284 EX DE,HL      ;
*$7285 LD ($B714),HL ;
 $7288 POP AF        ;
 $7289 POP HL        ;
 $728A RET           ;
*$728B LD A,H        ;
 $728C SUB D         ;
 $728D RET NZ        ;
 $728E LD A,L        ;
 $728F SUB E         ;
 $7290 RET           ;

; Print Table
b$7291 DEFB $57,$41,$49,$54
@label=PrintTable
 $7295 DEFW $7367
 $7297 DEFW $7376
 $7299 DEFW $737E
 $729B DEFW $738D
 $729D DEFW $7394
 $729F DEFW $738B
 $72A1 DEFW $73A3
 $72A3 DEFW $73AF
 $72A5 DEFW $73BD
 $72A7 DEFW $73C2
 $72A9 DEFW $738B
 $72AB DEFW $73E0
 $72AD DEFW $73F9
 $72AF DEFW $72C3
 $72B1 DEFW $7407
 $72B3 DEFW $738B
 $72B5 DEFW $740C
 $72B7 DEFW $7425
 $72B9 DEFW $738B
 $72BB DEFW $742D
 $72BD DEFW $7340
 $72BF DEFW $7344
 $72C1 DEFW $735B

; Routine at 72C3
;
; Used by the routine at #R$72DD.
c$72C3 CALL $858B    ; Call #R$858B.
 $72C6 CP $0D        ;
 $72C8 RET NZ        ;
 $72C9 XOR A         ; {Write $00 to #R$B704.
 $72CA LD ($B704),A  ; }
 $72CD RET           ; Return.

; "i cannot do that"
;
; Used by the routines at #R$9171, #R$93DA and #R$A302.
@label=ICannotDoThat
c$72CE LD HL,$AFBF   ; #REGhl=#R$AFBF("i cannot do that")
 $72D1 JR $72DD      ; Jump to #R$72DD.

; Routine at 72D3
;
; Used by the routine at #R$77D1.
c$72D3 LD A,($B71B)  ;
 $72D6 AND A         ;
 $72D7 JR Z,$72DD    ;
 $72D9 XOR A         ;
 $72DA LD ($B6FA),A  ;

; Print Message
;
; Used by the routines at #R$6C00, #R$72CE, #R$72D3, #R$77D1, #R$83A0, #R$83EF,
; #R$8451, #R$84CC, #R$8C4B, #R$8CA6, #R$8D33, #R$8D9D, #R$8FD6, #R$9034,
; #R$9076, #R$90D2, #R$90EB, #R$9171, #R$939E, #R$93DA, #R$962B, #R$96B3,
; #R$9ACD, #R$9D44, #R$9F94, #R$A050, #R$A0C8, #R$A138, #R$A248, #R$A2B4,
; #R$A302, #R$A3E6, #R$A541 and #R$C7EA.
;
; HL Text message address
;
; Store #REGa, #REGde and #REGix for later (see #R$735B).
@label=PrintMsg
c$72DD LD ($70DD),DE ; Stash #REGde at #R$70DD.
 $72E1 LD ($70E0),IX ; Stash #REGix at #R$70E0.
 $72E5 LD ($70DC),A  ; Stash #REGa at #R$70DC.
; Important.
 $72E8 LD A,($B6FA)  ;
 $72EB AND A         ;
 $72EC JR NZ,$72F1   ;
 $72EE LD ($B6FB),A  ;
; This entry point is used by the routine at #R$73E0.
*$72F1 PUSH HL       ; {#REGix=#REGhl (the text message address).
 $72F2 POP IX        ; }
@label=PrintMsg_Loop
*$72F4 LD A,(IX+$00) ; Fetch the next character of the text message.
 $72F7 BIT 7,A       ; {Is this blah? Jump to #R$7318 if not.
 $72F9 JR Z,$7318    ; }
 $72FB AND $7F       ; Reset bit 7.
 $72FD LD D,A        ;
 $72FE LD E,(IX+$01) ;
 $7301 INC IX        ; Increase #REGix by one to move onto the next character
                     ; of the message.
 $7303 AND $F0       ;
 $7305 CP $30        ;
 $7307 JR Z,$7348    ;
 $7309 CP $20        ;
 $730B JR Z,$7348    ;
 $730D CP $60        ;
 $730F JR Z,$7348    ;
; This entry point is used by the routine at #R$7493.
@label=PrintMsg_Token
*$7311 CALL $74C1    ; Call #R$74C1.
@label=PrintMsg_Next
*$7314 INC IX        ; Increase #REGix by one to move onto the next character
                     ; of the message.
 $7316 JR $72F4      ; Jump back to #R$72F4.
; Check.
*$7318 CP $20        ; {If the character is less than $20 jump to #R$7326.
 $731A JR C,$7326    ; }
 $731C CP $60        ; {If the character is more than $60 jump to #R$7493.
 $731E JP NC,$7493   ; }
 $7321 CALL $72C3    ; Else, call #R$72C3.
 $7324 JR $7314      ; Jump back to #R$7314 to move onto the next character.
; X
@label=PrintMsg_PrintTable
*$7326 PUSH DE       ; Stash #REGde on the stack for later.
 $7327 LD E,A        ; {#REGe=#REGa - #REGde now holds the current character as
 $7328 LD D,$00      ; the LSB.}
 $732A LD HL,$7295   ; #REGhl=#R$7295
 $732D ADD HL,DE     ; {#REGhl=(#REGde * 2)
 $732E ADD HL,DE     ; }
 $732F LD E,(HL)     ; {Loads #REGde with the address held in #REGhl.
 $7330 INC HL        ;
 $7331 LD D,(HL)     ; }
 $7332 EX DE,HL      ; Exchange #REGde and #REGhl.
 $7333 POP DE        ; Restore the previous value of #REGde from the stack.
 $7334 CP $14        ; {If the character is more than $14 jump to #R$733F.
 $7336 JR NC,$733F   ; }
 $7338 CALL $733F    ; Call #R$733F.
 $733B JR Z,$7314    ; If xxxx jump back to #R$7314 to move onto the next
                     ; character.
 $733D JR $7311      ; Jump to #R$7311.
@label=PrintMsg_Indirect_Jump
*$733F JP (HL)       ; Indirect jump to the address held in #REGhl.

; Routine at 7340
c$7340 LD D,$60      ; #REGd=$60.
 $7342 JR $734B      ; Jump to #R$734B.
 $7344 LD D,$30      ; #REGd=$30.
 $7346 JR $734B      ; Jump to #R$734B.
; This entry point is used by the routine at #R$72DD.
*$7348 CALL $74C1    ; Call #R$74C1.
*$734B LD A,$2E      ; #REGa=$2E.
 $734D BIT 6,D       ;
 $734F JR NZ,$7358   ;
 $7351 BIT 4,D       ;
 $7353 CALL NZ,$858B ;
 $7356 BIT 4,D       ;
*$7358 CALL NZ,$8583 ;
@label=Return
 $735B LD DE,($70DD) ; Restore #REGde from #R$70DD.
 $735F LD IX,($70E0) ; Restore #REGix from #R$70E0.
 $7363 LD A,($70DC)  ; Restore #REGa from #R$70DC.
 $7366 RET           ; Return.

; Routine at 7367
c$7367 XOR A         ;
 $7368 LD ($B703),A  ;
 $736B POP DE        ;
 $736C POP HL        ;
 $736D EX (SP),HL    ;
 $736E PUSH DE       ;
 $736F LD A,H        ;
 $7370 OR L          ;
 $7371 CALL NZ,$7434 ;
 $7374 XOR A         ;
 $7375 RET           ;

; Routine at 7376
c$7376 POP DE        ;
 $7377 POP HL        ;
 $7378 EX (SP),HL    ;
 $7379 PUSH DE       ;
 $737A EX DE,HL      ;
 $737B OR $01        ;
 $737D RET           ;

; Routine at 737E
c$737E LD E,(IX+$01) ;
 $7381 LD D,$00      ;
 $7383 BIT 7,E       ;
 $7385 JR Z,$7389    ;
 $7387 LD D,$FF      ;
*$7389 ADD IX,DE     ;
@label=
 $738B XOR A         ;
 $738C RET           ;

; Routine at 738D
c$738D LD DE,($B6FC) ;
 $7391 OR $01        ;
 $7393 RET           ;

; Routine at 7394
c$7394 POP DE        ;
 $7395 POP HL        ;
 $7396 EX (SP),HL    ;
 $7397 PUSH DE       ;
 $7398 EX DE,HL      ;
 $7399 LD A,$01      ;
 $739B LD ($B703),A  ;
 $739E CALL $7478    ;
 $73A1 XOR A         ;
 $73A2 RET           ;

; Routine at 73A3
c$73A3 XOR A         ; {Write $00 to #R$B703.
 $73A4 LD ($B703),A  ; }
; This entry point is used by the routine at #R$70F3.
*$73A7 LD A,($B6EA)  ; #REGa=#R$B6EA.
 $73AA CALL $7488    ; Call #R$7488.
 $73AD XOR A         ; #REGa=$00.
 $73AE RET           ; Return.

; Routine at 73AF
c$73AF LD A,$01      ;
 $73B1 LD ($B703),A  ;
; This entry point is used by the routine at #R$70F3.
*$73B4 LD A,($B6FE)  ;
 $73B7 AND A         ;
 $73B8 LD A,($B6E8)  ;
 $73BB JR $73CE      ;

; Routine at 73BD
c$73BD CALL $858B    ;
 $73C0 XOR A         ;
 $73C1 RET           ;

; Routine at 73C2
c$73C2 LD A,$01      ;
 $73C4 LD ($B703),A  ;
; This entry point is used by the routine at #R$70F3.
*$73C7 LD A,($B6FF)  ;
 $73CA AND A         ;
 $73CB LD A,($B6E9)  ;
; This entry point is used by the routine at #R$73AF.
*$73CE JR Z,$73D6    ;
 $73D0 PUSH HL       ;
 $73D1 CALL $71D5    ;
 $73D4 JR $73DA      ;
; This entry point is used by the routine at #R$742D.
*$73D6 PUSH HL       ;
 $73D7 CALL $71E2    ;
*$73DA CALL $7434    ;
 $73DD POP HL        ;
 $73DE XOR A         ;
 $73DF RET           ;

; Routine at 73E0
c$73E0 INC IX        ;
 $73E2 PUSH IX       ;
 $73E4 POP HL        ;
 $73E5 PUSH HL       ;
 $73E6 LD E,(IX+$00) ;
 $73E9 LD D,$00      ;
 $73EB BIT 7,E       ;
 $73ED JR Z,$73F1    ;
 $73EF LD D,$FF      ;
*$73F1 ADD HL,DE     ;
 $73F2 CALL $72F1    ;
 $73F5 POP IX        ;
 $73F7 XOR A         ;
 $73F8 RET           ;

; Routine at 73F9
c$73F9 LD A,($B6EA)  ;
; This entry point is used by the routine at #R$7407.
*$73FC LD DE,$0990   ;
 $73FF AND A         ;
 $7400 RET NZ        ;
 $7401 LD DE,$0BEA   ;
 $7404 OR $01        ;
 $7406 RET           ;

; Routine at 7407
c$7407 LD A,($B6E8)  ;
 $740A JR $73FC      ;

; Routine at 740C
c$740C LD A,($B6EA)  ;
 $740F EX AF,AF'     ;
 $7410 XOR A         ;
; This entry point is used by the routine at #R$7425.
*$7411 LD ($B703),A  ;
 $7414 EX AF,AF'     ;
 $7415 PUSH AF       ;
 $7416 CALL $7488    ;
 $7419 POP AF        ;
 $741A AND A         ;
 $741B LD DE,$039B   ;
 $741E RET NZ        ;
 $741F LD DE,$0065   ;
 $7422 OR $01        ;
 $7424 RET           ;

; Routine at 7425
c$7425 LD A,($B6E8)  ;
; This entry point is used by the routine at #R$742D.
*$7428 EX AF,AF'     ;
 $7429 LD A,$01      ;
 $742B JR $7411      ;

; Routine at 742D
c$742D POP DE        ;
 $742E POP HL        ;
 $742F POP AF        ;
 $7430 PUSH HL       ;
 $7431 PUSH DE       ;
 $7432 JR $7428      ;
; This entry point is used by the routines at #R$7367 and #R$73C2.
*$7434 PUSH IY       ;
 $7436 PUSH HL       ;
 $7437 POP IY        ;
 $7439 CALL $9ED6    ;
 $743C POP IY        ;
 $743E RET           ;
; This entry point is used by the routine at #R$9EC7.
*$743F BIT 7,D       ;
 $7441 JR Z,$7455    ;
 $7443 LD A,E        ;
 $7444 LD HL,$07A8   ;
 $7447 CP L          ;
 $7448 JR NZ,$744F   ;
 $744A LD A,D        ;
 $744B AND $0F       ;
 $744D CP H          ;
 $744E RET Z         ;
*$744F LD A,$01      ;
 $7451 LD ($B704),A  ;
 $7454 RET           ;
*$7455 LD HL,$AD2D   ; #REGhl=#R$AD2D.
 $7458 LD A,($B701)  ;
 $745B LD E,A        ;
 $745C LD A,($70DF)  ;
 $745F OR E          ;
 $7460 JR Z,$7465    ;
 $7462 LD HL,$AD35   ; #REGhl=#R$AD35.
*$7465 LD A,D        ;
 $7466 RRCA          ;
 $7467 RRCA          ;
 $7468 RRCA          ;
 $7469 AND %00011110 ; Keep only bits 1-4.
 $746B PUSH DE       ; Stash #REGde on the stack.
 $746C LD E,A        ; {Create an offset in #REGde using #REGa as the LSB.
 $746D LD D,$00      ; }
 $746F ADD HL,DE     ; #REGhl = #REGhl + offset.
 $7470 LD E,(HL)     ; {#REGde=contents of the calculated address.
 $7471 INC HL        ;
 $7472 LD D,(HL)     ; }
 $7473 CALL $74C1    ; Call #R$74C1.
 $7476 POP DE        ; Restore #REGde from the stack.
 $7477 RET           ; Return.
; This entry point is used by the routines at #R$7394 and #R$9EC7.
*$7478 PUSH DE       ; Stash #REGde on the stack.
 $7479 LD A,($B703)  ; #REGa=#R$B703.
 $747C AND A         ; {Call #R$743F if #REGa is non-zero.
 $747D CALL NZ,$743F ; }
 $7480 POP DE        ; Restore #REGde from the stack.
 $7481 LD A,D        ; #REGa=#REGd.
 $7482 AND %00001111 ; Keep only bits 0-3.
 $7484 LD D,A        ; #REGd=#REGa.
 $7485 JP $74C1      ; Jump to #R$74C1.
; This entry point is used by the routines at #R$73A3 and #R$740C.
*$7488 CP $FF        ;
 $748A JP NZ,$73D6   ;
 $748D LD DE,$0AE3   ; #REGde=$0AE3.
 $7490 JP $74C1      ; Jump to #R$74C1.

; Get Common Word
;
; Used by the routine at #R$72DD.
;
;   A Letter reference
; O:DE Common word address
@label=GetCommonWord
c$7493 SUB $60       ; Subtract $60 from the letter byte - anything higher than
                     ; $60 signifies the letter is a "common word".
 $7495 LD E,A        ; {Create offset for the word look-up.
 $7496 LD D,$00      ; }
 $7498 LD HL,$AD3D   ; #REGhl=#R$AD3D
 $749B ADD HL,DE     ; {Add to base address at #R$AD3D so that pointer is at
 $749C ADD HL,DE     ; the referenced word.}
 $749D LD E,(HL)     ; #REGe=LSB of word address.
 $749E INC HL        ; {#REGa=MSB of word address.
 $749F LD A,(HL)     ; }
 $74A0 ADD A,$50     ; Add $50 to #REGa and store the result in #REGd.
 $74A2 LD D,A        ;
 $74A3 JP $7311      ; Jump to #R$7311.

; Output Buffer
@label=OutputBuffer
g$74A6 DEFB $F1,$78,$36,$04,$CD,$30,$79,$36
 $74AE DEFB $36,$23,$73,$23,$70,$18,$1C,$FE
 $74B6 DEFB $0B,$20,$1B,$CB

; Print Action
;
; Used by the routine at #R$70F3.
;
;   HL Pointer to an action in the #R$AB53(actions table)
; O:HL Pointer is incremented twice
; O:DE A word token
@label=PrintAction
c$74BA LD E,(HL)     ; {Store the word token in #REGde (we keep only bits 0-3
 $74BB INC HL        ; of the MSB).
 $74BC LD A,(HL)     ;
 $74BD INC HL        ;
 $74BE AND %00001111 ;
 $74C0 LD D,A        ; }
; Continues on to #R$74C1 to print.

; Print Token
;
; Used by the routines at #R$70F3, #R$72DD, #R$7340, #R$742D, #R$8C4B, #R$9EC7,
; #R$A0C8, #R$A138 and #R$A3E6.
;
; DE e.g. $56D1 token?
@label=PrintToken
c$74C1 LD A,D        ; #REGa=#REGd
 $74C2 AND %00001111 ; Keep only bits 0-3.
 $74C4 OR E          ; Combine with #REGe.
 $74C5 RET Z         ; Return the result is zero.
 $74C6 PUSH HL       ; {Store #REGhl, #REGbc and #REGde on the stack for later.
 $74C7 PUSH BC       ;
 $74C8 PUSH DE       ; }
 $74C9 LD C,D        ;
 $74CA LD A,D        ;
 $74CB AND $0F       ;
 $74CD LD D,A        ;
 $74CE LD HL,$6000   ; {#REGhl=$6000+#REGde
 $74D1 ADD HL,DE     ; }
 $74D2 LD DE,$74A6   ; #REGde=#R$74A6(output buffer).
 $74D5 PUSH HL       ; Store #REGhl on the stack.
 $74D6 LD B,$00      ; Intialise #REGb to $00 to count the number of letters.
@label=PrintToken_Loop
*$74D8 LD A,(HL)     ; Fetch the next character from #REGhl.
 $74D9 AND $1F       ; Keep only bits 0-4.
 $74DB JR Z,$74F9    ; Jump to #R$74F9 if this is zero.
 $74DD INC B         ; Increase #REGb by one.
 $74DE ADD A,$60     ; Add $60 to #REGa to convert to ASCII.
 $74E0 LD (DE),A     ; Store the result in the #R$74A6(output buffer).
 $74E1 INC DE        ; Increase the #R$74A6(output buffer) pointer by one.
 $74E2 BIT 7,(HL)    ; Check if this is the last character in the word.
 $74E4 INC HL        ; Increase the character pointer reference by one.
 $74E5 JR Z,$74D8    ; If this is not the last character in the word, loop back
                     ; to #R$74D8 to continue processing.
; Check minimum length.
 $74E7 LD A,B        ; #REGa=the number of characters.
 $74E8 CP $02        ; {If the number of characters is only $02 then jump back
 $74EA JR Z,$74D8    ; to #R$74D8 to continue processing.}
 $74EC CP $03        ; {If it is not $03, then jump to #R$74F9.
 $74EE JR NZ,$74F9   ; }
 $74F0 DEC HL        ; {Else, fetch the first character again and check if it
 $74F1 DEC HL        ; is the last character in the word.
 $74F2 LD A,(HL)     ;
 $74F3 INC HL        ;
 $74F4 INC HL        ;
 $74F5 BIT 7,A       ; }
 $74F7 JR NZ,$74D8   ; If it is not, loop back to #R$74D8 to continue
                     ; processing.
@label=PrintToken_
*$74F9 POP HL        ; Restore #REGhl off the stack.
 $74FA LD A,C        ;
 $74FB AND $F0       ;
 $74FD CP $50        ;
 $74FF JR Z,$7530    ;
 $7501 CP $40        ;
 $7503 JR Z,$7512    ;
 $7505 CP $10        ;
 $7507 LD A,($B6E8)  ;
 $750A JR Z,$750F    ;
 $750C LD A,($B6EA)  ;
@label=PrintToken__
*$750F AND A         ;
 $7510 JR Z,$7530    ;
@label=PrintToken___
*$7512 INC HL        ;
 $7513 BIT 7,(HL)    ;
 $7515 JR Z,$7530    ;
 $7517 INC HL        ;
 $7518 LD A,(HL)     ;
 $7519 AND $E0       ; E0?
 $751B RRCA          ;
 $751C RRCA          ;
 $751D RRCA          ;
 $751E LD L,A        ;
 $751F LD H,$00      ;
 $7521 LD BC,$B71F   ;
 $7524 ADD HL,BC     ;
 $7525 LD B,$04      ;
@label=PrintToken____
*$7527 LD A,(HL)     ;
 $7528 AND A         ;
 $7529 JR Z,$7530    ;
 $752B INC HL        ;
 $752C LD (DE),A     ;
 $752D INC DE        ;
 $752E DJNZ $7527    ;
@label=PrintToken_____
*$7530 LD HL,$74A6   ;
 $7533 EX DE,HL      ;
 $7534 AND A         ;
 $7535 SBC HL,DE     ;
 $7537 LD B,L        ;
 $7538 LD A,($B701)  ;
 $753B AND A         ;
 $753C PUSH AF       ;
 $753D JR NZ,$7543   ;
 $753F LD A,($86A0)  ;
 $7542 AND A         ;
@label=PrintToken______
*$7543 LD A,$20      ;
 $7545 CALL NZ,$858B ;
 $7548 POP AF        ;
 $7549 LD A,($85B3)  ;
 $754C JR NZ,$7551   ;
 $754E LD A,($869B)  ;
@label=PrintToken_______
*$7551 LD HL,$B704   ;
 $7554 CP B          ;
 $7555 JR NC,$755C   ;
 $7557 LD A,(HL)     ;
 $7558 CALL $8583    ;
 $755B LD (HL),A     ;
@label=PrintToken________
*$755C POP DE        ;
 $755D LD A,D        ;
 $755E AND $F0       ;
 $7560 CP $70        ;
 $7562 LD A,$01      ;
 $7564 JR NZ,$7567   ;
 $7566 LD (HL),A     ;
@label=PrintToken_Print
*$7567 LD HL,$74A6   ; #REGhl=#R$74A6(output buffer).
@label=PrintToken_Print_Loop
*$756A LD A,(HL)     ; Fetch the next character from the output buffer.
 $756B CALL $858B    ; Call #R$858B.
 $756E INC HL        ; Increase the output buffer pointer by one.
 $756F DJNZ $756A    ; Decrease counter by one and loop back to #R$756A until
                     ; counter is zero.
 $7571 POP BC        ; {Restore #REGbc and #REGhl off the stack.
 $7572 POP HL        ; }
 $7573 RET           ; Return.

; Routine at 7574
c$7574 DEFB $00,$00,$00,$00,$00,$00         ;
 $757A DEFB $00                             ;
 $757B DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $7583 DEFB $00,$00                         ;
; This entry point is used by the routine at #R$6C00.
*$7585 LD IY,$B9C8                          ; #REGiy=#R$B9C8.
 $7589 XOR A                                ; #REGa=$00.
; This entry point is used by the routine at #R$82B3.
*$758A LD ($B71B),A                         ; Write #REGa to #R$B71B.
 $758D CALL $785F                           ; Call #R$785F.
 $7590 LD ($B706),A                         ; Write $00 to #R$B706.
 $7593 LD E,$FF                             ; #REGe=$FF.
 $7595 LD A,($B71A)                         ; #REGa=#R$B71A.
 $7598 AND A                                ;
 $7599 LD D,$A0                             ; #REGd=$A0.
 $759B JP NZ,$7614                          ; If #REGa is not zero jump to
                                            ; #R$7614.
 $759E LD D,$C0                             ;
; This entry point is used by the routines at #R$75FA and #R$8251.
*$75A0 XOR A                                ; {Write $00 to #R$757A.
 $75A1 LD ($757A),A                         ; }
 $75A4 LD A,E                               ;
 $75A5 OR $C7                               ;
 $75A7 LD E,A                               ;
 $75A8 LD A,($B719)                         ;
 $75AB CP $02                               ;
 $75AD JR NZ,$75B1                          ;
 $75AF RES 1,E                              ;
*$75B1 CALL $7864                           ; Call #R$7864.
; This entry point is used by the routines at #R$76F2, #R$7733, #R$77D1,
; #R$82B3 and #R$83A0.
*$75B4 LD HL,$757B                          ; {Write $00 to #N$0A bytes,
 $75B7 LD B,$0A                             ; starting from #R$757B (using
 $75B9 CALL $70E2                           ; #R$70E2).}
 $75BC SET 4,E                              ; Set bit 4 of #REGe.
; This entry point is used by the routine at #R$7790.
*$75BE CALL $7873                           ; Call #R$7873.
 $75C1 PUSH DE                              ; Stash #REGde on the stack.
 $75C2 RRCA                                 ;
 $75C3 RRCA                                 ;
 $75C4 RRCA                                 ;
 $75C5 LD E,A                               ; {Create an offset in #REGde.
 $75C6 LD D,$00                             ; }
 $75C8 LD HL,$75D2                          ; {#REGhl=#R$75D2 + offset.
 $75CB ADD HL,DE                            ; }
 $75CC LD E,(HL)                            ; {#REGde=Address from the jump
 $75CD INC HL                               ; table.
 $75CE LD D,(HL)                            ; }
 $75CF EX DE,HL                             ; Switch #REGhl and #REGde.
 $75D0 POP DE                               ; Restore #REGde from the stack.
 $75D1 JP (HL)                              ; Indirect jump to the address held
                                            ; in #REGhl.
@label=JumpTable
 $75D2 DEFW $76F2                           ;
 $75D4 DEFW $7795                           ;
 $75D6 DEFW $76EC                           ;
 $75D8 DEFW $7733                           ;
 $75DA DEFW $772F                           ;
 $75DC DEFW $77D1                           ;
 $75DE DEFW $77C9                           ;
 $75E0 DEFW $77A2                           ;
 $75E2 DEFW $7790                           ;
 $75E4 DEFW $8251                           ;
 $75E6 DEFW $770B                           ;
 $75E8 DEFW $75FA                           ;
 $75EA DEFW $75F6                           ;

; Routine at 75EC
;
; Used by the routine at #R$75FA.
c$75EC LD A,($B71B)  ;
 $75EF DEC A         ;
 $75F0 RET           ;
; This entry point is used by the routines at #R$75FA, #R$7733 and #R$77D1.
*$75F1 LD A,($B71B)  ;
 $75F4 AND A         ;
 $75F5 RET           ;

; Routine at 75F6
c$75F6 XOR A         ;
 $75F7 LD ($B705),A  ;

; Routine at 75FA
;
; Used by the routines at #R$770B and #R$7733.
c$75FA BIT 1,E        ;
 $75FC JR Z,$7614     ;
 $75FE LD A,($B706)   ;
 $7601 AND A          ;
 $7602 JR NZ,$7614    ;
 $7604 LD A,($B6DE)   ;
 $7607 CP $C0         ;
 $7609 JR NZ,$760E    ;
 $760B CP D           ;
 $760C JR Z,$75EC     ;
*$760E CALL $75F1     ;
 $7611 JP Z,$792F     ;
; This entry point is used by the routine at #R$7574.
*$7614 LD A,($B719)   ;
 $7617 DEC A          ;
 $7618 JR NZ,$761E    ;
 $761A SET 7,(IY+$01) ;
*$761E LD HL,$B706    ;
 $7621 DEC A          ;
 $7622 LD A,D         ;
 $7623 JR NZ,$7629    ;
 $7625 CP $A0         ;
 $7627 JR Z,$762A     ;
*$7629 INC (HL)       ;
*$762A CALL $7893     ;
 $762D CP $A0         ;
 $762F JP Z,$75A0     ;
 $7632 LD A,($B71A)   ;
 $7635 AND A          ;
 $7636 JR Z,$7682     ;
 $7638 PUSH DE        ;
 $7639 LD E,A         ;
 $763A LD D,$00       ;
 $763C LD HL,$B9C8    ;
 $763F ADD HL,DE      ;
 $7640 PUSH IY        ;
 $7642 LD IY,$B9B0    ;
 $7646 LD A,(IY+$08)  ;
 $7649 OR (IY+$09)    ;
 $764C LD DE,$B9B8    ;
 $764F JR Z,$7668     ;
 $7651 LD A,(IY+$08)  ;
 $7654 CP (HL)        ;
 $7655 JR NZ,$765F    ;
 $7657 LD A,(IY+$09)  ;
 $765A INC HL         ;
 $765B CP (HL)        ;
 $765C DEC HL         ;
 $765D JR Z,$7668     ;
*$765F LD A,(IY+$12)  ;
 $7662 OR (IY+$13)    ;
 $7665 LD DE,$B9C2    ;
*$7668 POP IY         ;
 $766A JR NZ,$7681    ;
 $766C EX DE,HL       ;
 $766D LD B,$03       ;
*$766F LD A,(HL)      ;
 $7670 INC HL         ;
 $7671 OR (HL)        ;
 $7672 DEC HL         ;
 $7673 JR NZ,$7677    ;
 $7675 LD A,(DE)      ;
 $7676 LD (HL),A      ;
*$7677 INC HL         ;
 $7678 INC DE         ;
 $7679 JR NZ,$767D    ;
 $767B LD A,(DE)      ;
 $767C LD (HL),A      ;
*$767D INC HL         ;
 $767E INC DE         ;
 $767F DJNZ $766F     ;
*$7681 POP DE         ;
*$7682 PUSH IY        ;
 $7684 LD IY,$B9E0    ;
 $7688 LD A,($B706)   ;
 $768B LD B,A         ;
 $768C PUSH BC        ;
 $768D CALL $7892     ;
*$7690 LD A,B         ;
 $7691 AND A          ;
 $7692 JR Z,$76A4     ;
 $7694 CALL $7892     ;
 $7697 LD A,(IY+$01)  ;
 $769A AND $7F        ;
 $769C OR (IY+$00)    ;
 $769F CALL Z,$78B7   ;
 $76A2 JR $7690       ;
*$76A4 POP BC         ;
 $76A5 POP IY         ;
 $76A7 PUSH IY        ;
 $76A9 CALL $788C     ;
*$76AC LD A,B         ;
 $76AD AND A          ;
 $76AE JP Z,$76DE     ;
 $76B1 CALL $788C     ;
 $76B4 LD A,(IY+$12)  ;
 $76B7 OR (IY+$13)    ;
 $76BA JR NZ,$76AC    ;
 $76BC LD A,(IY+$00)  ;
 $76BF CP (IX+$00)    ;
 $76C2 JR NZ,$76AC    ;
 $76C4 LD A,(IY+$01)  ;
 $76C7 CP (IX+$01)    ;
 $76CA JR NZ,$76AC    ;
 $76CC LD A,(IX+$0E)  ;
 $76CF OR (IX+$0F)    ;
 $76D2 JR Z,$76AC     ;
 $76D4 EXX            ;
 $76D5 LD DE,$000E    ;
 $76D8 CALL $78EA     ;
 $76DB JP $76AC       ;
*$76DE POP IY         ;
 $76E0 LD A,($B705)   ;
 $76E3 AND A          ;
 $76E4 RET Z          ;
 $76E5 CALL $75F1     ;
 $76E8 RET Z          ;
 $76E9 JP $75A0       ;

; Routine at 76EC
c$76EC BIT 1,E       ;
 $76EE JR NZ,$7731   ;
 $76F0 LD D,$00      ;

; Routine at 76F2
c$76F2 BIT 2,E       ;
 $76F4 JP Z,$7929    ;
 $76F7 LD A,($B719)  ;
 $76FA CP $02        ;
 $76FC JR NZ,$7701   ;
 $76FE CALL $7858    ;
*$7701 RES 2,E       ;
 $7703 LD L,$02      ;
 $7705 CALL $7918    ;
 $7708 JP $75B4      ;

; Routine at 770B
c$770B RES 3,E       ;
 $770D PUSH DE       ;
*$770E CALL $7873    ;
 $7711 CP $A0        ;
 $7713 JR Z,$770E    ;
 $7715 DEC HL        ;
 $7716 DEC HL        ;
 $7717 LD ($7574),HL ;
 $771A LD ($B6DC),HL ;
 $771D POP DE        ;
 $771E LD A,E        ;
 $771F LD ($7576),A  ;
 $7722 LD ($7577),IY ;
 $7726 LD A,($B706)  ;
 $7729 LD ($7579),A  ;
 $772C JP $75FA      ;

; Routine at 772F
c$772F RES 0,E       ;
; This entry point is used by the routines at #R$76EC and #R$7795.
*$7731 LD D,$30      ;

; Routine at 7733
c$7733 BIT 3,E       ;
 $7735 JR NZ,$7755   ;
 $7737 CALL $75F1    ;
 $773A JR NZ,$7755   ;
 $773C LD HL,($7574) ;
 $773F LD ($B6DC),HL ;
 $7742 LD D,$B0      ;
 $7744 LD A,($7576)  ;
 $7747 LD E,A        ;
 $7748 LD A,($7579)  ;
 $774B LD ($B706),A  ;
 $774E LD IY,($7577) ;
 $7752 JP $75FA      ;
*$7755 CALL $785F    ;
 $7758 BIT 1,E       ;
 $775A JP Z,$7929    ;
 $775D BIT 0,E       ;
 $775F JR Z,$7767    ;
*$7761 CALL $7914    ;
 $7764 JP $75B4      ;
*$7767 PUSH DE       ;
 $7768 PUSH BC       ;
 $7769 LD HL,($B6DC) ;
 $776C PUSH HL       ;
*$776D CALL $7873    ;
 $7770 CP $00        ;
 $7772 JR Z,$776D    ;
 $7774 SET 0,E       ;
 $7776 CP $20        ;
 $7778 JR Z,$7782    ;
 $777A POP HL        ;
 $777B LD ($B6DC),HL ;
 $777E POP BC        ;
 $777F POP DE        ;
 $7780 JR $7761      ;
*$7782 CALL $7914    ;
 $7785 POP HL        ;
 $7786 POP BC        ;
 $7787 POP HL        ;
 $7788 LD L,$02      ;
 $778A CALL $7918    ;
 $778D JP $75B4      ;

; Routine at 7790
c$7790 RES 4,E       ;
 $7792 JP $75BE      ;

; Routine at 7795
c$7795 BIT 1,E       ;
 $7797 JR Z,$77A0    ;
 $7799 LD A,($B6DE)  ;
 $779C CP $A0        ;
 $779E JR Z,$7731    ;
*$77A0 LD D,$70      ;

; Routine at 77A2
c$77A2 CALL $781C    ;
*$77A5 CALL $7873    ;
 $77A8 CP $70        ;
 $77AA JR Z,$77A2    ;
 $77AC CP $80        ;
 $77AE JR NZ,$77B9   ;
 $77B0 BIT 4,E       ;
 $77B2 CALL Z,$7924  ;
 $77B5 RES 4,E       ;
 $77B7 JR $77A5      ;
; This entry point is used by the routine at #R$77C9.
*$77B9 CP $60        ;
 $77BB JR Z,$77C9    ;
 $77BD CP $50        ;
 $77BF JR Z,$77D1    ;
 $77C1 LD HL,($B6DA) ;
 $77C4 LD ($B6DC),HL ;
 $77C7 JR $77D7      ;

; Routine at 77C9
;
; Used by the routine at #R$77A2.
c$77C9 CALL $7809    ;
 $77CC CALL $7873    ;
 $77CF JR $77B9      ;

; Routine at 77D1
;
; Used by the routine at #R$77A2.
c$77D1 LD HL,$757F     ;
 $77D4 LD (HL),C       ;
 $77D5 INC HL          ;
 $77D6 LD (HL),B       ;
; This entry point is used by the routine at #R$77A2.
*$77D7 LD D,$50        ;
 $77D9 LD A,($B719)    ;
 $77DC CP $02          ;
 $77DE JR NZ,$7802     ;
 $77E0 LD HL,($757B)   ;
 $77E3 LD A,H          ;
 $77E4 OR L            ;
 $77E5 JR NZ,$77FF     ;
 $77E7 BIT 6,(IY+$19)  ;
 $77EB JR NZ,$77F5     ;
 $77ED LD BC,$FFE8     ;
 $77F0 ADD IY,BC       ;
 $77F2 CALL $7864      ;
*$77F5 CALL $7850      ;
 $77F8 LD (IY+$01),$40 ;
 $77FC JP $75B4        ;
*$77FF CALL $7858      ;
*$7802 CALL $782B      ;
 $7805 JP Z,$75B4      ;
 $7808 RET             ;
; This entry point is used by the routine at #R$77C9.
*$7809 LD HL,$7581     ;
*$780C LD A,(HL)       ;
 $780D INC HL          ;
 $780E OR (HL)         ;
 $780F JR Z,$7818      ;
 $7811 INC HL          ;
 $7812 LD A,(HL)       ;
 $7813 INC HL          ;
 $7814 OR (HL)         ;
 $7815 JP NZ,$7924     ;
*$7818 LD (HL),B       ;
 $7819 DEC HL          ;
 $781A LD (HL),C       ;
 $781B RET             ;
; This entry point is used by the routine at #R$77A2.
*$781C LD HL,$757A     ;
 $781F INC (HL)        ;
 $7820 LD A,(HL)       ;
 $7821 CP $03          ;
 $7823 JP NC,$7924     ;
 $7826 LD HL,$757B     ;
 $7829 JR $780C        ;
*$782B BIT 6,E         ;
 $782D JR NZ,$7850     ;
 $782F BIT 7,E         ;
 $7831 JR NZ,$7838     ;
 $7833 CALL $7924      ;
 $7836 XOR A           ;
 $7837 RET             ;
; This entry point is used by the routine at #R$82B3.
*$7838 RES 7,E         ;
 $783A PUSH DE         ;
 $783B LD DE,$000E     ;
*$783E PUSH BC         ;
 $783F PUSH IY         ;
 $7841 POP HL          ;
 $7842 ADD HL,DE       ;
 $7843 EX DE,HL        ;
 $7844 LD HL,$757B     ;
 $7847 LD BC,$000A     ;
 $784A LDIR            ;
 $784C POP BC          ;
 $784D POP DE          ;
 $784E XOR A           ;
 $784F RET             ;
; This entry point is used by the routine at #R$82B3.
*$7850 RES 6,E         ;
 $7852 PUSH DE         ;
 $7853 LD DE,$0004     ;
 $7856 JR $783E        ;
; This entry point is used by the routine at #R$76F2.
*$7858 CALL $78A5      ;
 $785B PUSH IX         ;
 $785D POP IY          ;
; This entry point is used by the routines at #R$7574 and #R$7733.
*$785F XOR A           ;
 $7860 LD ($B719),A    ;
 $7863 RET             ;
; This entry point is used by the routine at #R$7574.
*$7864 PUSH IY         ;
 $7866 POP HL          ;
 $7867 LD B,$18        ;
 $7869 CALL $70E2      ;
 $786C LD (IY-$18),B   ;
 $786F LD (IY-$17),B   ;
 $7872 RET             ;
; This entry point is used by the routines at #R$7574, #R$770B, #R$7733,
; #R$77A2 and #R$77C9.
*$7873 LD HL,($B6DC)   ;
 $7876 LD ($B6DA),HL   ;
 $7879 LD A,D          ;
 $787A LD ($B6DE),A    ;
 $787D LD A,(HL)       ;
 $787E AND $0F         ;
 $7880 LD B,A          ;
 $7881 LD A,(HL)       ;
 $7882 AND $F0         ;
 $7884 LD D,A          ;
 $7885 INC HL          ;
 $7886 LD C,(HL)       ;
 $7887 INC HL          ;
 $7888 LD ($B6DC),HL   ;
 $788B RET             ;
; This entry point is used by the routine at #R$75FA.
*$788C DEC B           ;
 $788D CALL $78A5      ;
 $7890 JR $7896        ;
; This entry point is used by the routine at #R$75FA.
*$7892 DEC B           ;
; This entry point is used by the routine at #R$75FA.
*$7893 CALL $789F      ;
*$7896 PUSH IX         ;
 $7898 PUSH IY         ;
 $789A POP IX          ;
 $789C POP IY          ;
 $789E RET             ;
*$789F PUSH DE         ;
 $78A0 LD DE,$FFE8     ;
 $78A3 JR $78A9        ;
*$78A5 PUSH DE         ;
 $78A6 LD DE,$0018     ;
*$78A9 PUSH IY         ;
 $78AB POP IX          ;
*$78AD ADD IX,DE       ;
 $78AF BIT 6,(IX+$01)  ;
 $78B3 JR NZ,$78AD     ;
 $78B5 POP DE          ;
 $78B6 RET             ;
; This entry point is used by the routine at #R$75FA.
*$78B7 EXX             ;
 $78B8 LD A,(IX+$01)   ;
 $78BB AND $7F         ;
 $78BD OR (IY+$01)     ;
 $78C0 LD (IY+$01),A   ;
 $78C3 LD A,(IX+$00)   ;
 $78C6 LD (IY+$00),A   ;
 $78C9 EXX             ;
 $78CA LD A,(IY+$1C)   ;
 $78CD OR (IY+$1D)     ;
 $78D0 RET Z           ;
 $78D1 BIT 7,E         ;
 $78D3 RET Z           ;
 $78D4 EXX             ;
 $78D5 PUSH IY         ;
 $78D7 POP HL          ;
 $78D8 LD DE,$0012     ;
 $78DB ADD HL,DE       ;
 $78DC PUSH HL         ;
 $78DD LD DE,$FFF6     ;
 $78E0 ADD HL,DE       ;
 $78E1 POP DE          ;
 $78E2 LD BC,$0006     ;
 $78E5 LDIR            ;
 $78E7 LD DE,$0004     ;
; This entry point is used by the routine at #R$75FA.
*$78EA CALL $78FF      ;
 $78ED LD A,(IY+$02)   ;
 $78F0 OR (IY+$03)     ;
 $78F3 LD DE,$0002     ;
 $78F6 CALL Z,$7903    ;
 $78F9 EXX             ;
 $78FA RET             ;
 $78FB LD C,$06        ;
 $78FD JR $7905        ;
*$78FF LD C,$0A        ;
 $7901 JR $7905        ;
*$7903 LD C,$02        ;
*$7905 PUSH IY         ;
 $7907 POP HL          ;
 $7908 ADD HL,DE       ;
 $7909 PUSH HL         ;
 $790A PUSH IX         ;
 $790C POP HL          ;
 $790D ADD HL,DE       ;
 $790E POP DE          ;
 $790F LD B,$00        ;
 $7911 LDIR            ;
 $7913 RET             ;
; This entry point is used by the routine at #R$7733.
*$7914 RES 1,E         ;
 $7916 LD L,$00        ;
; This entry point is used by the routines at #R$76F2 and #R$7733.
*$7918 PUSH DE         ;
 $7919 PUSH IY         ;
 $791B POP DE          ;
 $791C LD H,$00        ;
 $791E ADD HL,DE       ;
 $791F LD (HL),C       ;
 $7920 INC HL          ;
 $7921 LD (HL),B       ;
 $7922 POP DE          ;
 $7923 RET             ;
; This entry point is used by the routine at #R$77A2.
*$7924 CALL $75F1      ;
 $7927 RET NZ          ;
 $7928 POP HL          ;
; This entry point is used by the routines at #R$76F2, #R$7733 and #R$82B3.
*$7929 CALL $75F1      ;
 $792C JP NZ,$75B4     ;
; This entry point is used by the routines at #R$6C00 and #R$75FA.
*$792F LD HL,$AD9F     ; #REGhl=#R$AD9F("what ?[0x14]")
 $7932 LD A,$01        ;
 $7934 LD ($B701),A    ;
 $7937 CALL $72DD      ; Call #R$72DD.
 $793A OR $01          ;
 $793C RET             ;
 $793D NOP             ;
 $793E NOP             ;
 $793F NOP             ;
 $7940 NOP             ;
 $7941 NOP             ;
 $7942 NOP             ;
 $7943 NOP             ;
 $7944 NOP             ;
 $7945 NOP             ;
 $7946 NOP             ;
 $7947 NOP             ;
 $7948 NOP             ;
 $7949 NOP             ;
 $794A NOP             ;
 $794B NOP             ;
 $794C NOP             ;
 $794D NOP             ;
 $794E NOP             ;
 $794F NOP             ;
 $7950 NOP             ;
 $7951 NOP             ;
 $7952 NOP             ;
 $7953 NOP             ;
 $7954 NOP             ;
 $7955 NOP             ;
 $7956 NOP             ;
 $7957 NOP             ;
 $7958 NOP             ;
 $7959 NOP             ;
 $795A NOP             ;
 $795B NOP             ;
 $795C NOP             ;
 $795D NOP             ;
 $795E NOP             ;
 $795F NOP             ;
; This entry point is used by the routine at #R$6C00.
*$7960 XOR A           ;
 $7961 LD ($B71C),A    ;
 $7964 LD IY,$B9C8     ;
 $7968 LD HL,$B71A     ;
 $796B CP (HL)         ;
 $796C LD (HL),A       ;
 $796D JP NZ,$7994     ;
*$7970 CALL $79B6      ;
 $7973 JR NZ,$797A     ;
 $7975 XOR A           ;
 $7976 LD ($B705),A    ;
 $7979 RET             ;
*$797A CALL $7AED      ;
 $797D JP Z,$7DF5      ;
 $7980 LD A,$01        ;
 $7982 LD ($B6FA),A    ;
 $7985 CALL $712B      ;
 $7988 CALL $950F      ;
*$798B CALL $96B3      ;
*$798E LD A,($B71C)    ;
 $7991 AND A           ;
 $7992 JR NZ,$7970     ;
*$7994 LD A,($B706)    ;
 $7997 DEC A           ;
 $7998 LD ($B706),A    ;
 $799B RET Z           ;
 $799C LD BC,$FFE8     ;
*$799F ADD IY,BC       ;
 $79A1 BIT 6,(IY+$01)  ;
 $79A5 JR NZ,$799F     ;
 $79A7 JR $7970        ;
*$79A9 XOR A           ;
 $79AA LD ($B701),A    ;
 $79AD LD HL,$793D     ;
 $79B0 LD B,$11        ;
 $79B2 CALL $70E2      ;
 $79B5 RET             ;
*$79B6 LD A,$FF        ;
 $79B8 LD ($B6E9),A    ;
 $79BB LD ($B6E8),A    ;
 $79BE CALL $79A9      ;
 $79C1 CALL $7B9E      ;
 $79C4 RET Z           ;
 $79C5 LD A,$01        ;
 $79C7 PUSH IX         ;
 $79C9 POP HL          ;
 $79CA LD DE,$AB53     ;
 $79CD SBC HL,DE       ;
 $79CF JR Z,$79D9      ;
 $79D1 LD DE,$0008     ;
*$79D4 INC A           ;
 $79D5 SBC HL,DE       ;
 $79D7 JR NZ,$79D4     ;
*$79D9 LD ($B6E7),A    ;
 $79DC LD ($B6E6),A    ;
 $79DF LD ($795E),IX   ;
 $79E3 CALL $7B78      ;
 $79E6 CALL $7AA1      ;
 $79E9 XOR A           ;
 $79EA LD ($B6FA),A    ;
 $79ED LD A,($B71D)    ;
 $79F0 AND $0C         ;
 $79F2 JR Z,$7A11      ;
 $79F4 LD A,($7952)    ;
 $79F7 LD ($B71C),A    ;
 $79FA RLCA            ;
 $79FB AND $01         ;
 $79FD LD ($7953),A    ;
*$7A00 CALL $7A14      ;
 $7A03 JP NZ,$7DBC     ;
 $7A06 LD A,($B71C)    ;
 $7A09 AND A           ;
 $7A0A JR Z,$7A11      ;
 $7A0C CALL $7A73      ;
 $7A0F JR NZ,$7A00     ;
*$7A11 OR $01          ;
 $7A13 RET             ;
*$7A14 CALL $7CCB      ;
 $7A17 JR NZ,$7A2E     ;
 $7A19 LD A,($7940)    ;
 $7A1C CP $01          ;
 $7A1E RET NZ          ;
 $7A1F LD A,($7956)    ;
 $7A22 LD ($B6E8),A    ;
 $7A25 CALL $7ABA      ;
 $7A28 CALL $7AD8      ;
 $7A2B JR NZ,$7A55     ;
 $7A2D RET             ;
*$7A2E LD HL,$793F     ;
 $7A31 INC (HL)        ;
 $7A32 CALL $7AD8      ;
 $7A35 JR Z,$7A50      ;
 $7A37 CALL $7ABA      ;
 $7A3A CALL $7D17      ;
*$7A3D JR Z,$7A14      ;
 $7A3F LD A,($7953)    ;
 $7A42 DEC A           ;
 $7A43 RET Z           ;
 $7A44 LD A,($B6E8)    ;
 $7A47 LD ($7956),A    ;
 $7A4A LD HL,$7940     ;
 $7A4D INC (HL)        ;
 $7A4E JR $7A14        ;
*$7A50 CALL $7AED      ;
 $7A53 JR $7A3D        ;
*$7A55 CALL $7D17      ;
 $7A58 JR NZ,$7A67     ;
 $7A5A LD A,($7941)    ;
 $7A5D CP $01          ;
 $7A5F RET NZ          ;
 $7A60 LD A,($7957)    ;
 $7A63 LD ($B6E9),A    ;
 $7A66 RET             ;
*$7A67 LD A,($B6E9)    ;
 $7A6A LD ($7957),A    ;
 $7A6D LD HL,$7941     ;
 $7A70 INC (HL)        ;
 $7A71 JR $7A55        ;
*$7A73 PUSH IY         ;
 $7A75 PUSH DE         ;
 $7A76 PUSH HL         ;
*$7A77 LD DE,$FFE8     ;
 $7A7A ADD IY,DE       ;
 $7A7C BIT 6,(IY+$01)  ;
 $7A80 JR Z,$7A9C      ;
 $7A82 LD IX,$C060     ;
*$7A86 PUSH IY         ;
 $7A88 POP HL          ;
 $7A89 LD DE,$0008     ;
 $7A8C ADD HL,DE       ;
 $7A8D CALL $9DD9      ;
 $7A90 CP $FF          ;
 $7A92 JR Z,$7A77      ;
 $7A94 LD HL,$B6E8     ;
 $7A97 CP (HL)         ;
 $7A98 JR NZ,$7A86     ;
 $7A9A OR $01          ;
*$7A9C POP HL          ;
 $7A9D POP DE          ;
 $7A9E POP IY          ;
 $7AA0 RET             ;
*$7AA1 LD A,($B71C)    ;
 $7AA4 AND A           ;
 $7AA5 RET NZ          ;
*$7AA6 LD A,($B71E)    ;
 $7AA9 RRCA            ;
 $7AAA RRCA            ;
 $7AAB CALL $7ACC      ;
 $7AAE LD A,($B6FE)    ;
 $7AB1 AND A           ;
 $7AB2 CALL NZ,$9E95   ;
 $7AB5 LD ($794E),IX   ;
 $7AB9 RET             ;
*$7ABA LD A,($B71E)    ;
 $7ABD CALL $7ACC      ;
 $7AC0 LD A,($B6FF)    ;
 $7AC3 AND A           ;
 $7AC4 CALL NZ,$9E95   ;
 $7AC7 LD ($7950),IX   ;
 $7ACB RET             ;
*$7ACC LD IX,$C063     ;
 $7AD0 AND $03         ;
 $7AD2 RET Z           ;
 $7AD3 LD IX,$C060     ;
 $7AD7 RET             ;
*$7AD8 LD A,($B71D)    ;
 $7ADB BIT 2,A         ;
 $7ADD RET Z           ;
 $7ADE LD HL,$793E     ;
 $7AE1 BIT 0,(HL)      ;
 $7AE3 RET NZ          ;
 $7AE4 BIT 1,A         ;
 $7AE6 JR NZ,$7AEB     ;
 $7AE8 OR $01          ;
 $7AEA RET             ;
*$7AEB XOR A           ;
 $7AEC RET             ;
*$7AED CALL $950F      ;
 $7AF0 LD A,($B6FB)    ;
 $7AF3 AND A           ;
 $7AF4 RET             ;
; This entry point is used by the routine at #R$96B3.
*$7AF5 PUSH HL         ;
 $7AF6 PUSH IY         ;
 $7AF8 PUSH IX         ;
 $7AFA PUSH DE         ;
 $7AFB PUSH BC         ;
 $7AFC LD HL,($794E)   ;
 $7AFF PUSH HL         ;
 $7B00 LD A,($B6E7)    ;
 $7B03 CALL $70E8      ;
 $7B06 PUSH HL         ;
 $7B07 POP IX          ;
 $7B09 CALL $79A9      ;
 $7B0C CALL $70F3      ;
 $7B0F CALL $7B78      ;
 $7B12 LD A,($B6E8)    ;
 $7B15 LD B,A          ;
 $7B16 LD A,($B6FE)    ;
 $7B19 LD DE,$7942     ;
 $7B1C CALL $7B63      ;
 $7B1F LD A,($B6E9)    ;
 $7B22 LD B,A          ;
 $7B23 LD A,($B6FF)    ;
 $7B26 LD DE,$7948     ;
 $7B29 CALL $7B63      ;
 $7B2C CALL $7AA6      ;
 $7B2F XOR A           ;
 $7B30 LD ($B6FA),A    ;
 $7B33 LD A,($B71D)    ;
 $7B36 AND $0C         ;
 $7B38 JR NZ,$7B43     ;
 $7B3A CALL $950F      ;
 $7B3D LD A,($B6FB)    ;
 $7B40 AND A           ;
 $7B41 JR $7B52        ;
*$7B43 LD A,$01        ;
 $7B45 LD ($7953),A    ;
 $7B48 CALL $7A14      ;
 $7B4B JR Z,$7B50      ;
 $7B4D XOR A           ;
 $7B4E JR $7B52        ;
*$7B50 OR $01          ;
*$7B52 LD A,$01        ;
 $7B54 LD ($B6FA),A    ;
 $7B57 POP HL          ;
 $7B58 LD ($794E),HL   ;
 $7B5B POP BC          ;
 $7B5C POP DE          ;
 $7B5D POP IX          ;
 $7B5F POP IY          ;
 $7B61 POP HL          ;
 $7B62 RET             ;
*$7B63 INC B           ;
 $7B64 RET Z           ;
 $7B65 DEC B           ;
 $7B66 AND A           ;
 $7B67 LD A,B          ;
 $7B68 JR Z,$7B6F      ;
 $7B6A CALL $71D5      ;
 $7B6D JR $7B72        ;
*$7B6F CALL $71E2      ;
*$7B72 LD BC,$0006     ;
 $7B75 LDIR            ;
 $7B77 RET             ;
*$7B78 LD A,($B71E)    ;
 $7B7B AND $40         ;
 $7B7D LD ($B711),A    ;
 $7B80 LD A,($B71D)    ;
 $7B83 LD B,A          ;
 $7B84 AND $01         ;
 $7B86 LD ($B70F),A    ;
 $7B89 LD A,B          ;
 $7B8A AND $80         ;
 $7B8C JR Z,$7B90      ;
 $7B8E LD A,$01        ;
*$7B90 LD ($B6FE),A    ;
 $7B93 LD A,B          ;
 $7B94 AND $40         ;
 $7B96 JR Z,$7B9A      ;
 $7B98 LD A,$01        ;
*$7B9A LD ($B6FF),A    ;
 $7B9D RET             ;
*$7B9E PUSH IY         ;
 $7BA0 LD L,(IY+$00)   ;
 $7BA3 LD H,(IY+$01)   ;
 $7BA6 LD A,H          ;
 $7BA7 AND $80         ;
 $7BA9 LD ($7952),A    ;
 $7BAC RES 7,H         ;
 $7BAE LD ($7958),HL   ;
 $7BB1 LD HL,$795A     ;
 $7BB4 PUSH HL         ;
 $7BB5 LD B,$04        ;
 $7BB7 CALL $70E2      ;
 $7BBA POP HL          ;
 $7BBB LD B,$02        ;
 $7BBD LD E,$04        ;
 $7BBF CALL $7CAC      ;
 $7BC2 LD E,$0E        ;
 $7BC4 CALL $7CAC      ;
 $7BC7 LD E,$06        ;
 $7BC9 CALL $7CAC      ;
 $7BCC LD E,$10        ;
 $7BCE CALL $7CAC      ;
 $7BD1 XOR A           ;
 $7BD2 LD ($B6DF),A    ;
 $7BD5 LD HL,$7958     ;
 $7BD8 LD DE,$0008     ;
 $7BDB LD IX,$AB53     ;
*$7BDF PUSH IX         ;
 $7BE1 POP IY          ;
 $7BE3 CALL $71F3      ;
 $7BE6 JR Z,$7C1B      ;
 $7BE8 ADD IX,DE       ;
 $7BEA LD A,(IX+$01)   ;
 $7BED OR (IX+$00)     ;
 $7BF0 JR NZ,$7BDF     ;
 $7BF2 POP IY          ;
 $7BF4 LD A,($B6DF)    ;
 $7BF7 AND A           ;
 $7BF8 JP NZ,$7EA8     ;
 $7BFB LD HL,($7958)   ;
 $7BFE PUSH HL         ;
 $7BFF LD HL,$ADA3     ;
 $7C02 XOR A           ;
 $7C03 LD ($B701),A    ;
 $7C06 LD ($B71C),A    ;
 $7C09 LD A,$01        ;
 $7C0B LD ($B6FA),A    ;
 $7C0E CALL $72D3      ;
 $7C11 LD A,($B71B)    ;
 $7C14 DEC A           ;
 $7C15 RET Z           ;
 $7C16 POP HL          ;
 $7C17 POP HL          ;
 $7C18 JP $798B        ;
*$7C1B POP IY          ;
 $7C1D CALL $7C23      ;
 $7C20 OR $01          ;
 $7C22 RET             ;
*$7C23 AND A           ;
 $7C24 JR Z,$7C34      ;
 $7C26 LD HL,($795A)   ;
 $7C29 LD DE,($795C)   ;
 $7C2D LD ($795A),DE   ;
 $7C31 LD ($795C),HL   ;
*$7C34 CALL $70F3      ;
 $7C37 LD HL,$795A     ;
 $7C3A LD A,(HL)       ;
 $7C3B INC HL          ;
 $7C3C OR (HL)         ;
 $7C3D JR NZ,$7C44     ;
 $7C3F LD A,($B71E)    ;
 $7C42 JR $7C63        ;
*$7C44 DEC HL          ;
 $7C45 LD A,(HL)       ;
 $7C46 CP (IY+$0E)     ;
 $7C49 JR NZ,$7C53     ;
 $7C4B INC HL          ;
 $7C4C LD A,(HL)       ;
 $7C4D CP (IY+$0F)     ;
 $7C50 JR Z,$7C5E      ;
 $7C52 DEC HL          ;
*$7C53 LD A,(HL)       ;
 $7C54 CP (IY+$10)     ;
 $7C57 JR NZ,$7C5E     ;
 $7C59 INC HL          ;
 $7C5A LD A,(HL)       ;
 $7C5B CP (IY+$11)     ;
*$7C5E LD A,($B71D)    ;
 $7C61 JR NZ,$7C65     ;
*$7C63 XOR $20         ;
*$7C65 BIT 5,A         ;
 $7C67 LD BC,$1208     ;
 $7C6A JR Z,$7C6F      ;
 $7C6C LD BC,$0812     ;
*$7C6F LD HL,$7954     ;
 $7C72 LD (HL),B       ;
 $7C73 INC HL          ;
 $7C74 LD (HL),C       ;
 $7C75 LD A,B          ;
 $7C76 LD DE,$7942     ;
 $7C79 LD HL,$793D     ;
 $7C7C CALL $7C91      ;
 $7C7F LD A,C          ;
 $7C80 LD HL,$7942     ;
 $7C83 LD DE,$B6E0     ;
 $7C86 LD BC,$0006     ;
 $7C89 LDIR            ;
 $7C8B LD DE,$7948     ;
 $7C8E LD HL,$793E     ;
*$7C91 PUSH BC         ;
 $7C92 LD C,A          ;
 $7C93 LD B,$00        ;
 $7C95 PUSH HL         ;
 $7C96 PUSH IY         ;
 $7C98 POP HL          ;
 $7C99 ADD HL,BC       ;
 $7C9A LD BC,$0006     ;
 $7C9D LDIR            ;
 $7C9F XOR A           ;
 $7CA0 LD B,$06        ;
*$7CA2 DEC HL          ;
 $7CA3 OR (HL)         ;
 $7CA4 DJNZ $7CA2      ;
 $7CA6 POP HL          ;
 $7CA7 POP BC          ;
 $7CA8 RET Z           ;
 $7CA9 SET 0,(HL)      ;
 $7CAB RET             ;
*$7CAC XOR A           ;
 $7CAD CP B            ;
 $7CAE RET Z           ;
 $7CAF LD D,$00        ;
 $7CB1 PUSH IY         ;
 $7CB3 ADD IY,DE       ;
 $7CB5 LD A,(IY+$00)   ;
 $7CB8 LD (HL),A       ;
 $7CB9 INC HL          ;
 $7CBA LD A,(IY+$01)   ;
 $7CBD LD (HL),A       ;
 $7CBE DEC HL          ;
 $7CBF OR (IY+$00)     ;
 $7CC2 POP IY          ;
 $7CC4 RET Z           ;
 $7CC5 DEC B           ;
 $7CC6 INC HL          ;
 $7CC7 INC HL          ;
 $7CC8 RET             ;
*$7CC9 JP (IY)         ;
*$7CCB PUSH IY         ;
 $7CCD LD IX,($794E)   ;
 $7CD1 LD A,($B6FE)    ;
 $7CD4 DEC A           ;
 $7CD5 JR Z,$7CF1      ;
 $7CD7 LD IY,$9DD9     ;
 $7CDB LD A,($B71E)    ;
 $7CDE RRCA            ;
 $7CDF RRCA            ;
 $7CE0 AND $03         ;
 $7CE2 LD ($B710),A    ;
 $7CE5 CALL $7CFC      ;
 $7CE8 CP $FF          ;
*$7CEA LD ($794E),IX   ;
 $7CEE POP IY          ;
 $7CF0 RET             ;
*$7CF1 LD IY,$9EA0     ;
 $7CF5 CALL $7CFC      ;
 $7CF8 CP $FF          ;
 $7CFA JR $7CEA        ;
*$7CFC LD HL,$7942     ;
 $7CFF CALL $7CC9      ;
 $7D02 CP $FF          ;
 $7D04 RET Z           ;
 $7D05 LD ($B6E8),A    ;
 $7D08 LD HL,$793D     ;
 $7D0B SET 1,(HL)      ;
 $7D0D CALL $94D6      ;
 $7D10 LD A,($B6FB)    ;
 $7D13 AND A           ;
 $7D14 JR Z,$7CFC      ;
 $7D16 RET             ;
*$7D17 XOR A           ;
 $7D18 LD ($B70F),A    ;
 $7D1B PUSH IY         ;
 $7D1D LD IX,($7950)   ;
 $7D21 LD A,($B6FF)    ;
 $7D24 DEC A           ;
 $7D25 JR Z,$7D49      ;
 $7D27 LD IY,$9DD9     ;
 $7D2B LD A,($B71E)    ;
 $7D2E AND $03         ;
 $7D30 LD ($B710),A    ;
 $7D33 CALL $7D54      ;
 $7D36 CP $FF          ;
*$7D38 LD ($7950),IX   ;
 $7D3C POP IY          ;
 $7D3E PUSH AF         ;
 $7D3F LD A,($B71D)    ;
 $7D42 AND $01         ;
 $7D44 LD ($B70F),A    ;
 $7D47 POP AF          ;
 $7D48 RET             ;
*$7D49 LD IY,$9EA0     ;
 $7D4D CALL $7D54      ;
 $7D50 CP $FF          ;
 $7D52 JR $7D38        ;
*$7D54 LD HL,$7948     ;
 $7D57 CALL $7CC9      ;
 $7D5A CP $FF          ;
 $7D5C RET Z           ;
 $7D5D LD ($B6E9),A    ;
 $7D60 LD HL,$793E     ;
 $7D63 SET 1,(HL)      ;
 $7D65 CALL $7AED      ;
 $7D68 JR Z,$7D54      ;
 $7D6A RET             ;
*$7D6B LD A,$01        ;
 $7D6D LD ($B6FA),A    ;
 $7D70 LD ($B701),A    ;
 $7D73 RET             ;
*$7D74 LD ($B71A),A    ;
 $7D77 PUSH IY         ;
 $7D79 POP HL          ;
 $7D7A LD DE,$B9C8     ;
 $7D7D LD BC,$0018     ;
 $7D80 LDIR            ;
 $7D82 RET             ;
*$7D83 LD A,($7954)    ;
 $7D86 LD HL,($7942)   ;
*$7D89 PUSH HL         ;
 $7D8A CALL $7D74      ;
 $7D8D LD HL,$ADCC     ;
*$7D90 CALL $7D6B      ;
 $7D93 CALL $72D3      ;
 $7D96 XOR A           ;
 $7D97 RET             ;
*$7D98 LD HL,$793E     ;
 $7D9B BIT 0,(HL)      ;
 $7D9D JP Z,$7E4D      ;
 $7DA0 BIT 1,(HL)      ;
 $7DA2 LD HL,$7948     ;
 $7DA5 LD DE,$B6E9     ;
 $7DA8 LD BC,$B6FF     ;
 $7DAB JR Z,$7DFE      ;
 $7DAD LD A,($7941)    ;
 $7DB0 AND A           ;
 $7DB1 JP Z,$7DF5      ;
 $7DB4 LD A,($7955)    ;
 $7DB7 LD A,($7948)    ;
 $7DBA JR $7D89        ;
*$7DBC LD A,($B71B)    ;
 $7DBF DEC A           ;
 $7DC0 RET Z           ;
 $7DC1 LD A,($B71C)    ;
 $7DC4 AND A           ;
 $7DC5 JR Z,$7DCB      ;
 $7DC7 POP HL          ;
 $7DC8 JP $7994        ;
*$7DCB LD A,($7940)    ;
 $7DCE CP $01          ;
 $7DD0 JR Z,$7D98      ;
 $7DD2 LD HL,$793D     ;
 $7DD5 BIT 0,(HL)      ;
 $7DD7 JP Z,$7E30      ;
 $7DDA BIT 1,(HL)      ;
 $7DDC LD HL,$7942     ;
 $7DDF LD DE,$B6E8     ;
 $7DE2 LD BC,$B6FE     ;
 $7DE5 JR Z,$7DFE      ;
 $7DE7 LD A,($793F)    ;
 $7DEA AND A           ;
 $7DEB JR Z,$7DF5      ;
 $7DED DEC A           ;
 $7DEE JR NZ,$7D83     ;
 $7DF0 CALL $7AD8      ;
 $7DF3 JR NZ,$7D98     ;
*$7DF5 CALL $7D6B      ;
 $7DF8 CALL $950F      ;
 $7DFB JP $798E        ;
*$7DFE PUSH HL         ;
 $7DFF CALL $9E95      ;
 $7E02 LD A,$01        ;
 $7E04 LD (BC),A       ;
 $7E05 CALL $9EA0      ;
 $7E08 CP $FF          ;
 $7E0A JR NZ,$7E20     ;
 $7E0C POP HL          ;
 $7E0D LD A,$02        ;
 $7E0F LD ($B710),A    ;
 $7E12 LD IX,$C060     ;
 $7E16 XOR A           ;
 $7E17 LD (BC),A       ;
 $7E18 PUSH HL         ;
 $7E19 CALL $9DD9      ;
 $7E1C CP $FF          ;
 $7E1E JR Z,$7E25      ;
*$7E20 POP HL          ;
 $7E21 LD (DE),A       ;
 $7E22 JP $711A        ;
*$7E25 CALL $7D6B      ;
 $7E28 LD HL,$ADD3     ;
 $7E2B CALL $72D3      ;
 $7E2E XOR A           ;
 $7E2F RET             ;
*$7E30 CALL $7E7C      ;
 $7E33 LD HL,($7958)   ;
 $7E36 PUSH HL         ;
 $7E37 LD HL,$ADE1     ;
 $7E3A LD A,($7940)    ;
 $7E3D AND A           ;
 $7E3E JP Z,$7D90      ;
 $7E41 LD A,($7954)    ;
 $7E44 CALL $7D74      ;
 $7E47 LD HL,$ADC4     ;
 $7E4A JP $7D90        ;
*$7E4D CALL $7E78      ;
 $7E50 LD HL,$0000     ;
 $7E53 PUSH HL         ;
 $7E54 LD A,($B6E8)    ;
 $7E57 CALL $71E2      ;
 $7E5A PUSH HL         ;
 $7E5B CALL $7E7C      ;
 $7E5E LD HL,($7958)   ;
 $7E61 PUSH HL         ;
 $7E62 LD HL,$ADE7     ;
 $7E65 LD A,($7941)    ;
 $7E68 AND A           ;
 $7E69 JP Z,$7D90      ;
 $7E6C LD A,($7955)    ;
 $7E6F CALL $7D74      ;
 $7E72 LD HL,$ADC0     ;
 $7E75 JP $7D90        ;
*$7E78 LD A,$28        ;
 $7E7A JR $7E7E        ;
*$7E7C LD A,$20        ;
*$7E7E LD ($7E92),A    ;
 $7E81 LD ($7EA1),A    ;
 $7E84 LD IX,($795E)   ;
 $7E88 LD L,(IX+$04)   ;
 $7E8B LD H,(IX+$05)   ;
 $7E8E BIT 7,(IX+$07)  ;
 $7E92 JR NZ,$7E97     ;
 $7E94 LD HL,$0000     ;
*$7E97 EX (SP),HL      ;
 $7E98 PUSH HL         ;
 $7E99 LD L,(IX+$02)   ;
 $7E9C LD H,(IX+$03)   ;
 $7E9F BIT 5,H         ;
 $7EA1 JR NZ,$7EA6     ;
 $7EA3 LD HL,$0000     ;
*$7EA6 EX (SP),HL      ;
 $7EA7 JP (HL)         ;
*$7EA8 LD HL,($795C)   ;
 $7EAB PUSH HL         ;
 $7EAC LD HL,($795A)   ;
 $7EAF PUSH HL         ;
 $7EB0 LD HL,($7958)   ;
 $7EB3 PUSH HL         ;
 $7EB4 LD HL,$ADB0     ;
 $7EB7 JP $7D90        ;
; This entry point is used by the routine at #R$9034.
*$7EBA PUSH BC         ;
 $7EBB PUSH IX         ;
 $7EBD PUSH DE         ;
 $7EBE LD B,A          ;
 $7EBF LD A,($B737)    ;
 $7EC2 LD C,A          ;
 $7EC3 CP B            ;
 $7EC4 JR NC,$7EC7     ;
 $7EC6 LD B,A          ;
*$7EC7 LD A,C          ;
 $7EC8 SUB B           ;
 $7EC9 LD C,A          ;
 $7ECA LD IX,$B71F     ;
 $7ECE LD DE,$0019     ;
 $7ED1 XOR A           ;
 $7ED2 CP B            ;
 $7ED3 JR Z,$7EE6      ;
*$7ED5 ADD IX,DE       ;
 $7ED7 LD A,(IX+$00)   ;
 $7EDA CP $FF          ;
 $7EDC JR NZ,$7ED5     ;
 $7EDE LD A,($B6E8)    ;
 $7EE1 LD (IX+$00),A   ;
 $7EE4 DJNZ $7ED5      ;
*$7EE6 LD B,C          ;
 $7EE7 XOR A           ;
 $7EE8 CP B            ;
 $7EE9 JR Z,$7EFA      ;
*$7EEB ADD IX,DE       ;
 $7EED LD A,(IX+$00)   ;
 $7EF0 CP $FF          ;
 $7EF2 JR NZ,$7EEB     ;
 $7EF4 LD (IX+$00),$00 ;
 $7EF8 DJNZ $7EEB      ;
*$7EFA POP DE          ;
 $7EFB POP IX          ;
 $7EFD POP BC          ;
 $7EFE RET             ;
*$7EFF LD HL,$B738     ;
 $7F02 LD DE,$0019     ;
 $7F05 LD A,($B6EA)    ;
 $7F08 LD B,$08        ;
*$7F0A CP (HL)         ;
 $7F0B RET Z           ;
 $7F0C ADD HL,DE       ;
 $7F0D DJNZ $7F0A      ;
 $7F0F RET             ;
; This entry point is used by the routine at #R$96B3.
*$7F10 PUSH HL         ;
 $7F11 PUSH DE         ;
 $7F12 PUSH BC         ;
 $7F13 CALL $7EFF      ;
 $7F16 POP BC          ;
 $7F17 POP DE          ;
 $7F18 POP HL          ;
 $7F19 RET             ;
; This entry point is used by the routines at #R$96B3 and #R$A541.
*$7F1A PUSH IX         ;
 $7F1C PUSH IY         ;
 $7F1E PUSH BC         ;
 $7F1F PUSH DE         ;
 $7F20 PUSH HL         ;
 $7F21 LD C,A          ;
 $7F22 CALL $7EFF      ;
 $7F25 LD (HL),$00     ;
 $7F27 INC HL          ;
 $7F28 XOR A           ;
 $7F29 CP C            ;
 $7F2A JR NZ,$7F37     ;
 $7F2C OR $01          ;
 $7F2E EX (SP),HL      ;
*$7F2F POP HL          ;
 $7F30 POP DE          ;
 $7F31 POP BC          ;
 $7F32 POP IY          ;
 $7F34 POP IX          ;
 $7F36 RET             ;
*$7F37 PUSH HL         ;
 $7F38 POP IY          ;
 $7F3A LD A,$01        ;
 $7F3C LD ($B71B),A    ;
 $7F3F LD A,($B71C)    ;
 $7F42 PUSH AF         ;
 $7F43 CALL $79B6      ;
 $7F46 EX AF,AF'       ;
 $7F47 XOR A           ;
 $7F48 LD ($B71B),A    ;
 $7F4B POP AF          ;
 $7F4C LD ($B71C),A    ;
 $7F4F EX AF,AF'       ;
 $7F50 JR Z,$7F57      ;
 $7F52 CALL $7AED      ;
 $7F55 JR NZ,$7F2F     ;
*$7F57 LD A,($B6EA)    ;
 $7F5A CALL $7F60      ;
 $7F5D XOR A           ;
 $7F5E JR $7F2F        ;
; This entry point is used by the routine at #R$96B3.
*$7F60 PUSH HL         ;
 $7F61 PUSH DE         ;
 $7F62 PUSH BC         ;
 $7F63 LD HL,$B738     ;
 $7F66 LD DE,$0019     ;
 $7F69 LD B,$08        ;
*$7F6B CP (HL)         ;
 $7F6C JR NZ,$7F70     ;
 $7F6E LD (HL),$00     ;
*$7F70 ADD HL,DE       ;
 $7F71 DJNZ $7F6B      ;
 $7F73 POP BC          ;
 $7F74 POP DE          ;
 $7F75 POP HL          ;
 $7F76 RET             ;

; Location ID.
;
; Contains $FF when the location has no graphics data, else the location ID.
@label=LocationID
g$7F77 DEFB $00

; Drawing Routine
;
; Used by the routine at #R$962B.
@label=Drawing
c$7F78 PUSH AF          ; Store #REGaf on the stack.
 $7F79 LD A,($B707)     ; {If #R$B707 is not $00 then jump to #R$7F86.
 $7F7C AND A            ;
 $7F7D JR NZ,$7F86      ; }
 $7F7F LD A,$FF         ; {Write $FF to #R$7F77.
 $7F81 LD ($7F77),A     ; }
 $7F84 POP AF           ; Restore #REGaf from the stack.
 $7F85 RET              ; Return.
; Drawing Check
@label=DrawingCheck
*$7F86 POP AF           ; Retrieve the location ID from the stack.
 $7F87 PUSH AF          ; Ensure that it's still on the stack for later.
 $7F88 PUSH HL          ; {Store #REGhl, #REGbc, #REGde and #REGix on the stack
 $7F89 PUSH BC          ; for later.
 $7F8A PUSH DE          ;
 $7F8B PUSH IX          ; }
 $7F8D LD IX,$CC00      ; #REGix=#R$CC00.
 $7F91 CALL $9DBD       ; Call #R$9DBD - the Z flag is set if no data is found
                        ; (#REGa=$FF).
 $7F94 LD ($7F77),A     ; Store the location ID at #R$7F77.
 $7F97 LD L,(IX+$01)    ; {#REGhl=Location graphics data address.
 $7F9A LD H,(IX+$02)    ; }
 $7F9D CALL NZ,$7FA7    ; If there is graphics data for this location then call
                        ; #R$7FA7.
 $7FA0 POP IX           ; {Restore #REGix, #REGde, #REGbc, #REGhl and #REGaf
 $7FA2 POP DE           ; off the stack.
 $7FA3 POP BC           ;
 $7FA4 POP HL           ;
 $7FA5 POP AF           ; }
 $7FA6 RET              ; Return.
; Drawing routines.
@label=DrawingSetup
*$7FA7 PUSH IY          ; {Store #REGiy and #REGhl on the stack.
 $7FA9 PUSH HL          ; }
 $7FAA PUSH HL          ; {#REGiy=pointer to graphics data addresses.
 $7FAB POP IY           ; }
 $7FAD PUSH DE          ; {Store #REGde and #REGbc on the stack.
 $7FAE PUSH BC          ; }
 $7FAF CALL $820B       ; Call #R$820B.
 $7FB2 LD D,$7F         ; #REGd=$7F.
 $7FB4 LD E,$3F         ; #REGe=$3F.
 $7FB6 LD B,$01         ; #REGb=$01.
 $7FB8 LD C,$01         ; #REGc=$01.
 $7FBA LD L,$01         ; #REGl=$01.
@label=DrawingLoop
*$7FBC LD A,(IY+$00)    ; Fetch the next drawing instruction.
 $7FBF AND A            ; {If the value is zero, jump to #R$8069.
 $7FC0 JP Z,$8069       ; }
 $7FC3 INC IY           ; Increment the graphics data pointer by one.
 $7FC5 CP $08           ; {If the graphics data value which was fetched is not
 $7FC7 JR NZ,$7FD5      ; $08 (move to X/Y) jump to #R$7FD5.}
; Moves the "pen" held in #REGde to a screen location.
 $7FC9 LD D,(IY+$00)    ; {Populate #REGde with two values from the graphics
 $7FCC INC IY           ; data and increment the pointer by two.
 $7FCE LD E,(IY+$00)    ;
 $7FD1 INC IY           ; }
 $7FD3 JR $7FBC         ; Jump back to #R$7FBC to fetch the next drawing
                        ; instruction.
*$7FD5 BIT 7,A          ; {If bit 7 is set, jump to #R$7FFA.
 $7FD7 JR Z,$7FFA       ; }
 $7FD9 LD B,A           ; Temporarily store #REGa in #REGb.
 $7FDA AND %00000111    ; Keep only bits 0-2.
 $7FDC LD C,A           ; Store this in #REGc.
 $7FDD LD A,B           ; Restore the old value of #REGa (from #REGb).
 $7FDE RRCA             ; Rotate #REGa right one bit.
 $7FDF AND %00111100    ; Keep only bits 2-5.
 $7FE1 LD B,A           ; Store this in #REGb.
 $7FE2 LD A,(IY+$00)    ; Fetch the next drawing instruction.
 $7FE5 AND %00111111    ; Keep only bits 0-5.
 $7FE7 LD L,A           ; Store this in #REGl.
 $7FE8 INC L            ; Increment #REGl by one.
 $7FE9 LD A,(IY+$00)    ; Fetch the previous drawing instruction again in
                        ; #REGa.
 $7FEC INC IY           ; Increment the graphics data pointer by one.
 $7FEE RLCA             ; {Rotate #REGa left two bits.
 $7FEF RLCA             ; }
 $7FF0 AND %00000011    ; Keep only bits 0-1.
 $7FF2 OR B             ;
 $7FF3 LD B,A           ;
 $7FF4 INC B            ;
 $7FF5 CALL $8151       ; Call #R$8151.
 $7FF8 JR $7FBC         ; Jump back to #R$7FBC to fetch the next drawing
                        ; instruction.
*$7FFA BIT 6,A          ;
 $7FFC JR Z,$8012       ;
 $7FFE AND %00000111    ; Keep only bits 0-2.
 $8000 PUSH DE          ;
 $8001 LD D,(IY+$00)    ;
 $8004 INC IY           ;
 $8006 LD E,(IY+$00)    ;
 $8009 INC IY           ;
 $800B CALL $8071       ;
 $800E POP DE           ;
 $800F JP $7FBC         ; Jump back to #R$7FBC to fetch the next drawing
                        ; instruction.
*$8012 BIT 5,A          ; {If bit 5 is set then jump back to #R$7FBC to fetch
 $8014 JP Z,$7FBC       ; the next drawing instruction.}
 $8017 AND %00000111    ; Keep only bits 0-2.
 $8019 RLCA             ;
 $801A RLCA             ;
 $801B RLCA             ;
 $801C PUSH HL          ;
 $801D PUSH DE          ;
 $801E PUSH BC          ;
 $801F LD C,A           ;
 $8020 LD H,(IY+$00)    ;
 $8023 INC IY           ;
 $8025 LD L,(IY+$00)    ;
 $8028 INC IY           ;
*$802A LD A,(IY+$00)    ;
 $802D INC IY           ;
 $802F CP $FF           ;
 $8031 JR Z,$8063       ;
 $8033 LD B,A           ;
 $8034 AND %00000011    ; Keep only bits 0-1.
 $8036 LD E,A           ;
 $8037 LD A,B           ;
 $8038 RRCA             ;
 $8039 RRCA             ;
 $803A AND %00111111    ; Keep only bits 0-5.
 $803C INC A            ;
 $803D LD B,A           ;
*$803E LD A,(HL)        ;
 $803F AND %00000111    ; Keep only bits 0-2.
 $8041 RLCA             ;
 $8042 RLCA             ;
 $8043 RLCA             ;
 $8044 CP C             ;
 $8045 JR NZ,$8049      ;
 $8047 XOR $38          ;
*$8049 RRCA             ;
 $804A RRCA             ;
 $804B RRCA             ;
 $804C OR C             ;
 $804D LD (HL),A        ;
 $804E LD A,E           ;
 $804F AND A            ;
 $8050 CALL Z,$80F5     ;
 $8053 DEC A            ;
 $8054 CALL Z,$8121     ;
 $8057 DEC A            ;
 $8058 CALL Z,$8106     ;
 $805B DEC A            ;
 $805C CALL Z,$8117     ;
 $805F DJNZ $803E       ;
 $8061 JR $802A         ;
*$8063 POP BC           ;
 $8064 POP DE           ;
 $8065 POP HL           ;
 $8066 JP $7FBC         ; Jump back to #R$7FBC to fetch the next drawing
                        ; instruction.
@label=DrawingEnd
*$8069 POP BC           ; {Restore #REGbc, #REGde, #REGhl and #REGiy from the
 $806A POP DE           ; stack.
 $806B POP HL           ;
 $806C POP IY           ; }
 $806E RET              ; Return.
 $806F DEFB $00,$00     ;
*$8071 LD ($824E),A     ;
 $8074 PUSH DE          ;
 $8075 PUSH HL          ;
 $8076 LD HL,$0080      ;
 $8079 PUSH HL          ;
*$807A CALL $80EE       ;
 $807D JR NZ,$8086      ;
 $807F CALL $8148       ;
 $8082 JR NZ,$807A      ;
 $8084 JR $808C         ;
*$8086 CALL $81B5       ;
 $8089 CALL $8141       ;
*$808C LD HL,$0000      ;
 $808F LD ($806F),HL    ;
*$8092 CALL $812B       ;
 $8095 LD A,$00         ;
 $8097 JR Z,$80AE       ;
 $8099 CALL $80EE       ;
 $809C LD A,$00         ;
 $809E JR NZ,$80A9      ;
 $80A0 LD A,($806F)     ;
 $80A3 AND A            ;
 $80A4 JR NZ,$80A9      ;
 $80A6 PUSH DE          ;
 $80A7 LD A,$01         ;
*$80A9 PUSH AF          ;
 $80AA CALL $813A       ;
 $80AD POP AF           ;
*$80AE LD ($806F),A     ;
 $80B1 CALL $813A       ;
 $80B4 LD A,$00         ;
 $80B6 JR Z,$80CD       ;
 $80B8 CALL $80EE       ;
 $80BB LD A,$00         ;
 $80BD JR NZ,$80C8      ;
 $80BF LD A,($8070)     ;
 $80C2 AND A            ;
 $80C3 JR NZ,$80C8      ;
 $80C5 PUSH DE          ;
 $80C6 LD A,$01         ;
*$80C8 PUSH AF          ;
 $80C9 CALL $812B       ;
 $80CC POP AF           ;
*$80CD LD ($8070),A     ;
 $80D0 CALL $81B5       ;
 $80D3 CALL $8141       ;
 $80D6 JR Z,$80E0       ;
 $80D8 CALL $80EE       ;
 $80DB JR Z,$8092       ;
 $80DD CALL $81B5       ;
*$80E0 POP DE           ;
 $80E1 LD A,E           ;
 $80E2 CP $80           ;
 $80E4 JR NZ,$807A      ;
 $80E6 LD A,$00         ;
 $80E8 LD ($824E),A     ;
 $80EB POP HL           ; {Restore #REGhl and #REGde from the stack.
 $80EC POP DE           ; }
 $80ED RET              ; Return.
*$80EE PUSH HL          ; Stash #REGhl on the stack.
 $80EF CALL $81DE       ; Call #R$81DE.
 $80F2 AND (HL)         ;
 $80F3 POP HL           ; Restore #REGhl from the stack.
 $80F4 RET              ; Return.
*$80F5 PUSH AF          ; {Stash #REGaf and #REGde on the stack.
 $80F6 PUSH DE          ; }
 $80F7 LD DE,$0020      ;
 $80FA AND A            ;
 $80FB SBC HL,DE        ;
 $80FD LD A,H           ;
 $80FE CP $57           ;
 $8100 JR NZ,$8103      ;
 $8102 ADD HL,DE        ;
*$8103 POP DE           ; {Restore #REGde and #REGaf from the stack.
 $8104 POP AF           ; }
 $8105 RET              ; Return.
*$8106 PUSH AF          ; {Stash #REGaf and #REGde on the stack.
 $8107 PUSH DE          ; }
 $8108 LD DE,$0020      ; {#REGhl=#REGhl+$0020.
 $810B ADD HL,DE        ; }
 $810C LD A,H           ;
 $810D CP $5A           ;
 $810F JR NZ,$8113      ;
 $8111 AND A            ;
 $8112 SBC HL,DE        ;
 $8114 POP DE           ; {Restore #REGde and #REGaf from the stack.
 $8115 POP AF           ; }
 $8116 RET              ; Return.
*$8117 PUSH AF          ;
 $8118 DEC HL           ;
 $8119 LD A,H           ;
 $811A CP $57           ;
 $811C JR NZ,$811F      ;
 $811E INC HL           ;
*$811F POP AF           ;
 $8120 RET              ; Return.
*$8121 PUSH AF          ;
 $8122 INC HL           ;
 $8123 LD A,H           ;
 $8124 CP $5A           ;
 $8126 JR NZ,$8129      ;
 $8128 DEC HL           ;
*$8129 POP AF           ;
 $812A RET              ; Return.
*$812B INC E            ;
 $812C BIT 7,E          ;
 $812E JR Z,$8135       ;
 $8130 DEC E            ;
 $8131 LD H,A           ;
 $8132 XOR A            ;
 $8133 LD A,H           ;
 $8134 RET              ; Return.
*$8135 LD H,A           ; {Set bit 0 of #REGa (using #REGh).
 $8136 OR $01           ;
 $8138 LD A,H           ; }
 $8139 RET              ; Return.
*$813A DEC E            ;
 $813B BIT 7,E          ;
 $813D JR Z,$8135       ;
 $813F INC E            ;
 $8140 RET              ; Return.
*$8141 INC D            ;
 $8142 RET NZ           ;
 $8143 DEC D            ;
 $8144 LD H,A           ;
 $8145 XOR A            ;
 $8146 LD A,H           ;
 $8147 RET              ; Return.
*$8148 DEC D            ;
 $8149 LD H,A           ;
 $814A LD A,D           ;
 $814B CP $FF           ;
 $814D LD A,H           ;
 $814E RET NZ           ;
 $814F INC D            ;
 $8150 RET              ; Return.
*$8151 BIT 0,C          ; {If bit 0 of #REGc is not set then jump to #R$8185.
 $8153 JR NZ,$8185      ; }
 $8155 PUSH HL          ; {Stash #REGhl and #REGbc on the stack.
 $8156 PUSH BC          ; }
*$8157 CALL $81B5       ; Call #R$81B5.
 $815A BIT 2,C          ; {If bit 2 of #REGc is set then jump to #R$8165.
 $815C JR Z,$8165       ; }
 $815E CALL $8148       ; Call #R$8148.
 $8161 JR Z,$8182       ;
 $8163 JR $816A         ; Jump to #R$816A.
*$8165 CALL $8141       ; Call #R$8141.
 $8168 JR Z,$8182       ;
*$816A DEC B            ; Decrease #REGb by one.
 $816B JR NZ,$817F      ; Jump to #R$817F if it is not zero.
 $816D BIT 1,C          ; {If bit 1 of #REGc is set then jump to #R$8178.
 $816F JR Z,$8178       ; }
 $8171 CALL $813A       ; Call #R$813A.
 $8174 JR Z,$8182       ;
 $8176 JR $817D         ;
*$8178 CALL $812B       ;
 $817B JR Z,$8182       ;
*$817D POP BC           ;
 $817E PUSH BC          ;
*$817F DEC L            ;
 $8180 JR NZ,$8157      ;
*$8182 POP BC           ; {Restore #REGbc and #REGhl from the stack.
 $8183 POP HL           ; }
 $8184 RET              ; Return.
*$8185 PUSH HL          ; {Stash #REGhl and #REGbc on the stack.
 $8186 PUSH BC          ; }
*$8187 CALL $81B5       ; Call #R$81B5.
 $818A BIT 1,C          ;
 $818C JR Z,$8195       ;
 $818E CALL $813A       ;
 $8191 JR Z,$81B2       ;
 $8193 JR $819A         ;
*$8195 CALL $812B       ;
 $8198 JR Z,$81B2       ;
*$819A DEC B            ;
 $819B JR NZ,$81AF      ;
 $819D BIT 2,C          ;
 $819F JR Z,$81A8       ;
 $81A1 CALL $8148       ;
 $81A4 JR Z,$81B2       ;
 $81A6 JR $81AD         ;
*$81A8 CALL $8141       ;
 $81AB JR Z,$81B2       ;
*$81AD POP BC           ;
 $81AE PUSH BC          ;
*$81AF DEC L            ;
 $81B0 JR NZ,$8187      ;
*$81B2 POP BC           ; {Restore #REGbc and #REGhl from the stack.
 $81B3 POP HL           ; }
 $81B4 RET              ; Return.
*$81B5 PUSH HL          ;
 $81B6 CALL $81DE       ;
 $81B9 PUSH AF          ;
 $81BA PUSH HL          ;
 $81BB LD A,H           ;
 $81BC AND %00011000    ; Keep only bits 3-4.
 $81BE RRCA             ;
 $81BF RRCA             ;
 $81C0 RRCA             ;
 $81C1 ADD A,$58        ;
 $81C3 LD H,A           ;
 $81C4 LD A,(HL)        ;
 $81C5 AND %00111000    ; Keep only bits 3-5.
 $81C7 LD (HL),A        ;
 $81C8 LD A,($824E)     ;
 $81CB RLCA             ;
 $81CC RLCA             ;
 $81CD RLCA             ;
 $81CE CP (HL)          ;
 $81CF JR NZ,$81D3      ;
 $81D1 XOR $38          ;
*$81D3 RRCA             ;
 $81D4 RRCA             ;
 $81D5 RRCA             ;
 $81D6 OR (HL)          ;
 $81D7 LD (HL),A        ;
 $81D8 POP HL           ;
 $81D9 POP AF           ;
 $81DA OR (HL)          ;
 $81DB LD (HL),A        ;
 $81DC POP HL           ;
 $81DD RET              ; Return.
*$81DE LD A,$7F         ;
 $81E0 SUB E            ;
 $81E1 LD L,A           ;
 $81E2 AND %00000111    ; Keep only bits 0-2.
 $81E4 OR $40           ;
 $81E6 LD H,A           ;
 $81E7 LD A,L           ;
 $81E8 AND %11000000    ; Keep only bits 6-7.
 $81EA RRCA             ;
 $81EB RRCA             ;
 $81EC RRCA             ;
 $81ED OR H             ;
 $81EE LD H,A           ;
 $81EF LD A,L           ;
 $81F0 AND %00111000    ; Keep only bits 3-5.
 $81F2 RLCA             ;
 $81F3 RLCA             ;
 $81F4 LD L,A           ;
 $81F5 LD A,D           ;
 $81F6 RRCA             ;
 $81F7 RRCA             ;
 $81F8 RRCA             ;
 $81F9 AND %00011111    ; Keep only bits 0-4.
 $81FB OR L             ;
 $81FC LD L,A           ;
 $81FD LD A,D           ;
 $81FE AND %00000111    ; Keep only bits 0-2.
 $8200 PUSH BC          ; Stash #REGbc on the stack temporarily.
 $8201 LD B,A           ; Copy #REGa to #REGb used as a counter for the rotate
                        ; command.
 $8202 INC B            ;
 $8203 LD A,$01         ; #REGa=#EVAL($01,2,8).
*$8205 RRC A            ; Rotate #REGa right once.
 $8207 DJNZ $8205       ; Decrease counter by one and loop back to #R$8205
                        ; until counter is zero.
 $8209 POP BC           ; Restore #REGbc from the stack.
 $820A RET              ; Return.
@label=DrawingClear
*$820B CALL $95ED       ; Call #R$95ED.
 $820E EX AF,AF'        ; {Store the first byte of the graphic data in the
 $820F LD A,(IY+$00)    ; shadow #REGaf register.}
 $8212 INC IY           ; Increment the graphic data pointer to the next byte.
 $8214 EX AF,AF'        ; Switch back to the "normal" #REGaf register to check
                        ; the result of the call to #R$95ED.
 $8215 JR NC,$821A      ; Jump to #R$821A if #R$95ED did not set the carry flag
                        ; (so, it is LIGHT).
 $8217 EX AF,AF'        ; {Overwrite the graphic data in the shadow #REGaf
 $8218 XOR A            ; register to $00 (black).}
 $8219 EX AF,AF'        ; Switch back to the "normal" #REGaf register simply to
                        ; accomodate the jump from #R$8215.
@label=DrawingBorder
*$821A EX AF,AF'        ; Switch to the shadow #REGaf register containing the
                        ; first byte of the graphic data (or $00 if it's dark).
 $821B OUT ($FE),A      ; Set the border colour to the value in #REGa.
 $821D PUSH HL          ; {Store #REGhl, #REGde and #REGbc on the stack.
 $821E PUSH DE          ;
 $821F PUSH BC          ; }
 $8220 LD HL,$4000      ; {Write $00 to $4000-$4FFF (the screen buffer).
 $8223 LD DE,$4001      ;
 $8226 LD BC,$0FFF      ;
 $8229 LD (HL),$00      ;
 $822B LDIR             ; }
 $822D LD HL,$5800      ; {Set up copying to the attribute buffer (start=$5800,
 $8230 LD DE,$5801      ; length=$01FF).
 $8233 LD BC,$01FF      ; }
 $8236 LD A,(IY+$00)    ; #REGa=The next byte (second) of the graphic data.
 $8239 INC IY           ; Increment the graphic data pointer to the next byte.
 $823B EX AF,AF'        ; Switch back to the "normal" #REGaf register which
                        ; contains the LIGHT/ DARK carry flag.
 $823C JR NC,$8241      ; Jump to #R$8241 if #R$95ED did not set the carry flag
                        ; (so, it is LIGHT).
 $823E EX AF,AF'        ; {Overwrite the graphic data in the shadow #REGaf
 $823F XOR A            ; register to $00 (black).}
 $8240 EX AF,AF'        ; Switch back to the "normal" #REGaf register simply to
                        ; accomodate the jump from #R$823C.
@label=DrawingPaper
*$8241 EX AF,AF'        ; Switch to the shadow #REGaf register containing the
                        ; second byte of the graphic data (or $00 if it's
                        ; dark).
 $8242 LD (HL),A        ; {Write this to the attribute buffer using the target/
 $8243 LDIR             ; length specified previously.}
 $8245 POP BC           ; {Restore #REGbc, #REGde and #REGhl from the stack.
 $8246 POP DE           ;
 $8247 POP HL           ; }
 $8248 EX AF,AF'        ; Switch back to the "normal" #REGaf register which
                        ; contains the LIGHT/ DARK carry flag.
 $8249 RET NC           ; Return if it is LIGHT.
 $824A POP HL           ; {Else, restore #REGhl from the stack and jump to
 $824B JP $8069         ; #R$8069 to finish.}
 $824E DEFB $38,$00,$00 ;

; Routine at 8251
c$8251 LD HL,$8271   ;
 $8254 PUSH DE       ;
 $8255 LD D,$0D      ;
*$8257 LD A,(HL)     ;
 $8258 INC HL        ;
 $8259 CP C          ;
 $825A JR NZ,$8260   ;
 $825C LD A,(HL)     ;
 $825D CP B          ;
 $825E JR Z,$8267    ;
*$8260 INC HL        ;
 $8261 DEC D         ;
 $8262 JR NZ,$8257   ;
 $8264 JP $75A0      ;
*$8267 LD DE,$0019   ;
 $826A ADD HL,DE     ;
 $826B LD E,(HL)     ;
 $826C INC HL        ;
 $826D LD D,(HL)     ;
 $826E EX DE,HL      ;
 $826F POP DE        ;
 $8270 JP (HL)       ;
 $8271 NOP           ;
 $8272 NOP           ;
 $8273 LD C,(HL)     ;
 $8274 NOP           ;
 $8275 LD B,L        ;
 $8276 LD (BC),A     ;
 $8277 SBC A,(HL)    ;
 $8278 INC BC        ;
 $8279 XOR L         ;
 $827A INC B         ;
 $827B EI            ;
 $827C INC B         ;
 $827D LD A,C        ;
 $827E INC B         ;
 $827F XOR $03       ;
 $8281 ADD A,B       ;
 $8282 DEC B         ;
 $8283 JR $828A      ;
 $8285 LD E,$03      ;
 $8287 ADC A,D       ;
 $8288 DEC B         ;
 $8289 RET C         ;
*$828A INC B         ;
 $828B DEC D         ;
 $828C ADD A,E       ;
 $828D JP NC,$BA82   ;
 $8290 ADD A,D       ;
 $8291 JP PO,$B482   ;
 $8294 LD (HL),L     ;
 $8295 AND L         ;
 $8296 ADD A,D       ;
 $8297 XOR A         ;
 $8298 ADD A,D       ;
 $8299 LD D,C        ;
 $829A ADD A,H       ;
 $829B CALL Z,$9184  ;
 $829E ADD A,E       ;
 $829F AND B         ;
 $82A0 ADD A,E       ;
 $82A1 RST $28       ;
 $82A2 ADD A,E       ;
 $82A3 LD A,($DB84)  ;
 $82A6 EI            ;
 $82A7 BIT 6,A       ;
 $82A9 JR NZ,$82B3   ;
 $82AB LD A,$01      ;
 $82AD JR $82B0      ;
 $82AF XOR A         ;
*$82B0 LD ($B6F2),A  ;

; Routine at 82B3
;
; Used by the routines at #R$8251, #R$83A0, #R$83EF, #R$8451 and #R$84CC.
c$82B3 LD A,($B6DE)    ;
 $82B6 LD D,A          ;
 $82B7 JP $75B4        ;
 $82BA LD A,($B719)    ;
 $82BD CP $01          ;
 $82BF JP NZ,$7929     ;
 $82C2 LD A,$02        ;
 $82C4 LD ($B719),A    ;
 $82C7 LD A,(IY+$01)   ;
 $82CA OR $80          ;
 $82CC LD (IY+$01),A   ;
 $82CF JP $75B4        ;
 $82D2 LD A,($B719)    ;
 $82D5 CP $02          ;
 $82D7 JP Z,$75B4      ;
 $82DA LD A,$01        ;
 $82DC LD ($B719),A    ;
 $82DF JP $75B4        ;
 $82E2 PUSH DE         ;
 $82E3 LD HL,$B6E0     ;
 $82E6 LD DE,$757F     ;
 $82E9 LD BC,$0006     ;
 $82EC LDIR            ;
 $82EE POP DE          ;
 $82EF BIT 7,E         ;
 $82F1 CALL $82F7      ;
 $82F4 JP $75B4        ;
*$82F7 JP Z,$7838      ;
 $82FA JP $7850        ;
*$82FD LD A,D          ;
 $82FE LD ($824F),A    ;
 $8301 PUSH DE         ;
 $8302 PUSH BC         ;
 $8303 PUSH IY         ;
 $8305 LD A,($B706)    ;
 $8308 LD ($8250),A    ;
 $830B LD DE,$FFE8     ;
 $830E ADD IY,DE       ;
 $8310 LD A,$01        ;
 $8312 JP $758A        ;
 $8315 LD A,($B71B)    ;
 $8318 AND A           ;
 $8319 JR Z,$82FD      ;
 $831B DEC A           ;
 $831C LD ($B71B),A    ;
 $831F LD A,($8250)    ;
 $8322 LD B,A          ;
 $8323 LD A,($B706)    ;
 $8326 SUB B           ;
 $8327 AND A           ;
 $8328 LD C,$00        ;
 $832A JR Z,$8378      ;
 $832C POP IY          ;
 $832E PUSH IY         ;
 $8330 LD DE,$FFE8     ;
 $8333 ADD IY,DE       ;
 $8335 LD B,A          ;
*$8336 LD IX,$B738     ;
 $833A PUSH DE         ;
 $833B PUSH BC         ;
 $833C LD DE,$0019     ;
 $833F LD B,$08        ;
*$8341 LD A,(IX+$00)   ;
 $8344 AND A           ;
 $8345 JR Z,$834B      ;
 $8347 ADD IX,DE       ;
 $8349 DJNZ $8341      ;
*$834B LD (IX+$00),$FF ;
 $834F INC IX          ;
 $8351 POP BC          ;
 $8352 POP DE          ;
 $8353 JR NZ,$8378     ;
 $8355 BIT 6,(IY+$01)  ;
 $8359 JR Z,$8361      ;
 $835B LD (IX-$01),$00 ;
 $835F JR $8373        ;
*$8361 PUSH BC         ;
 $8362 LD B,$18        ;
*$8364 LD A,(IY+$00)   ;
 $8367 LD (IX+$00),A   ;
 $836A INC IY          ;
 $836C INC IX          ;
 $836E DJNZ $8364      ;
 $8370 POP BC          ;
 $8371 ADD IY,DE       ;
*$8373 ADD IY,DE       ;
 $8375 INC C           ;
 $8376 DJNZ $8336      ;
*$8378 XOR A           ;
 $8379 LD ($B719),A    ;
 $837C LD A,C          ;
 $837D LD ($B737),A    ;
 $8380 POP IY          ;
 $8382 LD A,($8250)    ;
 $8385 LD ($B706),A    ;
 $8388 POP BC          ;
 $8389 POP DE          ;
 $838A LD A,($824F)    ;
 $838D LD D,A          ;
 $838E JP $75B4        ; Jump to #R$75B4.
 $8391 CALL $83F5      ; Call #R$83F5.
*$8394 XOR A           ;
 $8395 IN A,($FE)      ;
 $8397 AND %00011111   ; Keep only bits 0-4.
 $8399 CP $1F          ;
 $839B JR Z,$8394      ;
 $839D JP $6C27        ; Jump to #R$6C27.

; Display Locate Help Message
@label=DisplayLocHlpMsg
c$83A0 LD A,($B6EA)  ;
 $83A3 AND A         ;
 $83A4 JP NZ,$75B4   ;
 $83A7 PUSH HL       ; {Store #REGhl and #REGix on the stack for later.
 $83A8 PUSH IX       ; }
; Default message response should there be no match for the current location.
 $83AA LD HL,$B467   ; #REGhl=#R$B467("you're doing fine[0x15]")
; Use the current location ID to look-up if there is a specific help message.
 $83AD LD A,($C12B)  ; {Using the #R$C12B(current location number), see if there is a help message available for display.
 $83B0 LD IX,$83CD   ;           This is achieved by passing #R$83CD to the #R$9DBD(Index ID Table) routine.
 $83B4 CALL $9DBD    ; }
 $83B7 JR Z,$83BF    ; If there is no message, jump directly to #R$83BF to
                     ; display the default message.
; Point to the specific help for the current location.
 $83B9 LD L,(IX+$01) ; {#REGhl=The address of the help message
 $83BC LD H,(IX+$02) ; }
; Print the message.
@label=DisplayLocHlpMsg_Print
*$83BF LD A,$01      ; {Write $01 to #R$B701.
 $83C1 LD ($B701),A  ; }
 $83C4 CALL $72DD    ; Call #R$72DD.
 $83C7 POP IX        ; {Restore #REGix and #REGhl from the stack.
 $83C9 POP HL        ; }
 $83CA JP $82B3      ; Jump to #R$82B3.

; Locate Help Message
@label=LocHlpMsg
b$83CD DEFB $06      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83CE DEFW $B47A    ; #TEXTMESSAGE(#PC)
 $83D0 DEFB $09      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83D1 DEFW $B48A    ; #TEXTMESSAGE(#PC)
 $83D3 DEFB $0D      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83D4 DEFW $B49A    ; #TEXTMESSAGE(#PC)
 $83D6 DEFB $42      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83D7 DEFW $B4BE    ; #TEXTMESSAGE(#PC)
 $83D9 DEFB $1F      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83DA DEFW $B4CA    ; #TEXTMESSAGE(#PC)
 $83DC DEFB $20      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83DD DEFW $B4DA    ; #TEXTMESSAGE(#PC)
 $83DF DEFB $2A      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83E0 DEFW $B4FA    ; #TEXTMESSAGE(#PC)
 $83E2 DEFB $2E      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83E3 DEFW $B504    ; #TEXTMESSAGE(#PC)
 $83E5 DEFB $29      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83E6 DEFW $B518    ; #TEXTMESSAGE(#PC)
 $83E8 DEFB $1A      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83E9 DEFW $B52F    ; #TEXTMESSAGE(#PC)
 $83EB DEFB $05      ; Location #LOCATION(#PEEK(#PC), 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $83EC DEFW $B53E    ; #TEXTMESSAGE(#PC)
 $83EE DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Game Over
@label=GameOver
c$83EF CALL $83F5    ; Call #R$83F5.
 $83F2 JP $82B3      ; Jump to #R$82B3.
; Actions "game over".
@label=GameOver_Start
*$83F5 PUSH HL       ; {Stash #REGhl and #REGde on the stack.
 $83F6 PUSH DE       ; }
 $83F7 XOR A         ; {Write $00 to #R$B701.
 $83F8 LD ($B701),A  ; }
 $83FB LD HL,$B454   ; #REGhl=#R$B454("you have mastered [0x16]")
 $83FE CALL $72DD    ; Call #R$72DD.
 $8401 LD HL,($B6F7) ; #REGhl=#R$B6F7.
 $8404 LD DE,$0064   ; #REGde=$0064 (i.e. "100" in decimal).
 $8407 CALL $842E    ; Call #R$842E.
 $840A CALL NZ,$858B ; If the result is non-zero, call #R$858B.
 $840D LD DE,$000A   ; #REGde=$000A (i.e. "10" in decimal).
 $8410 CALL $842E    ; Call #R$842E.
 $8413 CALL $858B    ; Call #R$858B.
 $8416 LD A,$2E      ; #REGa=$2E (i.e. a period in ASCII, as the produced
                     ; percentage is a float).
 $8418 CALL $858B    ; Call #R$858B.
 $841B LD A,L        ; {#REGa=the percentage digit, plus $30 to convert to
 $841C ADD A,$30     ; ASCII.}
 $841E CALL $858B    ; Call #R$858B.
 $8421 XOR A         ; {Write $00 to #R$B704.
 $8422 LD ($B704),A  ; }
 $8425 LD HL,$B462   ; #REGhl=#R$B462("% of this adventure")
 $8428 CALL $72DD    ; Call #R$72DD.
 $842B POP DE        ; {Restore #REGde and #REGhl from the stack.
 $842C POP HL        ; }
 $842D RET           ; Return.
; Converts e.g. "0075" into "7.5" in ASCII for display purposes.
@label=PercentageAscii
*$842E LD A,$2F      ; #REGa=$2F (ASCII "0" less one, due to the following line
                     ; being the loop and so, incrementing to $30 - which is
                     ; ASCII "0").
@label=PercentageAscii_Loop
*$8430 INC A         ; Increment #REGa by one.
 $8431 AND A         ;
 $8432 SBC HL,DE     ; Subtract #REGde (either 100 or 10) from #REGhl.
 $8434 JR NC,$8430   ; Jump back to #R$8430 if there's no carry.
 $8436 ADD HL,DE     ; #REGhl=#REGhl + #REGde.
 $8437 CP $30        ; Compare against $30 (ASCII "0") to set flags for the
                     ; return.
 $8439 RET           ; Return.
; I don't believe this is ever used?
 $843A LD A,$04      ; {Set the border to $04 (green).
 $843C OUT ($FE),A   ; }
 $843E CALL $84B9    ; Call #R$84B9.
@label=WaitForKey
*$8441 XOR A         ; {Read from the keyboard port.
 $8442 IN A,($FE)    ; }
 $8444 AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $8446 CP $1F        ; {Loop back to #R$8441 until any key has been pressed.
 $8448 JR NZ,$8441   ; }
 $844A LD A,$07      ; {Set the border to $07 (white).
 $844C OUT ($FE),A   ; }
 $844E JP $82B3      ; Jump to #R$82B3.

; Load Game
@label=LoadGame
c$8451 PUSH IX       ; {Stash #REGix and #REGde on the stack.
 $8453 PUSH DE       ; }
; Load "flags".
 $8454 LD A,$FF      ; Set the load as a "data block".
 $8456 SCF           ; Set the carry flag.
 $8457 LD IX,$B6EB   ; Set the start address to; #R$B6EB.
 $845B LD DE,$001D   ; Set the block length to; $001D bytes.
 $845E CALL $8498    ; Call #R$8498.
; Load "objects".
 $8461 LD A,$FF      ; Set the load as a "data block".
 $8463 SCF           ; Set the carry flag.
 $8464 LD IX,$C11B   ; Set the start address to; #R$C11B.
 $8468 LD DE,$0615   ; Set the block length to; $0615 bytes.
 $846B CALL $8498    ; Call #R$8498.
; Load...
 $846E LD A,$FF      ; Set the load as a "data block".
 $8470 SCF           ; Set the carry flag.
 $8471 LD IX,$CA84   ; Set the start address to; #R$CA84.
 $8475 LD DE,$00BF   ; Set the block length to; $00BF bytes.
 $8478 CALL $8498    ; Call #R$8498.
; Load "locations".
 $847B LD A,$FF      ; Set the load as a "data block".
 $847D SCF           ; Set the carry flag.
 $847E LD IX,$BA8A   ;  Set the start address to; #R$BA8A.
 $8482 LD DE,$05D9   ; Set the block length to; $05D9 bytes.
 $8485 CALL $8498    ; Call #R$8498.
; Success!
 $8488 DI            ; Disable interrupts.
 $8489 LD HL,$B6EB   ; {Call #R$84B3 using #REGhl=#R$B6EB and #REGde=$C9E2.
 $848C LD DE,$C9E2   ;
 $848F CALL $84B3    ; }
 $8492 POP DE        ; {Restore #REGde and #REGix from the stack.
 $8493 POP IX        ; }
 $8495 JP $82B3      ; Jump to #R$82B3.
; Load Block
@label=LoadBlock
*$8498 CALL $0556    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/0556.html">LD_BYTES</a>.)
 $849B RET C         ; Return if the carry flag is set.
 $849C LD A,$01      ; {Write $01 to #R$B701.
 $849E LD ($B701),A  ; }
 $84A1 LD HL,$B357   ; #REGhl=#R$B357("tape error - hit any key to restart
                     ; program[0x15]")
 $84A4 CALL $72DD    ; Call #R$72DD.
@label=LoadBlock_Loop
*$84A7 XOR A         ; {Read from the keyboard port.
 $84A8 IN A,($FE)    ; }
 $84AA AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $84AC CP $1F        ; {Loop back to #R$84A7 until any key has been pressed.
 $84AE JR Z,$84A7    ; }
 $84B0 JP $6C27      ; Jump to #R$6C27.

; Copies 3 bytes from source to target
;
; Used by the routines at #R$8451 and #R$84CC.
;
; DE Source
; HL Target
@label=ThreeByteCopy
c$84B3 LD BC,$0003   ; #REGbc=$0003.
 $84B6 LDIR          ; Copy three bytes of data from #REGde to #REGhl.
 $84B8 RET           ; Return.

; Debounce keyboard
;
; Used by the routines at #R$83EF and #R$84CC.
@label=DebounceAnyKey
c$84B9 XOR A         ; {Read from the keyboard port.
 $84BA IN A,($FE)    ; }
 $84BC AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $84BE CP $1F        ; {Loop back to #R$84B9 if a key is being pressed.
 $84C0 JR NZ,$84B9   ; }
@label=NormalAnyKey
*$84C2 XOR A         ; {Read from the keyboard port.
 $84C3 IN A,($FE)    ; }
 $84C5 AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $84C7 CP $1F        ; {Loop back to #R$84C2 until any key has been pressed.
 $84C9 JR Z,$84C2    ; }
 $84CB RET           ; Return.

; Save Game
@label=SaveGame
c$84CC PUSH IX       ; {Stash #REGix and #REGde on the stack.
 $84CE PUSH DE       ; }
 $84CF LD DE,$B6EB   ; {Call #R$84B3 with #REGde=#R$B6EB and #REGhl=$C9E2.
 $84D2 LD HL,$C9E2   ;
 $84D5 CALL $84B3    ; }
 $84D8 LD A,$01      ; {Write $01 to #R$B701.
 $84DA LD ($B701),A  ; }
 $84DD LD HL,$B342   ; #REGhl=#R$B342("start tape then press any key")
 $84E0 CALL $72DD    ; Call #R$72DD.
 $84E3 CALL $84B9    ; Call #R$84B9.
; Save "flags".
 $84E6 LD A,$FF      ; Set the save as a "data block".
 $84E8 LD IX,$B6EB   ; Set the start address to; #R$B6EB.
 $84EC LD DE,$001D   ; Set the block length to; $001D bytes.
 $84EF CALL $04C2    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/04C2.html">SA_BYTES</a>.)
; Save "objects".
 $84F2 LD A,$FF      ; Set the save as a "data block".
 $84F4 LD IX,$C11B   ; Set the start address to; #R$C11B.
 $84F8 LD DE,$0615   ; Set the block length to; $0615 bytes.
 $84FB CALL $04C2    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/04C2.html">SA_BYTES</a>.)
; Save ...
 $84FE LD A,$FF      ; Set the save as a "data block".
 $8500 LD IX,$CA84   ; Set the start address to; $CA84.
 $8504 LD DE,$00BF   ; Set the block length to; $00BF bytes.
 $8507 CALL $04C2    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/04C2.html">SA_BYTES</a>.)
; Save "locations".
 $850A LD A,$FF      ; Set the save as a "data block".
 $850C LD IX,$BA8A   ; Set the start address to; #R$BA8A.
 $8510 LD DE,$05D9   ; Set the block length to; $05D9 bytes.
 $8513 CALL $04C2    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/04C2.html">SA_BYTES</a>.)
; Begin verification.
 $8516 LD HL,$B3A4   ; #REGhl=#R$B3A4("rewind and prepare tape for verification
                     ; -- then hit any key")
 $8519 CALL $72DD    ; Call #R$72DD.
 $851C CALL $84B9    ; Call #R$84B9.
; Verify "flags".
 $851F LD A,$FF      ; Set the load as a "data block".
 $8521 AND A         ; Reset the carry flag.
 $8522 LD IX,$B6EB   ; Set the start address to; #R$B6EB.
 $8526 LD DE,$001D   ; Set the block length to; $001D bytes.
 $8529 CALL $855A    ; Call #R$855A.
; Verify "objects".
 $852C LD A,$FF      ; Set the load as a "data block".
 $852E AND A         ; Reset the carry flag.
 $852F LD IX,$C11B   ; Set the start address to; #R$C11B.
 $8533 LD DE,$0615   ; Set the block length to; $0615 bytes.
 $8536 CALL $855A    ; Call #R$855A.
; Verify ...
 $8539 LD A,$FF      ; Set the load as a "data block".
 $853B AND A         ; Reset the carry flag.
 $853C LD IX,$CA84   ; Set the start address to; $CA84.
 $8540 LD DE,$00BF   ; Set the block length to; $00BF bytes.
 $8543 CALL $855A    ; Call #R$855A.
; Verify "locations".
 $8546 LD A,$FF      ; Set the load as a "data block".
 $8548 AND A         ; Reset the carry flag.
 $8549 LD IX,$BA8A   ; Set the start address to; #R$BA8A.
 $854D LD DE,$05D9   ; Set the block length to; $05D9 bytes.
 $8550 CALL $855A    ; Call #R$855A.
; Success!
@label=SaveGame_Done
*$8553 DI            ; Disable interrupts.
 $8554 POP DE        ; {Restore #REGde and #REGix from the stack.
 $8555 POP IX        ; }
 $8557 JP $82B3      ; Jump to #R$82B3.
; Verify block.
@label=VerifyBlock
*$855A CALL $0556    ; #HTML(Call <a
                     ; href="https://skoolkid.github.io/rom/asm/0556.html">LD_BYTES</a>.)
 $855D RET C         ; Return if the carry flag is set.
 $855E LD A,$01      ; {Write $01 to #R$B701.
 $8560 LD ($B701),A  ; }
 $8563 LD HL,$B381   ; #REGhl=#R$B381("tape error - hit any key to
                     ; continue[0x15]")
 $8566 CALL $72DD    ; Call #R$72DD.
; This is almost a carbon copy of #R$8441.
@label=VerifyBlock_WaitForKey
*$8569 XOR A         ; {Read from the keyboard port.
 $856A IN A,($FE)    ; }
 $856C AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $856E CP $1F        ; {Loop back to #R$8569 until any key has been pressed.
 $8570 JR Z,$8569    ; }
 $8572 POP DE        ; Restore #REGde from the stack.
 $8573 JP $8553      ; Jump to #R$8553.

; Routine at 8576
c$8576 PUSH HL          ; Stash #REGhl on the stack.
 $8577 LD L,A           ; #REGl=#REGa.
 $8578 LD A,($B6FA)     ; {#REGh=#R$B6FA.
 $857B LD H,A           ; }
 $857C LD A,($B702)     ; #REGa=#R$B702.
 $857F AND H            ;
 $8580 LD A,L           ;
 $8581 POP HL           ; Restore #REGhl from the stack.
 $8582 RET              ; Return.
; This entry point is used by the routines at #R$6C00, #R$70F3, #R$7340,
; #R$74C1, #R$8C4B, #R$93DA, #R$962B, #R$96B3, #R$9F94, #R$A050 and #R$A138.
*$8583 PUSH AF          ; Stash #REGaf on the stack.
 $8584 LD A,$0D         ; #REGa=$0D.
 $8586 CALL $858B       ; Call #R$858B.
 $8589 POP AF           ; Restore #REGaf from the stack.
 $858A RET              ; Return.
; This entry point is used by the routines at #R$6C00, #R$6DD6, #R$70F3,
; #R$72C3, #R$7340, #R$73BD, #R$74C1, #R$83EF, #R$8C4B, #R$93DA, #R$96B3 and
; #R$9F94.
*$858B CALL $8576       ; Call #R$8576.
 $858E RET Z            ; Return if zero.
 $858F PUSH AF          ; Stash #REGaf on the stack.
 $8590 LD A,($B701)     ; {If #R$B701 is not zero then jump to #R$85B7.
 $8593 AND A            ;
 $8594 JR NZ,$85B7      ; }
 $8596 POP AF           ; Restore #REGaf from the stack.
 $8597 CALL $86A1       ; Call #R$86A1.
 $859A PUSH AF          ; Stash #REGaf on the stack.
 $859B LD A,($B700)     ; {If #R$B700 is not zero then jump to #R$85A3.
 $859E AND A            ;
 $859F JR NZ,$85A3      ; }
 $85A1 POP AF           ; Restore #REGaf from the stack.
 $85A2 RET              ; Return.
*$85A3 POP AF           ; Restore #REGaf from the stack.
 $85A4 CP $53           ; {If this is ASCII "S" then jump to #R$85AB.
 $85A6 JR Z,$85AB       ; }
 $85A8 CP $73           ; {If this is not ASCII "s" then return.
 $85AA RET NZ           ; }
*$85AB PUSH AF          ; Stash #REGaf on the stack.
 $85AC LD A,$48         ; #REGa=$48 ("F" in ASCII).
 $85AE CALL $86A1       ; Call #R$86A1.
 $85B1 POP AF           ; Restore #REGaf from the stack.
 $85B2 RET              ; Return.
 $85B3 NOP              ;
@label=PercentageBuffer
 $85B4 DEFB $00,$00,$00 ; Percentage buffer.
*$85B7 POP AF           ; Restore #REGaf from the stack.
; This entry point is used by the routine at #R$6C00.
*$85B8 PUSH HL          ;
 $85B9 PUSH AF          ;
 $85BA LD HL,($85B4)    ;
 $85BD CP $0D           ;
 $85BF JR NZ,$85C8      ;
 $85C1 LD A,$20         ;
 $85C3 CALL $867A       ;
 $85C6 JR $85DF         ;
*$85C8 CP $08           ;
 $85CA JR Z,$85F5       ;
 $85CC CP $61           ;
 $85CE JR C,$85D6       ;
 $85D0 CP $7B           ;
 $85D2 JR NC,$85D6      ;
 $85D4 AND $5F          ;
*$85D6 CALL $867A       ;
 $85D9 LD A,($85B3)     ;
 $85DC DEC A            ;
 $85DD JR NZ,$85E6      ;
*$85DF LD L,$E0         ;
 $85E1 CALL $860D       ;
 $85E4 LD A,$20         ;
*$85E6 LD ($85B3),A     ;
 $85E9 LD A,($85B6)     ;
 $85EC LD ($85B4),HL    ;
 $85EF CALL $867A       ;
 $85F2 POP AF           ;
 $85F3 POP HL           ;
 $85F4 RET              ;
*$85F5 LD A,$20         ;
 $85F7 CALL $867A       ;
 $85FA DEC L            ;
 $85FB DEC L            ;
 $85FC LD A,($85B3)     ;
 $85FF INC A            ;
 $8600 CP $21           ;
 $8602 JR NZ,$85E6      ;
 $8604 LD L,$FF         ;
 $8606 CALL $864A       ;
 $8609 LD A,$01         ;
 $860B JR $85E6         ;
*$860D PUSH HL          ;
 $860E PUSH DE          ;
 $860F PUSH BC          ;
 $8610 PUSH AF          ;
 $8611 LD HL,$5080      ;
 $8614 LD DE,$5060      ;
 $8617 LD A,$04         ;
 $8619 LD B,$00         ;
*$861B PUSH HL          ;
 $861C PUSH DE          ;
 $861D LD C,$08         ;
*$861F PUSH HL          ;
 $8620 PUSH DE          ;
 $8621 PUSH BC          ;
 $8622 LD C,$20         ;
 $8624 LDIR             ;
 $8626 POP BC           ;
 $8627 POP DE           ;
 $8628 POP HL           ;
 $8629 INC H            ;
 $862A INC D            ;
 $862B DEC C            ;
 $862C JR NZ,$861F      ;
 $862E POP DE           ;
 $862F POP HL           ;
 $8630 LD C,$20         ;
 $8632 ADD HL,BC        ;
 $8633 EX DE,HL         ;
 $8634 ADD HL,BC        ;
 $8635 EX DE,HL         ;
 $8636 DEC A            ;
 $8637 JR NZ,$861B      ;
 $8639 LD B,$20         ;
 $863B LD HL,$50E0      ;
 $863E LD A,$20         ;
*$8640 CALL $867A       ;
 $8643 DJNZ $8640       ;
 $8645 POP AF           ;
 $8646 POP BC           ;
 $8647 POP DE           ;
 $8648 POP HL           ;
 $8649 RET              ;
*$864A PUSH HL          ;
 $864B PUSH DE          ;
 $864C PUSH BC          ;
 $864D PUSH AF          ;
 $864E LD HL,$50C0      ;
 $8651 LD DE,$50E0      ;
 $8654 LD A,$05         ;
*$8656 PUSH HL          ;
 $8657 PUSH DE          ;
 $8658 LD B,$08         ;
*$865A PUSH HL          ;
 $865B PUSH DE          ;
 $865C PUSH BC          ;
 $865D LD BC,$0020      ;
 $8660 LDIR             ;
 $8662 POP BC           ;
 $8663 POP DE           ;
 $8664 POP HL           ;
 $8665 INC H            ;
 $8666 INC D            ;
 $8667 DJNZ $865A       ;
 $8669 POP DE           ;
 $866A POP HL           ;
 $866B LD BC,$FFE0      ;
 $866E ADD HL,BC        ;
 $866F EX DE,HL         ;
 $8670 ADD HL,BC        ;
 $8671 EX DE,HL         ;
 $8672 DEC A            ;
 $8673 JR NZ,$8656      ;
 $8675 POP AF           ;
 $8676 POP BC           ;
 $8677 POP DE           ;
 $8678 POP HL           ;
 $8679 RET              ;

; Print Character
;
; Used by the routine at #R$8576.
;
; A ASCII value of character to print
;
; #HTML(Prints using the standard ZX Spectrum <a
; href="https://skoolkid.github.io/rom/asm/3D00.html">CHARSET</a>.)
@label=PrintChar
c$867A PUSH AF       ; {Push #REGaf, #REGbc, #REGde and #REGhl on the stack.
 $867B PUSH BC       ;
 $867C PUSH DE       ;
 $867D PUSH HL       ; }
 $867E SUB $20       ; {Create offset for the font graphic data look-up. For example;
 $8680 LD L,A        ; #TABLE(default,centre,centre,centre,centre,centre)
 $8681 LD H,$00      ; { =h Letter | =h ASCII Value | =h SUB #N($20, 2, 3, 1, 1)($) | =h * 8 | =h CHARSET + offset }
 $8683 ADD HL,HL     ; { #LET(id=$41) #LET(result=$3D00 + ({id} - $20) * 8) "#CHR({id})" | #N({id}, 2, 3, 1, 1)($) | #N({id} - $20, 2, 3, 1, 1)($) | #N(({id} - $20) * 8, 2, 3, 1, 1)($) | #HTML(<a href="https://skoolkid.github.io/rom/asm/3D00.html##N({result}, 2, 3, 1, 1)()">#N({result}, 2, 3, 1, 1)($)</a>) }
 $8684 ADD HL,HL     ; { #LET(id=$51) #LET(result=$3D00 + ({id} - $20) * 8) "#CHR({id})" | #N({id}, 2, 3, 1, 1)($) | #N({id} - $20, 2, 3, 1, 1)($) | #N(({id} - $20) * 8, 2, 3, 1, 1)($) | #HTML(<a href="https://skoolkid.github.io/rom/asm/3D00.html##N({result}, 2, 3, 1, 1)()">#N({result}, 2, 3, 1, 1)($)</a>) }
 $8685 ADD HL,HL     ; { #LET(id=$61) #LET(result=$3D00 + ({id} - $20) * 8) "#CHR({id})" | #N({id}, 2, 3, 1, 1)($) | #N({id} - $20, 2, 3, 1, 1)($) | #N(({id} - $20) * 8, 2, 3, 1, 1)($) | #HTML(<a href="https://skoolkid.github.io/rom/asm/3D00.html##N({result}, 2, 3, 1, 1)()">#N({result}, 2, 3, 1, 1)($)</a>) }
                     ; TABLE#}
 $8686 LD DE,$3D00   ; {#HTML(Calculate font graphic data address using <a
 $8689 ADD HL,DE     ; href="https://skoolkid.github.io/rom/asm/3D00.html">CHARSET</a>
                     ; + offset.)}
 $868A EX DE,HL      ; {Store the result in #REGde, restore the screen location
 $868B POP HL        ; to #REGhl.
 $868C PUSH HL       ; }
 $868D LD B,$08      ; Set a counter for $08 lines.
@label=PrintChar_Loop
*$868F LD A,(DE)     ; {Fetch the font byte and copy it to the screen.
 $8690 LD (HL),A     ; }
 $8691 INC DE        ; Move onto the next font data byte.
 $8692 INC H         ; Move the screen pointer down one row.
 $8693 DJNZ $868F    ; Decrease counter by one and loop back to #R$868F until
                     ; counter is zero.
 $8695 POP HL        ; {Restore #REGhl, #REGde, #REGbc and #REGaf off the
 $8696 POP DE        ; stack.
 $8697 POP BC        ;
 $8698 POP AF        ; }
 $8699 INC L         ; Move the screen pointer across one column, ready for
                     ; printing the next character.
 $869A RET           ; Return.

; Routine at 869B
c$869B DEFB $00      ;
 $869C DEFW $0000    ;
 $869E DEFB $00      ;
 $869F DEFB $00      ;
 $86A0 DEFB $00      ;
; This entry point is used by the routine at #R$8576.
*$86A1 PUSH HL       ;
 $86A2 PUSH BC       ;
 $86A3 PUSH AF       ;
 $86A4 LD HL,($869C) ;
 $86A7 LD A,($869E)  ;
 $86AA LD C,A        ;
 $86AB LD A,($86A0)  ;
 $86AE AND A         ;
 $86AF JR NZ,$86C6   ;
 $86B1 LD A,($869F)  ;
 $86B4 AND A         ;
 $86B5 JR Z,$86C6    ;
 $86B7 LD B,A        ;
*$86B8 LD A,$20      ;
 $86BA CALL $87C9    ;
 $86BD LD A,($869B)  ;
 $86C0 DEC A         ;
 $86C1 LD ($869B),A  ;
 $86C4 DJNZ $86B8    ;
*$86C6 POP AF        ;
 $86C7 PUSH AF       ;
 $86C8 CP $0D        ;
 $86CA JR NZ,$870D   ;
 $86CC LD A,$01      ;
 $86CE LD ($B704),A  ;
*$86D1 XOR A         ;
 $86D2 LD ($86A0),A  ;
 $86D5 CALL $8B22    ;
 $86D8 PUSH BC       ;
 $86D9 LD A,($B716)  ;
 $86DC AND A         ;
 $86DD JR NZ,$86F3   ;
 $86DF LD BC,$8000   ;
*$86E2 XOR A         ;
 $86E3 IN A,($FE)    ;
 $86E5 AND $1F       ;
 $86E7 CP $1F        ;
 $86E9 JR NZ,$86F7   ;
 $86EB DEC BC        ;
 $86EC LD A,B        ;
 $86ED OR C          ;
 $86EE JR NZ,$86E2   ;
 $86F0 POP BC        ;
 $86F1 JR $8701      ;
*$86F3 DEC A         ;
 $86F4 LD ($B716),A  ;
*$86F7 POP BC        ;
*$86F8 XOR A         ;
 $86F9 IN A,($FE)    ;
 $86FB AND $1F       ;
 $86FD CP $1F        ;
 $86FF JR NZ,$86F8   ;
*$8701 LD HL,$5020   ;
 $8704 LD C,$01      ;
 $8706 CALL $876B    ;
 $8709 LD A,$2A      ;
 $870B JR $8753      ;
*$870D CP $08        ;
 $870F JR NZ,$8722   ;
 $8711 CALL $8761    ;
 $8714 LD A,$20      ;
 $8716 CALL $87C9    ;
 $8719 CALL $8761    ;
 $871C LD A,($869B)  ;
 $871F INC A         ;
 $8720 JR $8753      ;
*$8722 CP $41        ;
 $8724 JR C,$872C    ;
 $8726 CP $5B        ;
 $8728 JR NC,$872C   ;
 $872A OR $20        ;
*$872C PUSH HL       ;
 $872D LD HL,$B704   ;
 $8730 INC (HL)      ;
 $8731 DEC (HL)      ;
 $8732 JR Z,$8740    ;
 $8734 CP $61        ;
 $8736 JR C,$8740    ;
 $8738 CP $7B        ;
 $873A JR NC,$8740   ;
 $873C RES 5,A       ;
 $873E LD (HL),$00   ;
*$8740 CP $2E        ;
 $8742 JR NZ,$8745   ;
 $8744 INC (HL)      ;
*$8745 POP HL        ;
 $8746 CALL $87C9    ;
 $8749 LD ($86A0),A  ;
 $874C LD A,($869B)  ;
 $874F DEC A         ;
 $8750 JP Z,$86D1    ;
*$8753 LD ($869B),A  ;
 $8756 LD ($869C),HL ;
 $8759 LD A,C        ;
 $875A LD ($869E),A  ;
 $875D POP AF        ;
 $875E POP BC        ;
 $875F POP HL        ;
 $8760 RET           ;
*$8761 LD A,C        ;
 $8762 SUB $06       ;
 $8764 LD C,A        ;
 $8765 RET NC        ;
 $8766 ADD A,$08     ;
 $8768 LD C,A        ;
 $8769 DEC L         ;
 $876A RET           ;

; Scroll Line
;
; Used by the routine at #R$869B.
@label=ScrollLine
c$876B PUSH AF       ; {Push #REGaf, #REGbc, #REGhl and #REGde on the stack.
 $876C PUSH BC       ;
 $876D PUSH HL       ;
 $876E PUSH DE       ; }
; Set up the initial values.
 $876F LD HL,$4020   ; #REGhl=$4020 (source).
 $8772 LD DE,$4000   ; #REGde=$4000 (target).
 $8775 LD A,$11      ; #REGa=$11 (number of lines to shift).
 $8777 LD B,$00      ; #REGb=$00.
@label=ScrollLine_Loop
*$8779 PUSH HL       ; {Stash #REGhl and #REGde on the stack.
 $877A PUSH DE       ; }
 $877B LD C,$08      ; #REGc=$08 (byte counter).
@label=ScrollLine_Line
*$877D PUSH HL       ; {Stash #REGhl, #REGde and #REGbc on the stack.
 $877E PUSH DE       ;
 $877F PUSH BC       ; }
 $8780 LD C,$20      ; #REGc=$20 (column counter - i.e. one row).
 $8782 LDIR          ; Copy the row up one.
 $8784 POP BC        ; {Restore #REGbc, #REGde and #REGhl from the stack.
 $8785 POP DE        ;
 $8786 POP HL        ; }
 $8787 INC H         ; {Increment the MSB of #REGhl and #REGde by one to point
 $8788 INC D         ; to the next line down.}
 $8789 DEC C         ; Decrease our byte counter in #REGc by one.
 $878A JR NZ,$877D   ; Jump back to #R$877D unless the whole line is moved
                     ; (i.e. #REGc is now zero).
 $878C POP DE        ; {Restore #REGde and #REGhl from the stack. They are now
 $878D POP HL        ; at their values prior to the line move #R$8779.}
 $878E LD C,$20      ; {#REGde=#REGde + $20 and #REGhl=#REGhl + $20.
 $8790 ADD HL,BC     ;
 $8791 EX DE,HL      ;
 $8792 ADD HL,BC     ;
 $8793 EX DE,HL      ; }
 $8794 PUSH AF       ; Stash #REGaf on the stack.
 $8795 LD A,D        ; #REGa=#REGd.
 $8796 AND %00000111 ; Keep only bits 0-2.
 $8798 JR Z,$879E    ; Skip to #R$879E if zero.
; Handle changing the target between each screen buffer area.
 $879A LD A,D        ; {#REGd=#REGd + $07.
 $879B ADD A,$07     ;
 $879D LD D,A        ; }
@label=ScrollLine_SkipDE
*$879E LD A,H        ; #REGa=#REGh.
 $879F AND %00000111 ; Keep only bits 0-2.
 $87A1 JR Z,$87A7    ; Skip to #R$87A7 if zero.
; Handle changing the source between each screen buffer area.
 $87A3 LD A,H        ; {#REGh=#REGh + $07.
 $87A4 ADD A,$07     ;
 $87A6 LD H,A        ; }
@label=ScrollLine_SkipHL
*$87A7 POP AF        ; Restore #REGaf containing the line counter from the
                     ; stack.
 $87A8 DEC A         ; Decrease #REGa by one.
 $87A9 JR NZ,$8779   ; Loop back to #R$8779 until the line counter is zero.
; Handle the attributes.
 $87AB LD HL,$5820   ; {Move the attributes up one character block.
 $87AE LD DE,$5800   ;
 $87B1 LD BC,$0220   ;
 $87B4 LDIR          ; }
; This creates the indent.
 $87B6 LD B,$2A      ; Set a counter for #N($2A, 2, 3, 1, 1)($) spaces.
 $87B8 LD HL,$5020   ; Set the target screen location to #N($5020, 2, 3, 1,
                     ; 1)($).
 $87BB LD C,$01      ; #REGc=$01 (bit offset).
 $87BD LD A,$20      ; #REGa=ASCII "SPACE".
@label=ScrollLine_Spacing
*$87BF CALL $87C9    ; Call #R$87C9.
 $87C2 DJNZ $87BF    ; Decrease counter by one and loop back to #R$87BF until
                     ; counter is zero.
; Housekeeping and return.
 $87C4 POP DE        ; {Restore #REGde, #REGhl, #REGbc and #REGaf off the
 $87C5 POP HL        ; stack.
 $87C6 POP BC        ;
 $87C7 POP AF        ; }
 $87C8 RET           ; Return.

; Print Proper Character
;
; Used by the routines at #R$869B and #R$876B.
;
; A ASCII value
; C Bit offset
; HL Target screen location
;
; Prints using the custom #R$8822(font).
@label=PrintPropChar
c$87C9 PUSH AF       ; {Push #REGaf, #REGbc, #REGde and #REGhl on the stack.
 $87CA PUSH BC       ;
 $87CB PUSH DE       ;
 $87CC PUSH HL       ; }
; Calculate font graphic address, some examples would be;
; #TABLE(default,centre,centre,centre,centre,centre)
; { =h Letter | =h ASCII | =h * 8 | =h Sum | =h Font Graphic Address }
; { #LET(id=$21) "#CHR({id})" | #N({id}, 2, 3, 1, 1)($) | #N(#EVAL({id} * 8), 2, 3, 1, 1)($) | (#N({id}, 2, 3, 1, 1)($) * 8) + $8722 | #R(#EVAL($8722 + ({id} * 8))) }
; { #LET(id=$41) "#CHR({id})" | #N({id}, 2, 3, 1, 1)($) | #N(#EVAL({id} * 8), 2, 3, 1, 1)($) | (#N({id}, 2, 3, 1, 1)($) * 8) + $8722 | #R(#EVAL($8722 + ({id} * 8))) }
; { #LET(id=$61) "#CHR({id})" | #N({id}, 2, 3, 1, 1)($) | #N(#EVAL({id} * 8), 2, 3, 1, 1)($) | (#N({id}, 2, 3, 1, 1)($) * 8) + $8722 | #R(#EVAL($8722 + ({id} * 8))) }
; TABLE#
 $87CD LD L,A        ; {Store the offset for the font graphic data look-up in
 $87CE LD H,$00      ; #REGhl.}
; Calculate font graphic data address.
 $87D0 ADD HL,HL     ; {#REGhl=(#REGhl * 8) + #N($8722, 2, 3, 1, 1)($)
 $87D1 ADD HL,HL     ;
 $87D2 ADD HL,HL     ;
 $87D3 LD DE,$8722   ;
 $87D6 ADD HL,DE     ; }
 $87D7 EX DE,HL      ; {Store the result in #REGde, restore the screen location
 $87D8 POP HL        ; to #REGhl.
 $87D9 PUSH HL       ; }
 $87DA LD B,$08      ; Set a counter for $08 lines.
@label=PrintPropChar_Loop
*$87DC LD A,(DE)     ; #REGa=byte of font graphic data
 $87DD PUSH BC       ; Stash the counter on the stack temporarily.
 $87DE DEC C         ;
 $87DF INC C         ;
 $87E0 LD B,$FF      ; #REGb=#N($FF, 2, 3, 1, 1)($) as a mask.
 $87E2 JR Z,$87EB    ;
@label=PrintPropChar_Shift
*$87E4 SRL A         ; Shift the font graphic data left.
 $87E6 SRL B         ; Shift the mask data left.
 $87E8 DEC C         ; Decrease #REGc by one.
 $87E9 JR NZ,$87E4   ; Loop back to #R$87E4 until we've shifted by the number
                     ; of bits specified in #REGc.
@label=PrintPropChar_SkipShift
*$87EB LD C,A        ; Stash the font graphic data in #REGc.
 $87EC LD A,B        ; {#REGa=invert the shifted mask.
 $87ED CPL           ; }
 $87EE AND (HL)      ; Merge the mask with the existing data in the screen
                     ; buffer.
 $87EF OR C          ; OR the font graphic data.
 $87F0 LD (HL),A     ; Copy the processed font graphic data to the screen.
 $87F1 POP BC        ; Restore the counter off the stack.
 $87F2 DEC C         ;
 $87F3 INC C         ;
 $87F4 JR Z,$880E    ;
 $87F6 PUSH BC       ;
 $87F7 LD A,$08      ;
 $87F9 SUB C         ;
 $87FA LD C,A        ;
 $87FB LD A,(DE)     ;
 $87FC LD B,$FF      ;
*$87FE SLA A         ;
 $8800 SLA B         ;
 $8802 DEC C         ;
 $8803 JR NZ,$87FE   ;
 $8805 LD C,A        ;
 $8806 LD A,B        ;
 $8807 CPL           ;
 $8808 INC HL        ;
 $8809 AND (HL)      ;
 $880A OR C          ;
 $880B LD (HL),A     ;
 $880C DEC HL        ;
 $880D POP BC        ;
*$880E INC DE        ;
 $880F INC H         ;
 $8810 DJNZ $87DC    ; Decrease counter by one and loop back to #R$87DC until
                     ; counter is zero.
 $8812 POP HL        ; {Restore #REGhl, #REGde and #REGbc off the stack.
 $8813 POP DE        ;
 $8814 POP BC        ; }
 $8815 LD A,C        ;
 $8816 ADD A,$06     ;
 $8818 CP $08        ;
 $881A JR C,$881F    ;
 $881C SUB $08       ;
 $881E INC L         ;
*$881F LD C,A        ;
 $8820 POP AF        ; Restore #REGaf off the stack.
 $8821 RET           ; Return.

; Main Font
;
; .
;
; .
;
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
@label=MainFont
b$8822 DEFB %00000000 ; {#UDG(#PC)
 $8823 DEFB %00000000 ;
 $8824 DEFB %00000000 ;
 $8825 DEFB %00000000 ;
 $8826 DEFB %00000000 ;
 $8827 DEFB %00000000 ;
 $8828 DEFB %00000000 ;
 $8829 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $882A DEFB %00000000 ; {#UDG(#PC)
 $882B DEFB %00010000 ;
 $882C DEFB %00010000 ;
 $882D DEFB %00010000 ;
 $882E DEFB %00010000 ;
 $882F DEFB %00000000 ;
 $8830 DEFB %00010000 ;
 $8831 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8832 DEFB %00000000 ; {#UDG(#PC)
 $8833 DEFB %00101000 ;
 $8834 DEFB %00101000 ;
 $8835 DEFB %00000000 ;
 $8836 DEFB %00000000 ;
 $8837 DEFB %00000000 ;
 $8838 DEFB %00000000 ;
 $8839 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $883A DEFB %00000000 ; {#UDG(#PC)
 $883B DEFB %00101000 ;
 $883C DEFB %01111100 ;
 $883D DEFB %00101000 ;
 $883E DEFB %01111100 ;
 $883F DEFB %00101000 ;
 $8840 DEFB %00000000 ;
 $8841 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8842 DEFB %00000000 ; {#UDG(#PC)
 $8843 DEFB %00010000 ;
 $8844 DEFB %01111100 ;
 $8845 DEFB %01010000 ;
 $8846 DEFB %01111100 ;
 $8847 DEFB %00010100 ;
 $8848 DEFB %01111100 ;
 $8849 DEFB %00010000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $884A DEFB %00000000 ; {#UDG(#PC)
 $884B DEFB %01100100 ;
 $884C DEFB %01001000 ;
 $884D DEFB %00010000 ;
 $884E DEFB %00100100 ;
 $884F DEFB %01001100 ;
 $8850 DEFB %00000000 ;
 $8851 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8852 DEFB %00100000 ; {#UDG(#PC)
 $8853 DEFB %01010000 ;
 $8854 DEFB %00100000 ;
 $8855 DEFB %01010100 ;
 $8856 DEFB %01001000 ;
 $8857 DEFB %01110100 ;
 $8858 DEFB %00000000 ;
 $8859 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $885A DEFB %00000000 ; {#UDG(#PC)
 $885B DEFB %00001000 ;
 $885C DEFB %00010000 ;
 $885D DEFB %00000000 ;
 $885E DEFB %00000000 ;
 $885F DEFB %00000000 ;
 $8860 DEFB %00000000 ;
 $8861 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8862 DEFB %00000000 ; {#UDG(#PC)
 $8863 DEFB %00001000 ;
 $8864 DEFB %00010000 ;
 $8865 DEFB %00010000 ;
 $8866 DEFB %00010000 ;
 $8867 DEFB %00010000 ;
 $8868 DEFB %00001000 ;
 $8869 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $886A DEFB %00000000 ; {#UDG(#PC)
 $886B DEFB %00010000 ;
 $886C DEFB %00001000 ;
 $886D DEFB %00001000 ;
 $886E DEFB %00001000 ;
 $886F DEFB %00001000 ;
 $8870 DEFB %00010000 ;
 $8871 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8872 DEFB %00000000 ; {#UDG(#PC)
 $8873 DEFB %00101000 ;
 $8874 DEFB %00010000 ;
 $8875 DEFB %01111100 ;
 $8876 DEFB %00010000 ;
 $8877 DEFB %00101000 ;
 $8878 DEFB %00000000 ;
 $8879 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $887A DEFB %00000000 ; {#UDG(#PC)
 $887B DEFB %00010000 ;
 $887C DEFB %00010000 ;
 $887D DEFB %01111100 ;
 $887E DEFB %00010000 ;
 $887F DEFB %00010000 ;
 $8880 DEFB %00000000 ;
 $8881 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8882 DEFB %00000000 ; {#UDG(#PC)
 $8883 DEFB %00000000 ;
 $8884 DEFB %00000000 ;
 $8885 DEFB %00000000 ;
 $8886 DEFB %00000000 ;
 $8887 DEFB %00010000 ;
 $8888 DEFB %00010000 ;
 $8889 DEFB %00100000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $888A DEFB %00000000 ; {#UDG(#PC)
 $888B DEFB %00000000 ;
 $888C DEFB %00000000 ;
 $888D DEFB %01111100 ;
 $888E DEFB %00000000 ;
 $888F DEFB %00000000 ;
 $8890 DEFB %00000000 ;
 $8891 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8892 DEFB %00000000 ; {#UDG(#PC)
 $8893 DEFB %00000000 ;
 $8894 DEFB %00000000 ;
 $8895 DEFB %00000000 ;
 $8896 DEFB %00000000 ;
 $8897 DEFB %00110000 ;
 $8898 DEFB %00110000 ;
 $8899 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $889A DEFB %00000000 ; {#UDG(#PC)
 $889B DEFB %00000100 ;
 $889C DEFB %00001000 ;
 $889D DEFB %00010000 ;
 $889E DEFB %00100000 ;
 $889F DEFB %01000000 ;
 $88A0 DEFB %00000000 ;
 $88A1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88A2 DEFB %00000000 ; {#UDG(#PC)
 $88A3 DEFB %00111000 ;
 $88A4 DEFB %01001100 ;
 $88A5 DEFB %01010100 ;
 $88A6 DEFB %01010100 ;
 $88A7 DEFB %01100100 ;
 $88A8 DEFB %00111000 ;
 $88A9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88AA DEFB %00000000 ; {#UDG(#PC)
 $88AB DEFB %00110000 ;
 $88AC DEFB %01010000 ;
 $88AD DEFB %00010000 ;
 $88AE DEFB %00010000 ;
 $88AF DEFB %00010000 ;
 $88B0 DEFB %01111100 ;
 $88B1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88B2 DEFB %00000000 ; {#UDG(#PC)
 $88B3 DEFB %00111000 ;
 $88B4 DEFB %01000100 ;
 $88B5 DEFB %00000100 ;
 $88B6 DEFB %00111000 ;
 $88B7 DEFB %01000000 ;
 $88B8 DEFB %01111100 ;
 $88B9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88BA DEFB %00000000 ; {#UDG(#PC)
 $88BB DEFB %00111000 ;
 $88BC DEFB %01000100 ;
 $88BD DEFB %00011000 ;
 $88BE DEFB %00000100 ;
 $88BF DEFB %01000100 ;
 $88C0 DEFB %00111000 ;
 $88C1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88C2 DEFB %00000000 ; {#UDG(#PC)
 $88C3 DEFB %00011000 ;
 $88C4 DEFB %00101000 ;
 $88C5 DEFB %01001000 ;
 $88C6 DEFB %01111100 ;
 $88C7 DEFB %00001000 ;
 $88C8 DEFB %00001000 ;
 $88C9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88CA DEFB %00000000 ; {#UDG(#PC)
 $88CB DEFB %01111100 ;
 $88CC DEFB %01000000 ;
 $88CD DEFB %01111000 ;
 $88CE DEFB %00000100 ;
 $88CF DEFB %01000100 ;
 $88D0 DEFB %00111000 ;
 $88D1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88D2 DEFB %00000000 ; {#UDG(#PC)
 $88D3 DEFB %00111000 ;
 $88D4 DEFB %01000000 ;
 $88D5 DEFB %01111000 ;
 $88D6 DEFB %01000100 ;
 $88D7 DEFB %01000100 ;
 $88D8 DEFB %00111000 ;
 $88D9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88DA DEFB %00000000 ; {#UDG(#PC)
 $88DB DEFB %01111100 ;
 $88DC DEFB %00000100 ;
 $88DD DEFB %00001000 ;
 $88DE DEFB %00010000 ;
 $88DF DEFB %00100000 ;
 $88E0 DEFB %00100000 ;
 $88E1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88E2 DEFB %00000000 ; {#UDG(#PC)
 $88E3 DEFB %00111000 ;
 $88E4 DEFB %01000100 ;
 $88E5 DEFB %00111000 ;
 $88E6 DEFB %01000100 ;
 $88E7 DEFB %01000100 ;
 $88E8 DEFB %00111000 ;
 $88E9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88EA DEFB %00000000 ; {#UDG(#PC)
 $88EB DEFB %00111000 ;
 $88EC DEFB %01000100 ;
 $88ED DEFB %01000100 ;
 $88EE DEFB %00111100 ;
 $88EF DEFB %00000100 ;
 $88F0 DEFB %00111000 ;
 $88F1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88F2 DEFB %00000000 ; {#UDG(#PC)
 $88F3 DEFB %00000000 ;
 $88F4 DEFB %00010000 ;
 $88F5 DEFB %00000000 ;
 $88F6 DEFB %00000000 ;
 $88F7 DEFB %00010000 ;
 $88F8 DEFB %00000000 ;
 $88F9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $88FA DEFB %00000000 ; {#UDG(#PC)
 $88FB DEFB %00000000 ;
 $88FC DEFB %00010000 ;
 $88FD DEFB %00000000 ;
 $88FE DEFB %00000000 ;
 $88FF DEFB %00010000 ;
 $8900 DEFB %00010000 ;
 $8901 DEFB %00100000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8902 DEFB %00000000 ; {#UDG(#PC)
 $8903 DEFB %00000000 ;
 $8904 DEFB %00001000 ;
 $8905 DEFB %00010000 ;
 $8906 DEFB %00100000 ;
 $8907 DEFB %00010000 ;
 $8908 DEFB %00001000 ;
 $8909 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $890A DEFB %00000000 ; {#UDG(#PC)
 $890B DEFB %00000000 ;
 $890C DEFB %00000000 ;
 $890D DEFB %00111100 ;
 $890E DEFB %00000000 ;
 $890F DEFB %00111100 ;
 $8910 DEFB %00000000 ;
 $8911 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8912 DEFB %00000000 ; {#UDG(#PC)
 $8913 DEFB %00000000 ;
 $8914 DEFB %00100000 ;
 $8915 DEFB %00010000 ;
 $8916 DEFB %00001000 ;
 $8917 DEFB %00010000 ;
 $8918 DEFB %00100000 ;
 $8919 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $891A DEFB %00000000 ; {#UDG(#PC)
 $891B DEFB %00111000 ;
 $891C DEFB %01000100 ;
 $891D DEFB %00001000 ;
 $891E DEFB %00010000 ;
 $891F DEFB %00000000 ;
 $8920 DEFB %00010000 ;
 $8921 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8922 DEFB %00000000 ; {#UDG(#PC)
 $8923 DEFB %00111000 ;
 $8924 DEFB %01010100 ;
 $8925 DEFB %01010100 ;
 $8926 DEFB %01011000 ;
 $8927 DEFB %01000000 ;
 $8928 DEFB %00111000 ;
 $8929 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $892A DEFB %00000000 ; {#UDG(#PC)
 $892B DEFB %00111000 ;
 $892C DEFB %01000100 ;
 $892D DEFB %01000100 ;
 $892E DEFB %01111100 ;
 $892F DEFB %01000100 ;
 $8930 DEFB %01000100 ;
 $8931 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8932 DEFB %00000000 ; {#UDG(#PC)
 $8933 DEFB %01111000 ;
 $8934 DEFB %01000100 ;
 $8935 DEFB %01111000 ;
 $8936 DEFB %01000100 ;
 $8937 DEFB %01000100 ;
 $8938 DEFB %01111000 ;
 $8939 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $893A DEFB %00000000 ; {#UDG(#PC)
 $893B DEFB %00111000 ;
 $893C DEFB %01000100 ;
 $893D DEFB %01000000 ;
 $893E DEFB %01000000 ;
 $893F DEFB %01000100 ;
 $8940 DEFB %00111000 ;
 $8941 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8942 DEFB %00000000 ; {#UDG(#PC)
 $8943 DEFB %01110000 ;
 $8944 DEFB %01001000 ;
 $8945 DEFB %01000100 ;
 $8946 DEFB %01000100 ;
 $8947 DEFB %01001000 ;
 $8948 DEFB %01110000 ;
 $8949 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $894A DEFB %00000000 ; {#UDG(#PC)
 $894B DEFB %01111100 ;
 $894C DEFB %01000000 ;
 $894D DEFB %01111000 ;
 $894E DEFB %01000000 ;
 $894F DEFB %01000000 ;
 $8950 DEFB %01111100 ;
 $8951 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8952 DEFB %00000000 ; {#UDG(#PC)
 $8953 DEFB %01111100 ;
 $8954 DEFB %01000000 ;
 $8955 DEFB %01111000 ;
 $8956 DEFB %01000000 ;
 $8957 DEFB %01000000 ;
 $8958 DEFB %01000000 ;
 $8959 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $895A DEFB %00000000 ; {#UDG(#PC)
 $895B DEFB %00111000 ;
 $895C DEFB %01000100 ;
 $895D DEFB %01000000 ;
 $895E DEFB %01011100 ;
 $895F DEFB %01000100 ;
 $8960 DEFB %00111000 ;
 $8961 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8962 DEFB %00000000 ; {#UDG(#PC)
 $8963 DEFB %01000100 ;
 $8964 DEFB %01000100 ;
 $8965 DEFB %01111100 ;
 $8966 DEFB %01000100 ;
 $8967 DEFB %01000100 ;
 $8968 DEFB %01000100 ;
 $8969 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $896A DEFB %00000000 ; {#UDG(#PC)
 $896B DEFB %01111100 ;
 $896C DEFB %00010000 ;
 $896D DEFB %00010000 ;
 $896E DEFB %00010000 ;
 $896F DEFB %00010000 ;
 $8970 DEFB %01111100 ;
 $8971 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8972 DEFB %00000000 ; {#UDG(#PC)
 $8973 DEFB %00000100 ;
 $8974 DEFB %00000100 ;
 $8975 DEFB %00000100 ;
 $8976 DEFB %01000100 ;
 $8977 DEFB %01000100 ;
 $8978 DEFB %00111000 ;
 $8979 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $897A DEFB %00000000 ; {#UDG(#PC)
 $897B DEFB %01001000 ;
 $897C DEFB %01010000 ;
 $897D DEFB %01100000 ;
 $897E DEFB %01010000 ;
 $897F DEFB %01001000 ;
 $8980 DEFB %01000100 ;
 $8981 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8982 DEFB %00000000 ; {#UDG(#PC)
 $8983 DEFB %01000000 ;
 $8984 DEFB %01000000 ;
 $8985 DEFB %01000000 ;
 $8986 DEFB %01000000 ;
 $8987 DEFB %01000000 ;
 $8988 DEFB %01111100 ;
 $8989 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $898A DEFB %00000000 ; {#UDG(#PC)
 $898B DEFB %01000100 ;
 $898C DEFB %01101100 ;
 $898D DEFB %01010100 ;
 $898E DEFB %01000100 ;
 $898F DEFB %01000100 ;
 $8990 DEFB %01000100 ;
 $8991 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8992 DEFB %00000000 ; {#UDG(#PC)
 $8993 DEFB %01000100 ;
 $8994 DEFB %01100100 ;
 $8995 DEFB %01010100 ;
 $8996 DEFB %01010100 ;
 $8997 DEFB %01001100 ;
 $8998 DEFB %01000100 ;
 $8999 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $899A DEFB %00000000 ; {#UDG(#PC)
 $899B DEFB %00111000 ;
 $899C DEFB %01000100 ;
 $899D DEFB %01000100 ;
 $899E DEFB %01000100 ;
 $899F DEFB %01000100 ;
 $89A0 DEFB %00111000 ;
 $89A1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89A2 DEFB %00000000 ; {#UDG(#PC)
 $89A3 DEFB %01111000 ;
 $89A4 DEFB %01000100 ;
 $89A5 DEFB %01000100 ;
 $89A6 DEFB %01111000 ;
 $89A7 DEFB %01000000 ;
 $89A8 DEFB %01000000 ;
 $89A9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89AA DEFB %00000000 ; {#UDG(#PC)
 $89AB DEFB %00111000 ;
 $89AC DEFB %01000100 ;
 $89AD DEFB %01000100 ;
 $89AE DEFB %01010100 ;
 $89AF DEFB %01001000 ;
 $89B0 DEFB %00110100 ;
 $89B1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89B2 DEFB %00000000 ; {#UDG(#PC)
 $89B3 DEFB %01111000 ;
 $89B4 DEFB %01000100 ;
 $89B5 DEFB %01000100 ;
 $89B6 DEFB %01111000 ;
 $89B7 DEFB %01001000 ;
 $89B8 DEFB %01000100 ;
 $89B9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89BA DEFB %00000000 ; {#UDG(#PC)
 $89BB DEFB %00111000 ;
 $89BC DEFB %01000000 ;
 $89BD DEFB %00111000 ;
 $89BE DEFB %00000100 ;
 $89BF DEFB %01000100 ;
 $89C0 DEFB %00111000 ;
 $89C1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89C2 DEFB %00000000 ; {#UDG(#PC)
 $89C3 DEFB %01111100 ;
 $89C4 DEFB %00010000 ;
 $89C5 DEFB %00010000 ;
 $89C6 DEFB %00010000 ;
 $89C7 DEFB %00010000 ;
 $89C8 DEFB %00010000 ;
 $89C9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89CA DEFB %00000000 ; {#UDG(#PC)
 $89CB DEFB %01000100 ;
 $89CC DEFB %01000100 ;
 $89CD DEFB %01000100 ;
 $89CE DEFB %01000100 ;
 $89CF DEFB %01000100 ;
 $89D0 DEFB %00111000 ;
 $89D1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89D2 DEFB %00000000 ; {#UDG(#PC)
 $89D3 DEFB %01000100 ;
 $89D4 DEFB %01000100 ;
 $89D5 DEFB %01000100 ;
 $89D6 DEFB %01000100 ;
 $89D7 DEFB %00101000 ;
 $89D8 DEFB %00010000 ;
 $89D9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89DA DEFB %00000000 ; {#UDG(#PC)
 $89DB DEFB %01000100 ;
 $89DC DEFB %01000100 ;
 $89DD DEFB %01000100 ;
 $89DE DEFB %01010100 ;
 $89DF DEFB %01101100 ;
 $89E0 DEFB %01000100 ;
 $89E1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89E2 DEFB %00000000 ; {#UDG(#PC)
 $89E3 DEFB %01000100 ;
 $89E4 DEFB %00101000 ;
 $89E5 DEFB %00010000 ;
 $89E6 DEFB %00010000 ;
 $89E7 DEFB %00101000 ;
 $89E8 DEFB %01000100 ;
 $89E9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89EA DEFB %00000000 ; {#UDG(#PC)
 $89EB DEFB %01000100 ;
 $89EC DEFB %01000100 ;
 $89ED DEFB %00101000 ;
 $89EE DEFB %00010000 ;
 $89EF DEFB %00010000 ;
 $89F0 DEFB %00010000 ;
 $89F1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89F2 DEFB %00000000 ; {#UDG(#PC)
 $89F3 DEFB %01111100 ;
 $89F4 DEFB %00000100 ;
 $89F5 DEFB %00011000 ;
 $89F6 DEFB %00100000 ;
 $89F7 DEFB %01000000 ;
 $89F8 DEFB %01111100 ;
 $89F9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $89FA DEFB %00000000 ; {#UDG(#PC)
 $89FB DEFB %00111000 ;
 $89FC DEFB %00100000 ;
 $89FD DEFB %00100000 ;
 $89FE DEFB %00100000 ;
 $89FF DEFB %00100000 ;
 $8A00 DEFB %00111000 ;
 $8A01 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A02 DEFB %00000000 ; {#UDG(#PC)
 $8A03 DEFB %01000000 ;
 $8A04 DEFB %00100000 ;
 $8A05 DEFB %00010000 ;
 $8A06 DEFB %00001000 ;
 $8A07 DEFB %00000100 ;
 $8A08 DEFB %00000000 ;
 $8A09 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A0A DEFB %00000000 ; {#UDG(#PC)
 $8A0B DEFB %00111000 ;
 $8A0C DEFB %00001000 ;
 $8A0D DEFB %00001000 ;
 $8A0E DEFB %00001000 ;
 $8A0F DEFB %00001000 ;
 $8A10 DEFB %00111000 ;
 $8A11 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A12 DEFB %00000000 ; {#UDG(#PC)
 $8A13 DEFB %00010000 ;
 $8A14 DEFB %00111000 ;
 $8A15 DEFB %01010100 ;
 $8A16 DEFB %00010000 ;
 $8A17 DEFB %00010000 ;
 $8A18 DEFB %00010000 ;
 $8A19 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A1A DEFB %00000000 ; {#UDG(#PC)
 $8A1B DEFB %00000000 ;
 $8A1C DEFB %00000000 ;
 $8A1D DEFB %00000000 ;
 $8A1E DEFB %00000000 ;
 $8A1F DEFB %00000000 ;
 $8A20 DEFB %00000000 ;
 $8A21 DEFB %01111100 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A22 DEFB %00000000 ; {#UDG(#PC)
 $8A23 DEFB %00011000 ;
 $8A24 DEFB %00100100 ;
 $8A25 DEFB %01110000 ;
 $8A26 DEFB %00100000 ;
 $8A27 DEFB %00100000 ;
 $8A28 DEFB %01111100 ;
 $8A29 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A2A DEFB %00000000 ; {#UDG(#PC)
 $8A2B DEFB %00000000 ;
 $8A2C DEFB %00111000 ;
 $8A2D DEFB %00000100 ;
 $8A2E DEFB %00111100 ;
 $8A2F DEFB %01000100 ;
 $8A30 DEFB %00111100 ;
 $8A31 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A32 DEFB %00000000 ; {#UDG(#PC)
 $8A33 DEFB %01000000 ;
 $8A34 DEFB %01000000 ;
 $8A35 DEFB %01111000 ;
 $8A36 DEFB %01000100 ;
 $8A37 DEFB %01000100 ;
 $8A38 DEFB %01111000 ;
 $8A39 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A3A DEFB %00000000 ; {#UDG(#PC)
 $8A3B DEFB %00000000 ;
 $8A3C DEFB %00111000 ;
 $8A3D DEFB %01000000 ;
 $8A3E DEFB %01000000 ;
 $8A3F DEFB %01000000 ;
 $8A40 DEFB %00111000 ;
 $8A41 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A42 DEFB %00000000 ; {#UDG(#PC)
 $8A43 DEFB %00000100 ;
 $8A44 DEFB %00000100 ;
 $8A45 DEFB %00111100 ;
 $8A46 DEFB %01000100 ;
 $8A47 DEFB %01000100 ;
 $8A48 DEFB %00111100 ;
 $8A49 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A4A DEFB %00000000 ; {#UDG(#PC)
 $8A4B DEFB %00000000 ;
 $8A4C DEFB %00111000 ;
 $8A4D DEFB %01000100 ;
 $8A4E DEFB %01111000 ;
 $8A4F DEFB %01000000 ;
 $8A50 DEFB %00111100 ;
 $8A51 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A52 DEFB %00000000 ; {#UDG(#PC)
 $8A53 DEFB %00011000 ;
 $8A54 DEFB %00100000 ;
 $8A55 DEFB %00110000 ;
 $8A56 DEFB %00100000 ;
 $8A57 DEFB %00100000 ;
 $8A58 DEFB %00100000 ;
 $8A59 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A5A DEFB %00000000 ; {#UDG(#PC)
 $8A5B DEFB %00000000 ;
 $8A5C DEFB %00111100 ;
 $8A5D DEFB %01000100 ;
 $8A5E DEFB %01000100 ;
 $8A5F DEFB %00111100 ;
 $8A60 DEFB %00000100 ;
 $8A61 DEFB %00111000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A62 DEFB %00000000 ; {#UDG(#PC)
 $8A63 DEFB %01000000 ;
 $8A64 DEFB %01000000 ;
 $8A65 DEFB %01111000 ;
 $8A66 DEFB %01000100 ;
 $8A67 DEFB %01000100 ;
 $8A68 DEFB %01000100 ;
 $8A69 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A6A DEFB %00000000 ; {#UDG(#PC)
 $8A6B DEFB %00010000 ;
 $8A6C DEFB %00000000 ;
 $8A6D DEFB %00110000 ;
 $8A6E DEFB %00010000 ;
 $8A6F DEFB %00010000 ;
 $8A70 DEFB %00111000 ;
 $8A71 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A72 DEFB %00000000 ; {#UDG(#PC)
 $8A73 DEFB %00001000 ;
 $8A74 DEFB %00000000 ;
 $8A75 DEFB %00001000 ;
 $8A76 DEFB %00001000 ;
 $8A77 DEFB %00001000 ;
 $8A78 DEFB %01001000 ;
 $8A79 DEFB %00110000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A7A DEFB %00000000 ; {#UDG(#PC)
 $8A7B DEFB %00100000 ;
 $8A7C DEFB %00101000 ;
 $8A7D DEFB %00110000 ;
 $8A7E DEFB %00110000 ;
 $8A7F DEFB %00101000 ;
 $8A80 DEFB %00100100 ;
 $8A81 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A82 DEFB %00000000 ; {#UDG(#PC)
 $8A83 DEFB %00100000 ;
 $8A84 DEFB %00100000 ;
 $8A85 DEFB %00100000 ;
 $8A86 DEFB %00100000 ;
 $8A87 DEFB %00100000 ;
 $8A88 DEFB %00011000 ;
 $8A89 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A8A DEFB %00000000 ; {#UDG(#PC)
 $8A8B DEFB %00000000 ;
 $8A8C DEFB %01101000 ;
 $8A8D DEFB %01010100 ;
 $8A8E DEFB %01010100 ;
 $8A8F DEFB %01010100 ;
 $8A90 DEFB %01010100 ;
 $8A91 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A92 DEFB %00000000 ; {#UDG(#PC)
 $8A93 DEFB %00000000 ;
 $8A94 DEFB %01111000 ;
 $8A95 DEFB %01000100 ;
 $8A96 DEFB %01000100 ;
 $8A97 DEFB %01000100 ;
 $8A98 DEFB %01000100 ;
 $8A99 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8A9A DEFB %00000000 ; {#UDG(#PC)
 $8A9B DEFB %00000000 ;
 $8A9C DEFB %00111000 ;
 $8A9D DEFB %01000100 ;
 $8A9E DEFB %01000100 ;
 $8A9F DEFB %01000100 ;
 $8AA0 DEFB %00111000 ;
 $8AA1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AA2 DEFB %00000000 ; {#UDG(#PC)
 $8AA3 DEFB %00000000 ;
 $8AA4 DEFB %01111000 ;
 $8AA5 DEFB %01000100 ;
 $8AA6 DEFB %01000100 ;
 $8AA7 DEFB %01111000 ;
 $8AA8 DEFB %01000000 ;
 $8AA9 DEFB %01000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AAA DEFB %00000000 ; {#UDG(#PC)
 $8AAB DEFB %00000000 ;
 $8AAC DEFB %00111000 ;
 $8AAD DEFB %01001000 ;
 $8AAE DEFB %01001000 ;
 $8AAF DEFB %00111000 ;
 $8AB0 DEFB %00001000 ;
 $8AB1 DEFB %00001100 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AB2 DEFB %00000000 ; {#UDG(#PC)
 $8AB3 DEFB %00000000 ;
 $8AB4 DEFB %00111000 ;
 $8AB5 DEFB %00100000 ;
 $8AB6 DEFB %00100000 ;
 $8AB7 DEFB %00100000 ;
 $8AB8 DEFB %00100000 ;
 $8AB9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8ABA DEFB %00000000 ; {#UDG(#PC)
 $8ABB DEFB %00000000 ;
 $8ABC DEFB %00111000 ;
 $8ABD DEFB %01000000 ;
 $8ABE DEFB %00111000 ;
 $8ABF DEFB %00000100 ;
 $8AC0 DEFB %01111000 ;
 $8AC1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AC2 DEFB %00000000 ; {#UDG(#PC)
 $8AC3 DEFB %00100000 ;
 $8AC4 DEFB %01110000 ;
 $8AC5 DEFB %00100000 ;
 $8AC6 DEFB %00100000 ;
 $8AC7 DEFB %00100000 ;
 $8AC8 DEFB %00011000 ;
 $8AC9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8ACA DEFB %00000000 ; {#UDG(#PC)
 $8ACB DEFB %00000000 ;
 $8ACC DEFB %01000100 ;
 $8ACD DEFB %01000100 ;
 $8ACE DEFB %01000100 ;
 $8ACF DEFB %01000100 ;
 $8AD0 DEFB %00111000 ;
 $8AD1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AD2 DEFB %00000000 ; {#UDG(#PC)
 $8AD3 DEFB %00000000 ;
 $8AD4 DEFB %01000100 ;
 $8AD5 DEFB %01000100 ;
 $8AD6 DEFB %00101000 ;
 $8AD7 DEFB %00101000 ;
 $8AD8 DEFB %00010000 ;
 $8AD9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8ADA DEFB %00000000 ; {#UDG(#PC)
 $8ADB DEFB %00000000 ;
 $8ADC DEFB %01000100 ;
 $8ADD DEFB %01010100 ;
 $8ADE DEFB %01010100 ;
 $8ADF DEFB %01010100 ;
 $8AE0 DEFB %00101000 ;
 $8AE1 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AE2 DEFB %00000000 ; {#UDG(#PC)
 $8AE3 DEFB %00000000 ;
 $8AE4 DEFB %01000100 ;
 $8AE5 DEFB %00101000 ;
 $8AE6 DEFB %00010000 ;
 $8AE7 DEFB %00101000 ;
 $8AE8 DEFB %01000100 ;
 $8AE9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AEA DEFB %00000000 ; {#UDG(#PC)
 $8AEB DEFB %00000000 ;
 $8AEC DEFB %01000100 ;
 $8AED DEFB %01000100 ;
 $8AEE DEFB %01000100 ;
 $8AEF DEFB %00111100 ;
 $8AF0 DEFB %00000100 ;
 $8AF1 DEFB %00111000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AF2 DEFB %00000000 ; {#UDG(#PC)
 $8AF3 DEFB %00000000 ;
 $8AF4 DEFB %01111100 ;
 $8AF5 DEFB %00001000 ;
 $8AF6 DEFB %00010000 ;
 $8AF7 DEFB %00100000 ;
 $8AF8 DEFB %01111100 ;
 $8AF9 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8AFA DEFB %00000000 ; {#UDG(#PC)
 $8AFB DEFB %00011100 ;
 $8AFC DEFB %00010000 ;
 $8AFD DEFB %01100000 ;
 $8AFE DEFB %00010000 ;
 $8AFF DEFB %00010000 ;
 $8B00 DEFB %00011100 ;
 $8B01 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8B02 DEFB %00000000 ; {#UDG(#PC)
 $8B03 DEFB %00010000 ;
 $8B04 DEFB %00010000 ;
 $8B05 DEFB %00010000 ;
 $8B06 DEFB %00010000 ;
 $8B07 DEFB %00010000 ;
 $8B08 DEFB %00010000 ;
 $8B09 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8B0A DEFB %00000000 ; {#UDG(#PC)
 $8B0B DEFB %01110000 ;
 $8B0C DEFB %00010000 ;
 $8B0D DEFB %00001100 ;
 $8B0E DEFB %00010000 ;
 $8B0F DEFB %00010000 ;
 $8B10 DEFB %01110000 ;
 $8B11 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8B12 DEFB %00000000 ; {#UDG(#PC)
 $8B13 DEFB %00101000 ;
 $8B14 DEFB %01010000 ;
 $8B15 DEFB %00000000 ;
 $8B16 DEFB %00000000 ;
 $8B17 DEFB %00000000 ;
 $8B18 DEFB %00000000 ;
 $8B19 DEFB %00000000 ; }
; #LET(id=#EVAL($20 + (#PC - $8822) / 8))CHARACTER:
; "#MAP({id})(#CHR({id}),$20:SPACE,$60:£,$7F:CLARET)".
 $8B1A DEFB %00000000 ; {#UDG(#PC)
 $8B1B DEFB %00010000 ;
 $8B1C DEFB %00001000 ;
 $8B1D DEFB %01111100 ;
 $8B1E DEFB %00000000 ;
 $8B1F DEFB %01111100 ;
 $8B20 DEFB %00001000 ;
 $8B21 DEFB %00010000 ; }

; Routine at 8B22
;
; Used by the routine at #R$869B.
c$8B22 LD A,($B6F2)  ;
 $8B25 AND A         ;
 $8B26 RET Z         ;
 $8B27 PUSH HL       ;
 $8B28 PUSH DE       ;
 $8B29 PUSH BC       ;
 $8B2A LD D,$01      ;
 $8B2C LD HL,$5020   ;
 $8B2F XOR A         ;
 $8B30 LD E,A        ;
*$8B31 OUT ($FB),A   ;
*$8B33 IN A,($FB)    ;
 $8B35 ADD A,A       ;
 $8B36 JP M,$8B74    ;
 $8B39 JR NC,$8B33   ;
 $8B3B PUSH HL       ;
 $8B3C PUSH DE       ;
 $8B3D LD A,D        ;
 $8B3E CP $02        ;
 $8B40 SBC A,A       ;
 $8B41 AND E         ;
 $8B42 RLCA          ;
 $8B43 AND E         ;
 $8B44 LD D,A        ;
*$8B45 LD C,(HL)     ;
 $8B46 PUSH HL       ;
 $8B47 LD B,$08      ;
*$8B49 LD A,D        ;
 $8B4A RLC C         ;
 $8B4C RRA           ;
 $8B4D LD H,A        ;
*$8B4E IN A,($FB)    ;
 $8B50 RRA           ;
 $8B51 JR NC,$8B4E   ;
 $8B53 LD A,H        ;
 $8B54 OUT ($FB),A   ;
 $8B56 DJNZ $8B49    ;
 $8B58 POP HL        ;
 $8B59 INC HL        ;
 $8B5A LD A,L        ;
 $8B5B AND $1F       ;
 $8B5D JR NZ,$8B45   ;
*$8B5F IN A,($FB)    ;
 $8B61 RRA           ;
 $8B62 JR NC,$8B5F   ;
 $8B64 LD A,D        ;
 $8B65 RRCA          ;
 $8B66 OUT ($FB),A   ;
 $8B68 POP DE        ;
 $8B69 POP HL        ;
 $8B6A INC H         ;
 $8B6B INC E         ;
 $8B6C BIT 3,E       ;
 $8B6E JR Z,$8B31    ;
 $8B70 LD A,$04      ;
 $8B72 OUT ($FB),A   ;
*$8B74 POP BC        ;
 $8B75 POP DE        ;
 $8B76 POP HL        ;
 $8B77 RET           ;

; Pause
;
; Used by the routine at #R$8B81.
@label=Pause
c$8B78 LD BC,$03E8   ; Set a counter in #REGbc=#N$03E8.
@label=Pause_Loop
*$8B7B DEC BC        ; Decrease the counter by one.
 $8B7C LD A,B        ; {Loop back to #R$8B7B until the counter is zero.
 $8B7D OR C          ;
 $8B7E JR NZ,$8B7B   ; }
 $8B80 RET           ; Return.

; Get Key
c$8B81 DEFB $01,$00,$00,$0D,$02,$00,$00,$02 ;
 $8B89 DEFW $0000                           ;
 $8B8B DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
; This entry point is used by the routine at #R$70F3.
@label=GetKey
*$8B93 PUSH HL                              ; {Stash #REGhl, #REGix and #REGbc
 $8B94 PUSH IX                              ; on the stack.
 $8B96 PUSH BC                              ; }
 $8B97 CALL $8B78                           ; Call #R$8B78.
 $8B9A LD ($8B89),BC                        ; Write $0000 to #R$8B89.
 $8B9E LD HL,$8B8B                          ; #REGhl=$8B8B.
 $8BA1 LD IX,$8B81                          ; #REGix=#R$8B81.
 $8BA5 LD BC,$FEFE                          ; #REGbc=$FEFE.
@label=GetKey_Loop
*$8BA8 IN A,(C)                             ; Read from the keyboard port.
 $8BAA AND %00011111                        ; Keep only bits 0-4.
 $8BAC OR (IX+$00)                          ; OR against what #REGix is
                                            ; pointing to.
 $8BAF PUSH AF                              ; Stash #REGaf on the stack.
 $8BB0 CPL                                  ; Invert the bits (1's complement
                                            ; on #REGa).
 $8BB1 AND (HL)                             ; Keep bits based on what #REGhl is
                                            ; pointing to.
 $8BB2 CPL                                  ; Invert the bits back (1's
                                            ; complement on #REGa).
 $8BB3 JR Z,$8BBC                           ; If it is zero, jump to #R$8BBC.
 $8BB5 LD ($8B89),BC                        ; Stash #REGbc at #R$8B89.
 $8BB9 LD ($8B89),A                         ; Stash #REGa at #R$8B89.
@label=GetKey_
*$8BBC POP AF                               ; Restore #REGaf from the stack.
 $8BBD LD (HL),A                            ; Stash #REGa at #REGhl.
 $8BBE INC HL                               ; Increase #REGhl by one.
 $8BBF INC IX                               ; Increase #REGix by one.
 $8BC1 RLC B                                ; Rotate #REGb left.
 $8BC3 JR C,$8BA8                           ; If there is carry then this is
                                            ; not a match, jump back to #R$8BA8
                                            ; to try again.
 $8BC5 LD BC,($8B89)                        ; #REGbc=#R$8B89.
; If no key match was found, end...
 $8BC9 LD A,B                               ; {If #REGbc is $0000, jump to
 $8BCA OR C                                 ; #R$8BF6.
 $8BCB JR Z,$8BF6                           ; }
 $8BCD LD A,$FB                             ; #REGa=$FB.
*$8BCF ADD A,$05                            ; #REGa=#REGa + 5.
 $8BD1 RRC B                                ; Rotate #REGb right once.
 $8BD3 JR C,$8BCF                           ; If there is any carry, jump to
                                            ; #R$8BCF.
 $8BD5 DEC A                                ; Decrease #REGa by one, ready for
                                            ; the following loop to begin in
                                            ; the same place.
*$8BD6 INC A                                ; Increment #REGa by one.
 $8BD7 RRC C                                ; Rotate #REGc right once.
 $8BD9 JR C,$8BD6                           ; If there is any carry, jump to
                                            ; #R$8BD6.
 $8BDB LD C,A                               ; {Create an offset in #REGbc.
 $8BDC LD B,$00                             ; }
 $8BDE LD HL,$8BFB                          ; #REGhl=#R$8BFB.
 $8BE1 LD A,$FE                             ; {Read from the keyboard port.
 $8BE3 IN A,($FE)                           ; #TABLE(default,centre,centre,centre,centre,centre,centre)
                                            ; { =h,r2 Port Number | =h,c5 Bit }
                                            ; { =h 0 | =h 1 | =h 2 | =h 3 | =h 4 }
                                            ; { $FE | SHIFT | Z | X | C | V }
                                            ; TABLE#}
 $8BE5 AND %00000001                        ; Keep only bit 0 (SHIFT).
 $8BE7 JR Z,$8BF1                           ; If it is zero, jump to #R$8BF1.
 $8BE9 LD A,$7F                             ; {Read from the keyboard port.
 $8BEB IN A,($FE)                           ; #TABLE(default,centre,centre,centre,centre,centre,centre)
                                            ; { =h,r2 Port Number | =h,c5 Bit }
                                            ; { =h 0 | =h 1 | =h 2 | =h 3 | =h 4 }
                                            ; { $7F | SPACE | FULL-STOP | M | N | B }
                                            ; TABLE#}
 $8BED AND %00000010                        ; Keep only bit 1 (FULL-STOP).
 $8BEF JR NZ,$8BF4                          ; If it is not zero, jump to
                                            ; #R$8BF4.
@label=GetKey_UseMap2
*$8BF1 LD HL,$8C23                          ; #REGhl=#R$8C23.
@label=GetKey_GetByte
*$8BF4 ADD HL,BC                            ; #REGhl=#REGhl + keyboard map
                                            ; offset.
 $8BF5 LD A,(HL)                            ; #REGa=#REGhl (fetched byte from
                                            ; keyboard map).
@label=GetKey_Return
*$8BF6 POP BC                               ; {Restore #REGbc, #REGix and
 $8BF7 POP IX                               ; #REGhl from the stack.
 $8BF9 POP HL                               ; }
 $8BFA RET                                  ; Return.
@label=KeyboardMap1
 $8BFB DEFB $00,$5A,$58,$43,$56             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C00 DEFB $41,$53,$44,$46,$47             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C05 DEFB $51,$57,$45,$52,$54             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C0A DEFB $00,$00,$00,$00,$08             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C0F DEFB $08,$00,$09,$5B,$0A             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C14 DEFB $50,$4F,$49,$55,$59             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C19 DEFB $0D,$4C,$4B,$4A,$48             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C1E DEFB $20,$00,$4D,$4E,$42             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
@label=KeyboardMap2
 $8C23 DEFB $00,$5A,$58,$43,$56             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C28 DEFB $41,$53,$44,$46,$47             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C2D DEFB $51,$57,$45,$52,$54             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C32 DEFB $00,$40,$00,$00,$08             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C37 DEFB $18,$00,$09,$5B,$0A             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C3C DEFB $22,$4F,$49,$55,$59             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C41 DEFB $0D,$4C,$4B,$4A,$48             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||
 $8C46 DEFB $02,$00,$2E,$2C,$42             ; #FOR$00,$04||n|#IF(#PEEK(#PC+n) >
                                            ; $00)(#CHR(#PEEK(#PC+n)),--)|, ||

; Action Look
@label=Action_Look
c$8C4B CALL $9D44    ;
 $8C4E LD IX,($B70C) ; #REGix=#R$B70C
 $8C52 LD A,(IX+$01) ;
 $8C55 CP $FF        ;
 $8C57 JR Z,$8C95    ;
 $8C59 LD HL,$0080   ;
 $8C5C LD ($AFFD),HL ;
 $8C5F LD HL,$AFFC   ; #REGhl=#R$AFFC("You are in[0x16]")
 $8C62 CALL $72DD    ; Call #R$72DD.
 $8C65 PUSH IX       ; Stash #REGix on the stack.
 $8C67 LD A,(IX+$01) ;
 $8C6A CALL $9BCA    ;
 $8C6D CALL $A09D    ;
 $8C70 LD E,(IX+$08) ;
 $8C73 LD A,(IX+$09) ;
 $8C76 AND $0F       ;
 $8C78 LD D,A        ;
 $8C79 CALL $74C1    ;
 $8C7C LD A,$2E      ;
 $8C7E CALL $858B    ;
 $8C81 CALL $8583    ;
 $8C84 LD HL,$B003   ; #REGhl=#R$B003("You see :[0x14]")
 $8C87 CALL $72DD    ; Call #R$72DD.
 $8C8A POP IX        ; Restore #REGix off the stack.
 $8C8C LD A,(IX+$01) ;
 $8C8F LD B,(IX+$10) ;
 $8C92 JP $9FAF      ; Jump to #R$9FAF.
*$8C95 LD A,(IX+$10) ;
 $8C98 JP $9630      ;
; This entry point is used by the routines at #R$8CA6 and #R$93DA.
*$8C9B CALL $9C78    ;
 $8C9E RET C         ;
 $8C9F POP HL        ;
 $8CA0 LD HL,$ADF1   ; #REGhl=#R$ADF1("You are not carrying it[0x15]")
 $8CA3 JP $72DD      ; Jump to #R$72DD.

; Action Putdown
@label=Action_Putdown
c$8CA6 CALL $8C9B      ;
 $8CA9 CALL $9D44      ;
 $8CAC LD IX,($B708)   ;
 $8CB0 LD A,(IX+$01)   ;
 $8CB3 CP $12          ;
 $8CB5 JR NZ,$8CBB     ;
 $8CB7 LD IX,$C366     ;
*$8CBB PUSH IX         ;
 $8CBD LD IX,($B70C)   ;
 $8CC1 LD A,(IX+$01)   ;
 $8CC4 POP IX          ;
 $8CC6 LD (IX+$01),A   ;
 $8CC9 BIT 1,(IX+$07)  ;
 $8CCD RET Z           ;
 $8CCE LD (IX+$10),$00 ;
 $8CD2 LD HL,$B142     ; #REGhl=#R$B142("[0x00] evaporate(s|d|ing|es)[0x15]")
 $8CD5 LD DE,$0008     ;
 $8CD8 ADD IX,DE       ;
 $8CDA PUSH IX         ;
 $8CDC CALL $72DD      ; Call #R$72DD.
 $8CDF RET             ; Return.
 $8CE0 LD A,($B6E8)    ;
 $8CE3 LD HL,$B6E9     ;
 $8CE6 CALL $9C7E      ;
 $8CE9 LD HL,$AFB5     ; #REGhl=$AFB5
 $8CEC JP NZ,$72DD     ;
 $8CEF JR $8D3C        ;
; This entry point is used by the routines at #R$8D33 and #R$8FF5.
*$8CF1 LD IX,($B708)   ;
 $8CF5 LD A,($B6E8)    ;
 $8CF8 CALL $9CED      ;
 $8CFB ADD A,(IX+$03)  ;
 $8CFE JR NC,$8D02     ;
 $8D00 LD A,$FF        ;
*$8D02 LD B,A          ;
 $8D03 LD IY,($B70C)   ;
 $8D07 LD A,(IY+$03)   ;
 $8D0A SUB B           ;
 $8D0B LD HL,$AE04     ; #REGhl=#R$AE04("[0x07] is too heavy to lift")
 $8D0E JR C,$8D20      ;
 $8D10 PUSH AF         ;
 $8D11 LD A,($B6EA)    ;
 $8D14 CALL $9CED      ;
 $8D17 LD B,A          ;
 $8D18 POP AF          ;
 $8D19 SUB B           ;
 $8D1A JP P,$8D25      ;
 $8D1D LD HL,$AE0C     ; #REGhl=#R$AE0C("You are carrying too much")
*$8D20 EX (SP),HL      ;
 $8D21 POP HL          ;
 $8D22 JP $72DD        ; Jump to #R$72DD.
; This entry point is used by the routines at #R$9171 and #R$93DA.
*$8D25 CALL $9246      ;
 $8D28 JR NZ,$8D2F     ;
 $8D2A BIT 1,(IX+$07)  ;
 $8D2E RET Z           ;
*$8D2F POP HL          ;
 $8D30 JP $9F76        ;

; Action Pickup
;
; Used by the routine at #R$A248.
@label=Action_Pickup
c$8D33 CALL $9C78    ;
 $8D36 LD HL,$AE11   ; #REGhl=#R$AE11("You are already carrying[0x07][0x15]")
 $8D39 JP C,$72DD    ;
; This entry point is used by the routine at #R$8CA6.
*$8D3C CALL $8CF1    ;
 $8D3F LD A,($B6EA)  ;
*$8D42 CALL $9BCA    ;
 $8D45 LD A,($B6E8)  ;
 $8D48 CP (IX+$01)   ;
 $8D4B JP Z,$9F76    ;
 $8D4E LD A,(IX+$01) ;
 $8D51 CP $FF        ;
 $8D53 JR NZ,$8D42   ;
 $8D55 LD IX,($B708) ;
 $8D59 CALL $9D44    ;
 $8D5C LD A,(IX+$01) ;
 $8D5F CP $12        ;
 $8D61 LD A,($B6EA)  ;
 $8D64 JR Z,$8D6A    ;
 $8D66 LD (IX+$01),A ;
 $8D69 RET           ;
*$8D6A LD ($C367),A  ;
 $8D6D RET           ;

; Location Percentage Completion Table
;
; .
;
; .
;
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
@label=PercentageLocationTable
b$8D6E DEFB $04      ; Location ID.
 $8D6F DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D71 DEFB $07      ; Location ID.
 $8D72 DEFW $0032    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D74 DEFB $0B      ; Location ID.
 $8D75 DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D77 DEFB $16      ; Location ID.
 $8D78 DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D7A DEFB $0D      ; Location ID.
 $8D7B DEFW $004B    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D7D DEFB $41      ; Location ID.
 $8D7E DEFW $0032    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D80 DEFB $1B      ; Location ID.
 $8D81 DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D83 DEFB $1C      ; Location ID.
 $8D84 DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D86 DEFB $1F      ; Location ID.
 $8D87 DEFW $0032    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D89 DEFB $22      ; Location ID.
 $8D8A DEFW $0064    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D8C DEFB $26      ; Location ID.
 $8D8D DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D8F DEFB $2A      ; Location ID.
 $8D90 DEFW $0019    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D92 DEFB $2B      ; Location ID.
 $8D93 DEFW $0032    ; Percentage to add.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $8D95 DEFB $29      ; Location ID.
 $8D96 DEFW $00C8    ; Percentage to add.
; End of table.
 $8D98 DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Action Location Buffer
@label=ActionLocationData
g$8D99 DEFW $0000    ; Pointer to the current location data from #R$BA8A.
@label=ActionLocationID
 $8D9B DEFB $00      ; The current location ID.
@label=
 $8D9C DEFB $00

; Action Dir
;
; Used by the routine at #R$8FAD.
@label=Action_Dir
c$8D9D CALL $95ED      ; {Jump to #R$8DAB if #R$95ED reports that it is light.
 $8DA0 JR NC,$8DAB     ; }
 $8DA2 LD A,$09        ;
 $8DA4 CALL $9C9F      ;
 $8DA7 INC A           ;
 $8DA8 LD ($B6E7),A    ;
; This entry point is used by the routine at #R$A2B4.
*$8DAB LD IY,($B70C)   ;
 $8DAF LD A,(IY+$01)   ;
 $8DB2 CP $FF          ;
 $8DB4 JR Z,$8DC3      ;
 $8DB6 CALL $9BCA      ;
 $8DB9 BIT 6,(IX+$07)  ;
 $8DBD JR Z,$8DD9      ;
 $8DBF LD (IY+$01),$FF ;
*$8DC3 LD A,($B6EA)    ;
 $8DC6 CALL $9CE8      ;
 $8DC9 ADD A,(IY+$02)  ;
 $8DCC LD ($8D9C),A    ;
 $8DCF LD A,($B6E7)    ;
 $8DD2 CALL $9F08      ;
 $8DD5 CP $FF          ;
 $8DD7 JR NZ,$8DFA     ;
*$8DD9 CALL $95ED      ; {Jump to #R$9F76 if #R$95ED reports that it is light.
 $8DDC JP NC,$9F76     ; }
 $8DDF CALL $9D44      ; Call #R$9D44.
 $8DE2 LD IX,$C11B     ; #REGix=#R$C11B.
 $8DE6 AND A           ;
 $8DE7 LD HL,$AD7D     ; #REGhl=#R$AD7D("but fall and hit your head[0x15]")
 $8DEA RR (IX+$05)     ;
 $8DEE JP NZ,$72DD     ;
 $8DF1 LD HL,$AD8A     ; #REGhl=#R$AD8A("but fall and smash your skull")
 $8DF4 CALL $72DD      ; Call #R$72DD.
 $8DF7 JP $90D2        ; Jump to #R$90D2.
*$8DFA LD A,(IX+$02)   ;
 $8DFD AND A           ;
 $8DFE JR Z,$8DD9      ;
 $8E00 LD ($8D9B),A    ;
 $8E03 LD A,(IX+$01)   ;
 $8E06 CALL $8E85      ;
 $8E09 DEC A           ;
 $8E0A JR Z,$8DD9      ;
 $8E0C DEC A           ;
 $8E0D JR Z,$8E6D      ;
 $8E0F DEC A           ;
 $8E10 JR Z,$8E72      ;
; This entry point is used by the routine at #R$9BDC.
*$8E12 CALL $9D44      ; Call #R$9D44.
 $8E15 LD (IY+$10),B   ; Update the location.
 $8E18 LD A,($B6EA)    ; #REGa=#R$B6EA.
 $8E1B CALL $9BDD      ; Call #R$9BDD.
 $8E1E LD A,($B6EA)    ; #REGa=#R$B6EA.
 $8E21 CP $00          ; {Return if the character is not #OBJECT($00, 1, 1)($).
 $8E23 RET NZ          ; }
 $8E24 LD IX,$C78E     ; {Call #R$9DBD using the #R$C78E(events table), looking
 $8E28 LD A,($8D9B)    ; for a match with #R$8D9B.
 $8E2B CALL $9DBD      ; }
 $8E2E JR Z,$8E39      ; Jump to #R$8E39 if no event was found.
 $8E30 LD L,(IX+$01)   ; {Load the event from the #R$C78E(events table).
 $8E33 LD H,(IX+$02)   ; }
 $8E36 CALL $9B6C      ; Call #R$9B6C to execute it.
; The game adds a one-time only value to the completion percentage once certain locations are reached (as long as
;       it's not dark).
@label=PercentageLocation
*$8E39 CALL $95ED      ; {Return if #R$95ED reports that it is dark.
 $8E3C RET C           ; }
 $8E3D LD A,($B6EA)    ; #REGa=#R$B6EA.
 $8E40 AND A           ; Set zero flag if the character is #OBJECT($00, 1,
                       ; 1)($).
 $8E41 LD A,($8D9B)    ; #REGa=#R$8D9B.
 $8E44 JR NZ,$8E6A     ; Jump to #R$8E6A to deal with any other object.
 $8E46 LD HL,($8D99)   ; #REGhl=#R$8D99.
 $8E49 BIT 6,(HL)      ; {If bit 6 is already (percentage is already added) set
 $8E4B JP NZ,$96A8     ; jump to #R$96A8.}
 $8E4E SET 6,(HL)      ; Set bit 6 of the location attributes, this sets that the percentage has already been added and hence will be
                       ;           skipped the next time this location is accessed.
 $8E50 PUSH AF         ; Stash #REGaf on the stack.
 $8E51 LD IX,$8D6E     ; {Call #R$9DBD with #R$8D6E.
 $8E55 CALL $9DBD      ; }
 $8E58 JR Z,$8E69      ; Jump to #R$8E69 if there was no match.
 $8E5A PUSH DE         ; Stash #REGde on the stack.
 $8E5B LD E,(IX+$01)   ; {#REGde=the percentage value to add from the match of
 $8E5E LD D,(IX+$02)   ; #R$8D6E.}
 $8E61 LD HL,($B6F7)   ; {Add the percentage value to #R$B6F7 and write it.
 $8E64 ADD HL,DE       ;
 $8E65 LD ($B6F7),HL   ; }
 $8E68 POP DE          ; Restore #REGde from the stack.
@label=PercentageLocation_Return
*$8E69 POP AF          ; Restore #REGaf from the stack.
@label=PercentageLocation_Skip
*$8E6A JP $9630        ; Jump to #R$9630.
*$8E6D LD HL,$AE23     ; #REGhl=#R$AE23("[0x04] is too small for you to
                       ; enter").
 $8E70 JR $8E79        ;
*$8E72 LD IX,($8D99)   ;
 $8E76 LD HL,$AE2E     ; #REGhl=#R$AE2E("[0x04] is too full for you to{5}
                       ; enter[0x15]").
*$8E79 PUSH HL         ;
 $8E7A LD L,(IX+$02)   ;
 $8E7D LD H,(IX+$03)   ;
 $8E80 EX (SP),HL      ;
 $8E81 CALL $72DD      ; Call #R$72DD.
 $8E84 RET             ; Return.
*$8E85 AND A           ;
 $8E86 JR Z,$8EA7      ;
 $8E88 CALL $9BCA      ;
 $8E8B LD A,(IX+$07)   ;
 $8E8E AND $28         ;
 $8E90 JR Z,$8ECE      ;
 $8E92 LD A,($B6EA)    ;
 $8E95 AND A           ;
 $8E96 JR NZ,$8E9E     ;
 $8E98 BIT 7,(IX+$04)  ;
 $8E9C JR NZ,$8ECE     ;
*$8E9E LD A,($8D9C)    ;
 $8EA1 LD B,(IX+$02)   ;
 $8EA4 SUB B           ;
 $8EA5 JR NC,$8ECA     ;
*$8EA7 LD A,($8D9B)    ;
 $8EAA LD B,A          ;
 $8EAB CALL $9BB1      ;
 $8EAE LD ($8D99),IX   ;
 $8EB2 LD A,$FF        ;
 $8EB4 CP (IX+$01)     ;
 $8EB7 JR Z,$8EC4      ;
 $8EB9 LD A,B          ;
 $8EBA CALL $9C41      ;
 $8EBD LD C,A          ;
 $8EBE LD A,($8D9C)    ;
 $8EC1 SUB C           ;
 $8EC2 JR NC,$8EC6     ;
*$8EC4 XOR A           ;
 $8EC5 RET             ;
*$8EC6 LD A,$03        ;
 $8EC8 AND A           ;
 $8EC9 RET             ;
*$8ECA LD A,$02        ;
 $8ECC AND A           ;
 $8ECD RET             ;
*$8ECE LD A,$01        ;
 $8ED0 AND A           ;
 $8ED1 RET             ;
*$8ED2 PUSH IX         ;
 $8ED4 CALL $9BCA      ;
*$8ED7 LD A,(IX+$01)   ;
 $8EDA CP $FF          ;
 $8EDC JR Z,$8EE9      ;
 $8EDE CALL $9BCA      ;
 $8EE1 BIT 5,(IX+$07)  ;
 $8EE5 JR NZ,$8ED7     ;
 $8EE7 OR $01          ;
*$8EE9 POP IX          ;
 $8EEB RET             ;
; This entry point is used by the routine at #R$A541.
*$8EEC LD A,($B6E8)    ;
 $8EEF CALL $9BCA      ;
 $8EF2 CALL $A5CA      ;
 $8EF5 JP Z,$A16C      ;
 $8EF8 LD A,($B6EA)    ;
 $8EFB CALL $8ED2      ;
 $8EFE RET NZ          ;
 $8EFF CALL $9F25      ;
 $8F02 CP $FF          ;
 $8F04 JP Z,$9F76      ;
 $8F07 LD A,(IX+$02)   ;
 $8F0A CP $00          ;
 $8F0C JP Z,$9F76      ;
 $8F0F CALL $9D44      ;
 $8F12 PUSH IX         ;
 $8F14 CALL $9BB1      ;
 $8F17 BIT 7,(IX+$00)  ;
 $8F1B POP IX          ;
 $8F1D JR Z,$8F35      ;
 $8F1F LD IY,($B70C)   ;
 $8F23 LD A,(IY+$10)   ;
 $8F26 PUSH AF         ;
 $8F27 LD A,(IX+$02)   ;
 $8F2A LD (IY+$10),A   ;
 $8F2D CALL $962B      ;
 $8F30 POP AF          ;
 $8F31 LD (IY+$10),A   ;
 $8F34 RET             ;
*$8F35 LD HL,$AE1F     ; #REGhl=#R$AE1F("it is dark")
 $8F38 JP $72DD        ; Jump to #R$72DD.
; This entry point is used by the routine at #R$A541.
*$8F3B CALL $9F25      ;
; This entry point is used by the routines at #R$8FCD and #R$8FD6.
*$8F3E CP $FF          ;
 $8F40 JP Z,$9F76      ;
 $8F43 LD A,(IX+$02)   ;
 $8F46 CP $00          ;
 $8F48 JP Z,$9F76      ;
 $8F4B LD A,(IX+$01)   ;
 $8F4E PUSH IX         ;
 $8F50 CALL $8E85      ;
 $8F53 POP IX          ;
 $8F55 JP NZ,$9F76     ;
 $8F58 CALL $9D44      ;
 $8F5B LD A,(IX+$00)   ;
 $8F5E LD ($B6E7),A    ;
 $8F61 LD A,$FF        ;
 $8F63 LD ($B6E8),A    ;
 $8F66 JP $8DAB        ;
 $8F69 LD IX,($B708)   ;
 $8F6D LD A,($B6E9)    ;
 $8F70 CP $17          ;
 $8F72 JR Z,$8F92      ;
 $8F74 CP $18          ;
 $8F76 JR Z,$8F9A      ;
*$8F78 LD IY,($B70A)   ;
 $8F7C BIT 1,(IY+$07)  ;
 $8F80 JP Z,$9F76      ;
 $8F83 BIT 2,(IX+$07)  ;
 $8F87 LD A,$82        ;
 $8F89 JP NZ,$A16C     ;
 $8F8C LD HL,$924F     ;
 $8F8F JP $9F4A        ;
*$8F92 LD A,$15        ;
 $8F94 LD IY,$C454     ;
 $8F98 JR $8FA0        ;
*$8F9A LD A,$16        ;
 $8F9C LD IY,$C469     ;
*$8FA0 LD ($B6E9),A    ;
 $8FA3 LD ($B70A),IY   ;
 $8FA7 LD (IY+$01),$FF ;
 $8FAB JR $8F78        ;

; Action Run
@label=Action_Run
c$8FAD LD A,$0A      ;
 $8FAF CALL $9C9F    ;
 $8FB2 CP $00        ;
 $8FB4 JR Z,$8FAD    ;
*$8FB6 LD B,A        ;
 $8FB7 CALL $9F08    ;
 $8FBA CP B          ;
 $8FBB JR Z,$8FC7    ;
 $8FBD LD A,B        ;
 $8FBE INC A         ;
 $8FBF CP $0A        ;
 $8FC1 JR C,$8FB6    ;
 $8FC3 LD A,$01      ;
 $8FC5 JR $8FB6      ;
*$8FC7 LD ($B6E7),A  ;
 $8FCA JP $8D9D      ;

; Action Enter
@label=Action_Enter
c$8FCD LD A,($B6E8)  ;
 $8FD0 CALL $9F2D    ;
 $8FD3 JP $8F3E      ;

; Action Follow
@label=Action_Follow
c$8FD6 LD IX,($B70C) ;
 $8FDA LD B,(IX+$10) ;
 $8FDD LD IX,($B708) ;
 $8FE1 LD A,(IX+$10) ;
 $8FE4 CP B          ;
 $8FE5 JR Z,$8FEF    ;
 $8FE7 CALL $9F2D    ;
 $8FEA CP $FF        ;
 $8FEC JP NZ,$8F3E   ;
*$8FEF LD HL,$AFE9   ; #REGhl=#R$AFE9("i cannot follow[0x07] from here[0x15]")
 $8FF2 JP $72DD      ; Jump to #R$72DD.

; Action Throw-At
@label=Action_ThrowAt
c$8FF5 CALL $8CF1      ;
 $8FF8 LD HL,$9171     ;
 $8FFB LD A,$0F        ;
 $8FFD LD IX,($B70A)   ;
 $9001 BIT 6,(IX+$07)  ;
 $9005 JR NZ,$900C     ;
 $9007 LD HL,$92ED     ;
 $900A LD A,$0B        ;
*$900C LD ($B6E7),A    ;
 $900F CALL $9F4A      ;
 $9012 LD A,$2A        ;
 $9014 LD ($B6E7),A    ;
 $9017 LD A,($B6FA)    ;
 $901A CP $01          ;
 $901C RET NZ          ;
 $901D LD IX,($B708)   ;
 $9021 LD (IX+$01),$FF ;
 $9025 LD A,$0F        ;
 $9027 LD ($B6E7),A    ;
 $902A LD A,($B6E8)    ;
 $902D JP $95DF        ;
 $9030 LD (IX+$01),$FF ;

; Action Talk-To
@label=Action_Talkto
c$9034 CALL $9D44     ;
 $9037 LD A,($B6E8)   ;
 $903A CALL $9A85     ;
 $903D CP $FF         ;
 $903F LD A,$00       ;
 $9041 JR Z,$9058     ;
 $9043 LD A,($B6F9)   ;
 $9046 CP $00         ;
 $9048 JR NZ,$9058    ;
 $904A LD A,(IY+$06)  ;
 $904D CP $00         ;
 $904F JR Z,$9058     ;
 $9051 CALL $9C9F     ;
 $9054 CP $00         ;
 $9056 JR Z,$905C     ;
*$9058 CALL $7EBA     ;
 $905B RET            ;
*$905C LD HL,$B1E3    ; #REGhl=#R$B1E3("[0x07] says " No "[0x14]")
 $905F CALL $72DD     ; Call #R$72DD.
 $9062 SUB A          ;
 $9063 JR $9058       ;
 $9065 CALL $9D44     ;
 $9068 LD IX,($B708)  ;
 $906C BIT 5,(IX+$07) ;
 $9070 JP Z,$9117     ;
 $9073 JP $9145       ;

; Action Shoot
@label=Action_Shoot
c$9076 LD A,$19        ;
 $9078 CALL $9C7B      ;
 $907B LD HL,$B121     ; #REGhl=#R$B121("You are not carrying the bow")
 $907E JP NC,$72DD     ;
 $9081 CALL $914A      ;
 $9084 CALL $9D44      ;
 $9087 LD A,$0F        ;
 $9089 LD ($B6E7),A    ;
 $908C LD A,($B6EA)    ;
 $908F CP $46          ;
 $9091 JR Z,$90A8      ;
 $9093 LD A,($B6E8)    ;
 $9096 CP $3C          ;
 $9098 LD HL,$B127     ; #REGhl=#R$B127("the arrow misses[0x09] by a wide
                       ; margin").
 $909B JP Z,$72DD      ;
 $909E LD A,$08        ;
 $90A0 CALL $9C9F      ;
 $90A3 CP $03          ;
 $90A5 JP C,$72DD      ;
*$90A8 LD IX,$C4EA     ;
 $90AC LD A,($B6E8)    ;
 $90AF CP $1A          ;
 $90B1 JR Z,$90B7      ;
 $90B3 LD (IX+$01),$FF ;
*$90B7 LD HL,$B136     ; #REGhl=#R$B136("the arrow{5} hits[0x07][0x15]").
 $90BA CALL $72DD      ;
 $90BD LD IX,($B708)   ;
 $90C1 CALL $A1C8      ;
 $90C4 JP NZ,$92ED     ;
 $90C7 LD A,($B6E8)    ;
 $90CA CALL $977F      ;
 $90CD LD A,$06        ;
 $90CF JP $A16C        ;

; "You are dead" controller.
;
; Used by the routines at #R$8D9D, #R$93DA, #R$96B3, #R$A541 and #R$C7EA.
@label=YouAreDead
c$90D2 SUB A         ;
 $90D3 LD ($B6EA),A  ;
 $90D6 LD HL,$AFF1   ; #REGhl=#R$AFF1("You are dead").
 $90D9 CALL $72DD    ; Call #R$72DD.
 $90DC CALL $83F5    ; Call #R$83F5.
; This is almost a carbon copy of #R$8441 only differing in that it ends with a
; jump to #R$6C27 and doesn't set a border colour.
@label=YouAreDead_WaitForKey
*$90DF XOR A         ; {Read from the keyboard port.
 $90E0 IN A,($FE)    ; }
 $90E2 AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $90E4 CP $1F        ; {Loop back to #R$90DF until any key has been pressed.
 $90E6 JR Z,$90DF    ; }
 $90E8 JP $6C27      ; Jump to #R$6C27.

; Action Inventory
@label=Action_Inventory
c$90EB CALL $9D44    ; Call #R$9D44.
 $90EE LD HL,$ADF6   ; #REGhl=#R$ADF6("You are carrying[0x15]")
 $90F1 CALL $72DD    ; Call #R$72DD.
 $90F4 LD A,($B6EA)  ;
 $90F7 CALL $9D97    ;
 $90FA AND A         ;
 $90FB LD HL,$B33B   ; #REGhl=#R$B33B("{6} nothing")
 $90FE JP Z,$72DD    ; Display this message using #R$72DD if zero.
 $9101 LD A,($B6EA)  ; #REGa=#R$B6EA
 $9104 LD IX,($B70C) ; #REGix=#R$B70C
 $9108 LD B,(IX+$10) ; #REGb=
 $910B JP $9FAF      ; Jump to #R$9FAF.

; Routine at 910E
;
; Used by the routines at #R$A302, #R$A3E6 and #R$A541.
c$910E CALL $A1F9     ;
 $9111 JP NZ,$A16C    ;
 $9114 CALL $9D44     ;
; This entry point is used by the routines at #R$9034 and #R$A302.
*$9117 SET 5,(IX+$07) ;
 $911B LD A,(IX+$00)  ;
 $911E DEC A          ;
 $911F RET NZ         ;
 $9120 LD A,($B6E8)   ;
 $9123 CALL $9D97     ;
 $9126 AND A          ;
 $9127 RET Z          ;
 $9128 LD A,($B6E8)   ;
 $912B CALL $A050     ;
 $912E RET C          ;
 $912F LD B,(IX+$10)  ;
 $9132 LD A,($B6E8)   ;
 $9135 JP $9FAF       ; Jump to #R$9FAF.
; This entry point is used by the routine at #R$A541.
*$9138 LD IX,($B708)  ;
 $913C CALL $A5CA     ;
 $913F JP Z,$A16C     ;
 $9142 CALL $9D44     ;
; This entry point is used by the routine at #R$9034.
*$9145 RES 5,(IX+$07) ;
 $9149 RET            ; Return.
; This entry point is used by the routines at #R$9076 and #R$9171.
*$914A LD IX,($B708)  ;
 $914E LD A,($B6EA)   ;
 $9151 AND A          ;
 $9152 JR NZ,$915E    ;
 $9154 BIT 4,(IX+$04) ;
 $9158 JR Z,$915E     ;
 $915A RES 4,(IX+$04) ;
*$915E LD A,(IX+$04)  ;
 $9161 AND $70        ;
 $9163 LD IX,($B70C)  ;
 $9167 AND (IX+$04)   ;
 $916A RET Z          ;
 $916B POP HL         ;
 $916C XOR A          ;
 $916D LD ($B6FB),A   ;
 $9170 RET            ; Return.

; Action Attack
@label=Action_Attack
c$9171 CALL $914A      ;
 $9174 LD A,($B6E9)    ;
 $9177 LD HL,$026B     ;
 $917A CP $FF          ;
 $917C JR Z,$9188      ;
 $917E LD IX,($B70A)   ;
 $9182 LD L,(IX+$08)   ;
 $9185 LD H,(IX+$09)   ;
*$9188 LD ($B6FC),HL   ;
 $918B LD IX,($B70C)   ;
 $918F LD B,(IX+$05)   ;
 $9192 LD A,($B6E9)    ;
 $9195 INC A           ;
 $9196 JR Z,$91AF      ;
 $9198 LD IY,($B70A)   ;
 $919C LD A,(IY+$00)   ;
 $919F DEC A           ;
 $91A0 LD HL,$AF5F     ; #REGhl=#R$AF5F("you cannot kill with[0x09][0x15]")
 $91A3 JP NZ,$72DD     ;
 $91A6 LD A,(IY+$05)   ;
 $91A9 ADD A,B         ;
 $91AA JR NC,$91AE     ;
 $91AC LD A,$FF        ;
*$91AE LD B,A          ;
*$91AF LD A,B          ;
 $91B0 CALL $9213      ;
 $91B3 LD B,A          ;
 $91B4 CALL $9D44      ;
 $91B7 LD IX,($B708)   ;
 $91BB LD A,(IX+$06)   ;
 $91BE CALL $9213      ;
 $91C1 CP B            ;
 $91C2 LD HL,$AF50     ; #REGhl=#R$AF50("but the effort is wasted.[0x0e]
                       ; defense is too strong")
 $91C5 JP NC,$72DD     ;
 $91C8 LD C,A          ;
 $91C9 ADD A,$10       ;
 $91CB JR NC,$91CF     ;
 $91CD LD A,$FF        ;
*$91CF CP B            ;
 $91D0 JR C,$91FE      ;
 $91D2 LD A,B          ;
 $91D3 SUB C           ;
 $91D4 RLCA            ;
 $91D5 LD E,A          ;
 $91D6 LD D,$00        ;
 $91D8 LD IY,$9226     ;
 $91DC ADD IY,DE       ;
 $91DE LD L,(IY+$00)   ;
 $91E1 LD H,(IY+$01)   ;
 $91E4 RRCA            ;
 $91E5 RRCA            ;
 $91E6 LD B,A          ;
 $91E7 CPL             ;
 $91E8 ADD A,(IX+$05)  ;
 $91EB JR NC,$91F0     ;
 $91ED LD (IX+$05),A   ;
*$91F0 LD A,B          ;
 $91F1 RRCA            ;
 $91F2 CPL             ;
 $91F3 ADD A,(IX+$06)  ;
 $91F6 JR NC,$91FB     ;
 $91F8 LD (IX+$06),A   ;
*$91FB JP $72DD        ;
*$91FE LD HL,$AE3A     ; #REGhl=#R$AE3A("with one well place(s|d|ing|es) blow
                       ; you cleave[0x0e] skull")
 $9201 CALL $72DD      ; Call #R$72DD.
 $9204 SET 3,(IX+$07)  ;
 $9208 LD A,($B6E8)    ;
 $920B CALL $977F      ;
 $920E LD A,$06        ;
 $9210 JP $A16C        ;
*$9213 PUSH BC         ;
 $9214 LD B,A          ;
 $9215 LD A,$0A        ;
 $9217 CALL $9CA8      ;
 $921A LD C,A          ;
 $921B ADD A,B         ;
 $921C JR NC,$9224     ;
 $921E XOR A           ;
 $921F BIT 7,C         ;
 $9221 JR NZ,$9224     ;
 $9223 DEC A           ;
*$9224 POP BC          ;
 $9225 RET             ;
 $9226 DEFW $AF3C      ;
 $9228 DEFW $AF2B      ;
 $922A DEFW $AF20      ;
 $922C DEFW $AF15      ;
 $922E DEFW $AF09      ;
 $9230 DEFW $AEF4      ;
 $9232 DEFW $AEE2      ;
 $9234 DEFW $AED1      ;
 $9236 DEFW $AEBA      ;
 $9238 DEFW $AEAC      ;
 $923A DEFW $AE98      ;
 $923C DEFW $AE8B      ;
 $923E DEFW $AE7A      ;
 $9240 DEFW $AE70      ;
 $9242 DEFW $AE5A      ;
 $9244 DEFW $AE49      ;
; This entry point is used by the routine at #R$8CA6.
*$9246 LD IX,($B708)   ;
 $924A LD A,(IX+$00)   ;
 $924D DEC A           ;
 $924E RET             ;
 $924F CALL $8D25      ;
 $9252 LD A,($B6E9)    ;
 $9255 CP (IX+$01)     ;
 $9258 JP Z,$72CE      ;
 $925B LD IY,($B70A)   ;
 $925F LD A,($B6E7)    ;
 $9262 CP $12          ;
 $9264 JR Z,$926C      ;
 $9266 BIT 5,(IY+$07)  ;
 $926A JR Z,$9297      ;
*$926C LD A,(IY+$02)   ;
 $926F SUB (IX+$02)    ;
 $9272 JR C,$927E      ;
 $9274 PUSH AF         ;
 $9275 LD A,($B6E9)    ;
 $9278 CALL $9CE8      ;
 $927B LD B,A          ;
 $927C POP AF          ;
 $927D SUB B           ;
*$927E LD HL,$AE1A     ; #REGhl=#R$AE1A("[0x09] is too full")
 $9281 JP C,$72DD      ;
 $9284 JP Z,$72DD      ;
 $9287 CALL $9D44      ;
 $928A LD A,(IY+$10)   ;
 $928D LD (IX+$10),A   ;
 $9290 LD A,($B6E9)    ;
 $9293 LD (IX+$01),A   ;
 $9296 RET             ;
*$9297 LD A,$05        ;
 $9299 JP $A164        ;
 $929C CALL $9D44      ;
 $929F LD IX,($B708)   ;
 $92A3 LD A,(IX+$01)   ;
 $92A6 CP $FF          ;
 $92A8 JR Z,$92B5      ;
 $92AA CALL $9BCA      ;
 $92AD RES 2,(IX+$07)  ;
 $92B1 LD A,$01        ;
 $92B3 JR $92BA        ;
; This entry point is used by the routine at #R$A541.
*$92B5 CALL $9D44      ;
 $92B8 LD A,$0A        ;
*$92BA LD IX,($B70C)   ;
 $92BE ADD A,(IX+$05)  ;
 $92C1 CP $80          ;
 $92C3 JR NC,$92DC     ;
 $92C5 LD (IX+$05),A   ;
 $92C8 LD IX,($B708)   ;
 $92CC LD (IX+$01),$FF ;
 $92D0 LD B,(IX+$00)   ;
*$92D3 LD (IX+$10),$00 ;
 $92D7 INC IX          ;
 $92D9 DJNZ $92D3      ;
 $92DB RET             ;
*$92DC LD HL,$B146     ; #REGhl=#R$B146("[0x0c] foul gluttony has{5} killed
                       ; you[0x15]")
 $92DF CALL $72DD      ;
 $92E2 LD A,($B6EA)    ;
 $92E5 JP $977F        ;
 $92E8 LD A,$83        ;
 $92EA JP $A164        ;
; This entry point is used by the routines at #R$9076 and #R$A541.
*$92ED LD IX,($B708)   ;
 $92F1 BIT 1,(IX+$07)  ;
 $92F5 JP NZ,$9F76     ;
 $92F8 BIT 3,(IX+$07)  ;
 $92FC JP NZ,$9399     ;
 $92FF SUB A           ;
 $9300 CP (IX+$06)     ;
 $9303 JP Z,$9F76      ;
 $9306 LD B,A          ;
 $9307 LD A,($B6E9)    ;
 $930A INC A           ;
 $930B JR Z,$932C      ;
 $930D LD IY,($B70A)   ;
 $9311 LD A,(IY+$05)   ;
 $9314 AND A           ;
 $9315 JP Z,$9F76      ;
 $9318 PUSH IX         ;
 $931A LD IX,($B70A)   ;
 $931E LD A,$0B        ;
 $9320 CALL $9B81      ;
 $9323 POP IX          ;
 $9325 INC A           ;
 $9326 JP Z,$9F76      ;
 $9329 LD B,(IY+$05)   ;
*$932C CALL $9D44      ;
 $932F LD A,$15        ;
 $9331 CALL $9CA8      ;
 $9334 ADD A,B         ;
 $9335 LD IY,($B70C)   ;
 $9339 ADD A,(IY+$05)  ;
 $933C JR NC,$9340     ;
 $933E LD A,$FF        ;
*$9340 SUB (IX+$06)    ;
 $9343 JR C,$9360      ;
 $9345 SET 3,(IX+$07)  ;
 $9349 LD A,($B6E8)    ;
 $934C CALL $A18C      ;
 $934F SRA (IX+$05)    ;
 $9353 LD A,(IX+$04)   ;
 $9356 CP $02          ;
 $9358 CALL C,$9D50    ;
 $935B LD A,$83        ;
 $935D CALL $A16C      ;
*$9360 LD A,($B6E9)    ;
 $9363 CP $FF          ;
 $9365 RET Z           ;
 $9366 LD IY,($B70A)   ;
 $936A BIT 3,(IY+$07)  ;
 $936E RET NZ          ;
 $936F LD B,(IY+$06)   ;
 $9372 LD A,$15        ;
 $9374 CALL $9CA8      ;
 $9377 ADD A,B         ;
 $9378 JR NC,$937C     ;
 $937A LD A,$FF        ;
*$937C SUB (IX+$06)    ;
 $937F RET C           ;
 $9380 SET 3,(IY+$07)  ;
 $9384 LD A,($B6E9)    ;
 $9387 CALL $A18C      ;
 $938A LD A,(IY+$05)   ;
 $938D SRA A           ;
 $938F LD (IY+$05),A   ;
 $9392 CALL $9D50      ;
 $9395 PUSH IY         ;
 $9397 POP IX          ;
*$9399 LD A,$83        ;
 $939B JP $A16C        ;

; Action Give
;
; Used by the routine at #R$A541.
@label=Action_Give
c$939E LD IY,($B70A)  ;
 $93A2 CALL $9C78     ;
 $93A5 LD HL,$ADF1    ; #REGhl=#R$ADF1("You are not carrying it[0x15]")
 $93A8 JP NC,$72DD    ;
 $93AB LD A,($B6E9)   ;
 $93AE CALL $9CED     ; Call #R$9CED.
 $93B1 LD IX,($B708)  ;
 $93B5 ADD A,(IX+$03) ;
 $93B8 PUSH AF        ;
 $93B9 POP BC         ;
 $93BA LD A,(IY+$03)  ;
 $93BD SUB B          ;
 $93BE LD HL,$AE0C    ; #REGhl=#R$AE0C("You are carrying too much")
 $93C1 JP C,$72DD     ;
 $93C4 CALL $9D44     ; Call #R$9D44.
 $93C7 LD A,($B6E9)   ;
 $93CA LD (IX+$01),A  ;
 $93CD LD A,(IY+$10)  ;
 $93D0 LD (IX+$10),A  ;
 $93D3 LD B,A         ;
 $93D4 LD A,($B6E8)   ;
 $93D7 JP $9BDD       ; Jump to #R$9BDD.

; Action Examine
;
; Used by the routine at #R$A541.
@label=Action_Examine
c$93DA CALL $9D44      ; Call #R$9D44.
 $93DD LD A,($B6E8)    ; #REGa=#R$B6E8
 $93E0 CALL $9BCA      ; Call #R$9BCA.
 $93E3 LD L,(IX+$0E)   ; {#REGhl=offset for object help text.
 $93E6 LD H,(IX+$0F)   ; }
 $93E9 LD A,H          ; {If this value is not $0000 then jump to #R$72DD.
 $93EA OR L            ;
 $93EB JP NZ,$72DD     ; }
 $93EE LD HL,$B000     ; #REGhl=#R$B000("You see[0x16]")
 $93F1 CALL $72DD      ; Call #R$72DD.
 $93F4 PUSH IX         ; {#REGiy=#REGix
 $93F6 POP IY          ; }
 $93F8 CALL $9EC7      ; Call #R$9EC7.
 $93FB LD A,$2E        ;
 $93FD CALL $858B      ; Call #R$858B.
 $9400 CALL $8583      ; Call #R$8583.
 $9403 RET             ; Return.
 $9404 LD IX,($B708)   ;
 $9408 CALL $A5CA      ;
 $940B JP Z,$A16C      ;
 $940E LD A,($B6E8)    ;
 $9411 CALL $9D97      ;
 $9414 CP $00          ;
 $9416 JR Z,$9423      ;
 $9418 CALL $9D44      ;
 $941B CALL $9D50      ;
 $941E RES 2,(IX+$07)  ;
 $9422 RET             ;
*$9423 LD A,$02        ;
 $9425 JP $A16C        ;
 $9428 CALL $8D25      ;
 $942B CALL $9D44      ;
 $942E LD A,($B6F6)    ;
 $9431 LD IX,($B70A)   ;
 $9435 LD B,(IX+$00)   ;
*$9438 CP (IX+$10)     ;
 $943B JR Z,$9444      ;
 $943D INC IX          ;
 $943F DJNZ $9438      ;
 $9441 JP $72CE        ;
*$9444 LD A,(IX+$11)   ;
 $9447 DEC B           ;
 $9448 JR NZ,$944B     ;
 $944A XOR A           ;
*$944B PUSH AF         ;
 $944C LD HL,$ADFC     ; #REGhl=#R$ADFC("and it get(s|d|ing|es) swept away")
 $944F CALL $72DD      ; Call #R$72DD.
 $9452 POP AF          ;
 $9453 LD IX,($B708)   ;
 $9457 LD (IX+$10),A   ;
 $945A LD (IX+$01),$FF ;
 $945E LD B,A          ;
 $945F LD A,($B6E8)    ;
 $9462 CALL $9BDD      ;
 $9465 LD A,($C12B)    ;
 $9468 AND A           ;
 $9469 JP Z,$90D2      ;
 $946C RET             ;
; This entry point is used by the routine at #R$A302.
*$946D CALL $A1F9      ;
 $9470 JP NZ,$A16C     ;
 $9473 LD A,$C6        ;
*$9475 LD ($948B),A    ;
 $9478 LD IY,($B70A)   ;
 $947C BIT 3,(IY+$07)  ;
 $9480 LD A,$83        ;
 $9482 JP NZ,$A164     ;
 $9485 CALL $9D44      ;
 $9488 SET 0,(IX+$07)  ;
 $948C RET             ;
; This entry point is used by the routine at #R$A302.
*$948D LD IX,($B708)   ;
 $9491 BIT 0,(IX+$07)  ;
 $9495 LD A,$00        ;
 $9497 JP Z,$A16C      ;
 $949A CALL $A204      ;
 $949D JP NZ,$A16C     ;
 $94A0 LD A,$86        ;
 $94A2 JR $9475        ;
 $94A4 CALL $8C9B      ;
 $94A7 LD A,($B6E9)    ;
 $94AA CALL $9F28      ;
 $94AD CP $FF          ;
 $94AF JP Z,$9F76      ;
 $94B2 LD IY,($B70A)   ;
 $94B6 BIT 5,(IY+$07)  ;
 $94BA LD A,$05        ;
 $94BC JP Z,$A164      ;
 $94BF CALL $9D44      ;
 $94C2 LD B,(IX+$02)   ;
 $94C5 LD IX,($B708)   ;
 $94C9 LD (IX+$01),$FF ;
 $94CD LD (IX+$10),B   ;
 $94D0 LD A,($B6E8)    ;
 $94D3 JP $9BDD        ;
; This entry point is used by the routine at #R$77D1.
*$94D6 PUSH IX         ;
 $94D8 PUSH HL         ;
 $94D9 CALL $9B44      ;
 $94DC LD A,$00        ;
 $94DE JR Z,$9508      ;
 $94E0 LD A,($B6E7)    ;
 $94E3 LD IX,$C730     ;
 $94E7 CALL $9DBD      ;
 $94EA CP $FF          ;
 $94EC LD A,$01        ;
 $94EE JR NZ,$9508     ;
 $94F0 CALL $A1D0      ;
 $94F3 LD A,$01        ;
 $94F5 JR Z,$9508      ;
 $94F7 LD A,($B6E8)    ;
 $94FA CALL $9BCA      ;
 $94FD LD A,($B6E7)    ;
 $9500 CALL $9B81      ;
 $9503 LD A,$01        ;
 $9505 JR C,$9508      ;
 $9507 SUB A           ;
*$9508 LD ($B6FB),A    ;
 $950B POP HL          ;
 $950C POP IX          ;
 $950E RET             ;
; This entry point is used by the routines at #R$77D1 and #R$96B3.
*$950F PUSH HL         ;
 $9510 PUSH IX         ;
 $9512 PUSH BC         ;
 $9513 CALL $9B44      ;
 $9516 JP Z,$95DA      ;
 $9519 CALL $95ED      ;
 $951C JR NC,$9539     ;
 $951E LD A,($B711)    ;
 $9521 AND A           ;
 $9522 JR NZ,$9531     ;
 $9524 CALL $9C78      ;
 $9527 JR NC,$9531     ;
 $9529 LD A,($B6E9)    ;
 $952C CALL $9C7B      ;
 $952F JR C,$9539      ;
*$9531 LD HL,$AFC4     ; #REGhl=#R$AFC4("i see nothing here")
 $9534 CALL $72DD      ; Call #R$72DD.
 $9537 JR $959B        ;
*$9539 LD A,($B6FE)    ;
 $953C CP $01          ;
 $953E JP Z,$95CC      ;
 $9541 LD A,($B6E8)    ;
 $9544 CP $FF          ;
 $9546 JP Z,$95CC      ;
 $9549 CALL $9BCA      ;
 $954C LD ($B708),IX   ;
 $9550 LD A,($B6E8)    ;
 $9553 CALL $9728      ;
 $9556 JR NZ,$959B     ;
 $9558 LD A,($B6E9)    ;
 $955B CP $FF          ;
 $955D JR Z,$957A      ;
 $955F LD A,($B6FF)    ;
 $9562 CP $01          ;
 $9564 JR Z,$95CC      ;
 $9566 LD A,($B6E9)    ;
 $9569 CALL $9BCA      ;
 $956C LD ($B70A),IX   ;
 $9570 CALL $9728      ;
 $9573 JR NZ,$959B     ;
 $9575 CALL $A1D0      ;
 $9578 JR Z,$957E      ;
*$957A LD IX,($B708)   ;
*$957E LD A,($B6E7)    ;
 $9581 CALL $9B81      ;
 $9584 JR NC,$95CC     ;
*$9586 LD L,(IX+$01)   ; {Fetch the action address from the #R$C730(action
 $9589 LD H,(IX+$02)   ; table) and store it in #REGhl.}
 $958C CALL $9B6C      ; Call #R$9B6C.
 $958F INC IX          ;
 $9591 INC IX          ;
 $9593 INC IX          ;
 $9595 SUB A           ;
 $9596 CP (IX+$00)     ;
 $9599 JR Z,$9586      ;
@label=CheckLit
*$959B LD A,($B6FA)    ; {If #R$B6FA is not $01 then jump to #R$95C7.
 $959E CP $01          ;
 $95A0 JR NZ,$95C7     ; }
; This check is a little unnecessary as the first thing the routine at #R$95ED
; does, is to check exactly this...
 $95A2 LD A,($B6EA)    ; {If #R$B6EA is not $00 (i.e. "#TEXTTOKEN($C11B + $08,
 $95A5 CP $00          ; 1)") then skip the "is location lit" check, instead
 $95A7 JR NZ,$95AF     ; jump to #R$95AF.}
; #R$95ED uses the carry flag to indicate if it is light or dark.
 $95A9 CALL $95ED      ; {If the location is dark then call #R$72DD to tell the
 $95AC CALL C,$72DD    ; user #R$AE1F("it is dark").}
@label=CheckAction
*$95AF LD A,($B6E7)    ; {#REGb=#R$B6E7.
 $95B2 LD B,A          ; }
 $95B3 LD A,($B6E8)    ; {Call #R$95DF with #REGix=#R$B708 and #REGa=#R$B6E8.
 $95B6 LD IX,($B708)   ;
 $95BA CALL $95DF      ; }
 $95BD LD A,($B6E9)    ; {Call #R$95DF with #REGix=#R$B70A and #REGa=#R$B6E9.
 $95C0 LD IX,($B70A)   ;
 $95C4 CALL $95DF      ; }
; Performs housekeeping and returns.
@label=CheckReturn
*$95C7 POP BC          ; {Restore #REGbc, #REGix and #REGhl from the stack.
 $95C8 POP IX          ;
 $95CA POP HL          ; }
 $95CB RET             ; Return.
; Checks if the action given is valid.
@label=CheckValidAction
*$95CC LD A,($B6E7)    ; {Call #R$9DBD with #R$C730, to match the key value of
 $95CF LD IX,$C730     ; #R$B6E7.
 $95D3 CALL $9DBD      ; }
 $95D6 CP $FF          ; {If the termination character was not reached because
 $95D8 JR NZ,$9586     ; an action did match, jump to #R$9586.}
*$95DA CALL $72CE      ; {Else, call #R$72CE and jump to #R$95C7.
 $95DD JR $95C7        ; }
; This entry point is used by the routine at #R$8FF5.
*$95DF BIT 6,(IX+$07)  ; {Return if the object is marked as being a "Fluid".
 $95E3 RET Z           ; }
 $95E4 BIT 3,(IX+$07)  ; {Return if the object is not marked as "Gives Light".
 $95E8 RET NZ          ; }
 $95E9 CALL $9AA0      ; Call #R$9AA0.
 $95EC RET             ; Return.

; Is Location Lit?
;
; Used by the routines at #R$70F3, #R$7F78, #R$8D9D, #R$93DA, #R$9B02 and
; #R$A3E6.
;
; .
;
; We're only interested if the currently processed charcter is the player.
; Return if not.
@label=LocationLit
c$95ED LD A,($B6EA)   ; {Return if #R$B6EA is not zero.
 $95F0 AND A          ;
 $95F1 RET NZ         ; }
; Begin...
 $95F2 PUSH IX        ; {Store #REGix and #REGbc on the stack.
 $95F4 PUSH BC        ; }
; Check if the player object is inside "something".
 $95F5 LD IX,$C11B    ; #REGix=#R$C11B("#TEXTTOKEN($C11B + $08, 1)").
 $95F9 CALL $9E7A     ; Call #R$9E7A.
 $95FC INC A          ; {If the player is inside of another object then jump to
 $95FD JR NZ,$9608    ; #R$9608.}
; Check the location data to see if this location is light or dark.
 $95FF CALL $9D37     ; Call #R$9D37.
 $9602 BIT 7,(IX+$00) ; {If the location is marked as being "LIGHT" then jump
 $9606 JR NZ,$9624    ; to #R$9624 to return.}
; The "#TEXTTOKEN($C305 + $08, 1)" is a light source, can it be used?
@label=LocationLit_Sword
*$9608 PUSH IY        ; Stash #REGiy on the stack briefly.
 $960A LD A,$0E       ; {Using #REGa=$0E and #REGhl=#R$C305 which are the
 $960C LD IY,$C305    ; object ID and object location for "#TEXTTOKEN($C305 +
 $9610 CALL $9E34     ; $08, 1)", call #R$9E34.}
 $9613 POP IY         ; Restore #REGiy from the stack.
 $9615 JR Z,$9620     ; Jump to #R$9620 if it is dark.
 $9617 LD A,($C30C)   ; #REGa=#R$C30C(the attributes for "#TEXTTOKEN($C305 +
                      ; $08, 1)").
 $961A XOR $F7        ; XOR #EVAL($F7,2,8).
 $961C AND $1C        ; {If the "#TEXTTOKEN($C305 + $08, 1)" is not "Broken",
 $961E JR Z,$9628     ; "Gives Light" and is not "Full" (?) then jump to
                      ; #R$9628.}
; The below handle the two responses for "light" and "dark" using the carry
; flag to signify darkness when set, and light unset.
@label=LocationLit_IsDark
*$9620 LD HL,$AE1F    ; #REGhl=#R$AE1F("it is dark").
 $9623 SCF            ; Set the carry flag.
@label=LocationLit_Return
*$9624 POP BC         ; {Restore #REGbc and #REGix from the stack.
 $9625 POP IX         ; }
 $9627 RET            ; Return.
@label=LocationLit_IsLight
*$9628 AND A          ; Reset the carry flag.
 $9629 JR $9624       ; Jump to #R$9624.

; "You see ..." Routines
;
; Used by the routine at #R$8D9D.
@label=YouSeeEntry
c$962B LD HL,$B000   ; #REGhl=#R$B000("You see[0x16]").
 $962E JR $964D      ; Jump to #R$964D.
; This entry point is used by the routines at #R$8C4B, #R$8D9D and #R$A541.
@label=YouSeePreposition
*$9630 PUSH AF       ; Stash #REGaf on the stack.
 $9631 CALL $9BB1    ; Call #R$9BB1.
 $9634 LD A,(IX+$00) ; {Fetch the location attribute, keep only bits 1-3 which
 $9637 AND %00001110 ; signify the location preposition ("IN", "ON", "AT",
                     ; etc).}
 $9639 LD E,A        ; {Create an offset for the preposition word look-up.
 $963A LD D,$00      ; }
 $963C LD HL,$BA80   ; {Add the offset to #R$BA80.
 $963F ADD HL,DE     ; }
 $9640 LD E,(HL)     ; {Fetch the referenced text bytes which display the
 $9641 INC HL        ; preposition word.
 $9642 LD D,(HL)     ; }
 $9643 LD HL,$AFFD   ; {Write the text tokens to #R$AFFC($AFFD) which updates
 $9646 LD (HL),D     ; the copy for "You are XXXX[0x16]".
 $9647 INC HL        ;
 $9648 LD (HL),E     ; }
 $9649 POP AF        ; Restore #REGaf from the stack.
 $964A LD HL,$AFFC   ; #REGhl=#R$AFFC("You are in[0x16]").
; This entry point is used by the routine at #R$A3E6.
@label=YouSeeWrapper
*$964D PUSH IX       ; {Stash #REGix, #REGiy and #REGbc on the stack.
 $964F PUSH IY       ;
 $9651 PUSH BC       ; }
 $9652 CALL $965B    ; Call #R$965B.
 $9655 POP BC        ; {Restore #REGbc, #REGiy and #REGix from the stack.
 $9656 POP IY        ;
 $9658 POP IX        ; }
 $965A RET           ; Return.
; From here starts the "intro" to a location;
; #LIST
; { Print the "You see[0x16]" text }
; { Handle printing the location data message for this location (if one exists) }
; { Handles initiating the location graphics/ drawing (if it exists) }
; { Handles waiting for a keypress (if something was drawn) }
; { Prints available exits }
; LIST#
@label=YouSeeStart
*$965B LD B,A        ; Store #REGa in #REGb temporarily.
 $965C CALL $9BB1    ; Call #R$9BB1 to set #REGix to point to the appropriate
                     ; #R$BA8A(location data) for the current location.
 $965F CALL $72DD    ; Call #R$72DD.
 $9662 LD L,(IX+$08) ; {Load the #R$BA8A(location data) offset for the current
 $9665 LD H,(IX+$09) ; location description.}
 $9668 LD A,H        ; {Check that there is a value for the description, set
 $9669 OR L          ; zero flag if not.}
 $966A CALL $9686    ; Call #R$9686.
 $966D LD A,B        ; Restore the previous value of #REGa (the location ID).
 $966E CALL $7F78    ; Call #R$7F78.
 $9671 LD A,($7F77)  ; {Test if #R$7F77 contains $FF, call #R$969A if it does
 $9674 INC A         ; not (i.e. wait for a keypress only if something has been
 $9675 CALL NZ,$969A ; drawn).}
 $9678 CALL $8583    ; Call #R$8583.
 $967B LD A,B        ; Restore the previous value of #REGa (the location ID).
 $967C CALL $A0C8    ; Call #R$A0C8.
@label=YouSeeExits
*$967F LD A,B        ; Restore the previous value of #REGa (the location ID).
 $9680 CALL $A138    ; Call #R$A138.
 $9683 JP $9F94      ; Jump to #R$9F94.
@label=YouSeePrint
*$9686 JP NZ,$72DD   ; Print the location description if one is present.
@label=YouSeeNext
*$9689 LD DE,$0002   ; #REGde=$0002.
 $968C PUSH IY       ; Stash #REGiy on the stack.
 $968E PUSH IX       ; {#REGiy=#REGix.
 $9690 POP IY        ; }
 $9692 ADD IY,DE     ; #REGiy=#REGiy + $0002 (from #REGde).
 $9694 CALL $9ED6    ; Call #R$9ED6.
 $9697 POP IY        ; Restore #REGiy from the stack.
 $9699 RET           ; Return.
; This is almost a carbon copy of #R$8441 only differing in that it ends with a
; return.
@label=WaitForKey2
*$969A XOR A         ; {Read from the keyboard port.
 $969B IN A,($FE)    ; }
 $969D AND %00011111 ; A pressed key from any line will set its respective bit; bit 0 (outer key) to bit 4 (inner key).
                     ;           Hence keep only bits 0-4 for the check.
 $969F CP $1F        ; {Loop back to #R$969A until any key has been pressed.
 $96A1 JR Z,$969A    ; }
 $96A3 LD A,$07      ; {Set the border to white.
 $96A5 OUT ($FE),A   ; }
 $96A7 RET           ; Return.
; This entry point is used by the routine at #R$8D9D.
@label=YouSeeController
*$96A8 CALL $9BB1    ; Call #R$9BB1.
 $96AB CALL $9689    ; Call #R$9689.
 $96AE CALL $8583    ; Call #R$8583.
 $96B1 JR $967F      ; Jump to #R$967F.

; Routine at 96B3
;
; Used by the routine at #R$77D1.
c$96B3 PUSH HL         ;
 $96B4 PUSH IX         ;
 $96B6 PUSH IY         ;
 $96B8 PUSH BC         ;
 $96B9 PUSH DE         ;
 $96BA CALL $A9D6      ;
 $96BD CALL $980E      ;
 $96C0 SUB A           ;
 $96C1 LD ($B6F0),A    ;
 $96C4 INC A           ;
 $96C5 LD ($B6FB),A    ;
 $96C8 LD ($B6FA),A    ;
 $96CB LD IY,$CA84     ;
*$96CF LD A,(IY+$00)   ;
 $96D2 CP $FF          ;
 $96D4 JR Z,$971B      ;
 $96D6 LD A,(IY+$01)   ;
 $96D9 CP $00          ;
 $96DB JR Z,$9713      ;
 $96DD DEC A           ;
 $96DE LD (IY+$01),A   ;
 $96E1 CP $00          ;
 $96E3 JR NZ,$96FE     ;
 $96E5 LD A,($B6F0)    ;
 $96E8 CP $01          ;
 $96EA LD (IY+$01),A   ;
 $96ED JR Z,$96FE      ;
 $96EF INC A           ;
 $96F0 LD ($B6F0),A    ;
 $96F3 LD L,(IY+$02)   ;
 $96F6 LD H,(IY+$03)   ;
 $96F9 CALL $9B6C      ;
 $96FC JR $9713        ;
*$96FE LD A,(IY+$04)   ;
 $9701 CP $00          ;
 $9703 JR Z,$9713      ;
 $9705 CP (IY+$01)     ;
 $9708 JR C,$9713      ;
 $970A LD L,(IY+$05)   ;
 $970D LD H,(IY+$06)   ;
 $9710 CALL $9B6C      ;
*$9713 LD DE,$0007     ;
 $9716 ADD IY,DE       ;
 $9718 JP $96CF        ;
*$971B LD A,$01        ;
 $971D LD ($B702),A    ;
 $9720 POP DE          ;
 $9721 POP BC          ;
 $9722 POP IY          ;
 $9724 POP IX          ;
 $9726 POP HL          ;
 $9727 RET             ;
; This entry point is used by the routine at #R$93DA.
*$9728 CP $FF          ;
 $972A RET Z           ;
 $972B PUSH IX         ;
 $972D PUSH IY         ;
 $972F PUSH BC         ;
 $9730 LD B,A          ;
 $9731 LD A,($B6EA)    ;
 $9734 CP $00          ;
 $9736 JR Z,$973B      ;
 $9738 XOR A           ;
 $9739 JR $9776        ;
*$973B LD A,B          ;
 $973C CALL $9BCA      ;
 $973F LD A,(IX+$01)   ;
 $9742 CP $FF          ;
 $9744 JR Z,$9776      ;
 $9746 LD A,B          ;
 $9747 PUSH IX         ;
 $9749 POP IY          ;
 $974B CALL $9C7B      ;
 $974E JR C,$9776      ;
 $9750 CALL $9BCA      ;
 $9753 BIT 6,(IX+$07)  ;
 $9757 JR Z,$9776      ;
 $9759 LD A,($C122)    ;
 $975C BIT 7,A         ;
 $975E JR Z,$9776      ;
 $9760 LD L,(IY+$08)   ;
 $9763 LD H,(IY+$09)   ;
 $9766 PUSH HL         ;
 $9767 LD L,(IX+$08)   ;
 $976A LD H,(IX+$09)   ;
 $976D PUSH HL         ;
 $976E LD HL,$AFE4     ; #REGhl=#R$AFE4("[0x04] is carrying[0x04][0x15]").
 $9771 CALL $72DD      ; Call #R$72DD.
 $9774 OR $01          ;
*$9776 POP BC          ;
 $9777 POP IY          ;
 $9779 POP IX          ;
 $977B RET             ;
; This entry point is used by the routine at #R$A302.
*$977C LD A,($B6E8)    ;
; This entry point is used by the routines at #R$9076, #R$9171, #R$A302 and
; #R$A541.
*$977F AND A           ;
 $9780 JP Z,$90D2      ;
 $9783 PUSH BC         ;
 $9784 PUSH IY         ;
 $9786 PUSH IX         ;
 $9788 LD C,A          ;
 $9789 CALL $9BCA      ;
 $978C SET 3,(IX+$07)  ;
 $9790 CALL $9D53      ;
 $9793 LD A,C          ;
 $9794 CALL $9A85      ;
 $9797 CP $FF          ;
 $9799 LD A,C          ;
 $979A JR Z,$97A0      ;
 $979C LD (IY+$00),$00 ;
*$97A0 CALL $A18C      ;
 $97A3 LD A,C          ;
 $97A4 CALL $7F60      ;
 $97A7 POP IX          ;
 $97A9 POP IY          ;
 $97AB POP BC          ;
 $97AC RET             ;
; This entry point is used by the routine at #R$6C00.
*$97AD SUB A           ;
 $97AE LD ($B6EA),A    ;
 $97B1 LD ($B6F1),A    ;
 $97B4 LD ($B6F9),A    ;
 $97B7 LD HL,$C11B     ;
 $97BA LD ($B70C),HL   ;
 $97BD LD A,$04        ;
 $97BF CALL $9C9F      ;
 $97C2 INC A           ;
 $97C3 LD B,A          ;
 $97C4 LD IY,$C808     ;
 $97C8 LD DE,$0006     ;
*$97CB ADD IY,DE       ;
 $97CD DJNZ $97CB      ;
 $97CF LD ($A7D1),IY   ;
 $97D3 LD L,(IY+$01)   ;
 $97D6 LD H,(IY+$02)   ;
 $97D9 LD B,$03        ;
*$97DB LD (HL),$00     ;
 $97DD INC HL          ;
 $97DE DJNZ $97DB      ;
 $97E0 LD A,$03        ;
 $97E2 CALL $9C9F      ;
 $97E5 LD E,A          ;
 $97E6 LD D,$00        ;
 $97E8 SLA E           ;
 $97EA SLA E           ;
 $97EC LD HL,$C7FC     ;
 $97EF ADD HL,DE       ;
 $97F0 LD ($B6EE),HL   ;
 $97F3 RET             ;
; This entry point is used by the routine at #R$A541.
*$97F4 CALL $72DD      ;
 $97F7 LD A,$2E        ;
 $97F9 CALL $858B      ;
 $97FC JP $8583        ;
; This entry point is used by the routines at #R$A302, #R$A3E6 and #R$A541.
*$97FF PUSH BC         ;
 $9800 LD BC,($B6FA)   ;
 $9804 LD A,C          ;
 $9805 AND B           ;
 $9806 JR NZ,$9809     ;
 $9808 POP BC          ;
*$9809 POP BC          ;
 $980A RET             ;
 $980B NOP             ;
 $980C NOP             ;
 $980D NOP             ;
*$980E CALL $9B02      ;
 $9811 LD IY,$CACB     ;
*$9815 XOR A           ;
 $9816 LD ($980B),A    ;
 $9819 LD A,(IY+$00)   ;
 $981C CP $FF          ;
 $981E JP Z,$9909      ;
 $9821 CP $00          ;
 $9823 JP Z,$9901      ;
 $9826 LD ($B6EA),A    ;
 $9829 CALL $9F82      ;
 $982C LD ($B70C),IX   ;
 $9830 LD ($B6F6),A    ;
 $9833 SUB A           ;
 $9834 LD ($B702),A    ;
 $9837 LD A,(IY+$00)   ;
 $983A PUSH IY         ;
 $983C LD IY,$C11B     ;
 $9840 CALL $9E25      ;
 $9843 POP IY          ;
 $9845 JR Z,$9868      ;
 $9847 LD A,($980C)    ;
 $984A CP $02          ;
 $984C JR Z,$9868      ;
 $984E LD A,$01        ;
 $9850 LD ($B702),A    ;
 $9853 LD A,($980C)    ;
 $9856 CP $01          ;
 $9858 JR NZ,$9868     ;
 $985A INC A           ;
 $985B LD ($980C),A    ;
 $985E LD HL,$B027     ;
 $9861 CALL $72DD      ;
 $9864 SUB A           ;
 $9865 LD ($B702),A    ;
*$9868 LD A,$FF        ;
 $986A CP (IX+$01)     ;
 $986D JP NZ,$9B16     ;
; This entry point is used by the routine at #R$9B16.
*$9870 LD IX,($B70C)   ;
 $9874 CALL $7F10      ;
 $9877 LD A,$00        ;
 $9879 JR NZ,$987C     ;
 $987B INC A           ;
*$987C LD ($B6F4),A    ;
*$987F LD L,(IY+$02)   ;
 $9882 LD H,(IY+$03)   ;
*$9885 LD A,($980B)    ;
 $9888 CP $06          ;
 $988A JR Z,$9901      ;
 $988C LD A,(HL)       ;
 $988D LD DE,$0004     ;
 $9890 PUSH HL         ;
 $9891 POP IX          ;
 $9893 AND $0F         ;
 $9895 CP $05          ;
 $9897 JR NC,$98CB     ;
 $9899 LD A,($B6F4)    ;
 $989C CP $01          ;
 $989E JR NZ,$98BF     ;
 $98A0 BIT 6,(HL)      ;
 $98A2 JR NZ,$98BF     ;
 $98A4 SUB A           ;
 $98A5 LD ($B6F4),A    ;
 $98A8 INC A           ;
 $98A9 CALL $7F1A      ;
 $98AC JR Z,$98BF      ;
 $98AE LD A,$01        ;
 $98B0 LD ($B6FA),A    ;
 $98B3 LD ($B6FB),A    ;
 $98B6 LD HL,$9901     ;
 $98B9 PUSH HL         ;
 $98BA PUSH IX         ;
 $98BC JP $99CE        ;
*$98BF LD A,(HL)       ;
 $98C0 AND $0F         ;
 $98C2 CP $04          ;
 $98C4 JP Z,$9974      ;
 $98C7 JR C,$9928      ;
 $98C9 JR $9901        ;
*$98CB CP $0E          ;
 $98CD JR NZ,$98DD     ;
 $98CF LD E,(IX+$01)   ;
 $98D2 LD (IY+$02),E   ;
 $98D5 LD E,(IX+$02)   ;
 $98D8 LD (IY+$03),E   ;
 $98DB JR $987F        ;
*$98DD CP $0C          ;
 $98DF JR NZ,$98EC     ;
 $98E1 LD B,(IX+$01)   ;
 $98E4 LD A,(IY+$00)   ;
 $98E7 CALL $9AA0      ;
 $98EA JR $987F        ;
*$98EC CP $0F          ;
 $98EE JR NZ,$98F5     ;
 $98F0 CALL $9A59      ;
 $98F3 JR $987F        ;
*$98F5 CP $00          ;
 $98F7 JR NZ,$98FC     ;
 $98F9 ADD HL,DE       ;
 $98FA JR $9885        ;
*$98FC SUB A           ;
 $98FD LD E,A          ;
 $98FE CALL $9A68      ;
; This entry point is used by the routine at #R$9B16.
*$9901 LD DE,$0007     ;
 $9904 ADD IY,DE       ;
 $9906 JP $9815        ;
*$9909 SUB A           ;
 $990A LD ($B6EA),A    ;
 $990D INC A           ;
 $990E LD ($B702),A    ;
 $9911 LD HL,$C11B     ;
 $9914 LD ($B70C),HL   ;
 $9917 RET             ;
*$9918 ADD HL,DE       ;
 $9919 BIT 4,(IX+$00)  ;
 $991D JR Z,$9921      ;
 $991F INC HL          ;
 $9920 INC HL          ;
*$9921 LD (IY+$02),L   ;
 $9924 LD (IY+$03),H   ;
 $9927 RET             ;
*$9928 CALL $9918      ;
 $992B BIT 0,(IX+$00)  ;
 $992F JR NZ,$994A     ;
 $9931 LD A,(IX+$01)   ;
 $9934 LD ($B6E7),A    ;
 $9937 LD A,(IX+$02)   ;
 $993A LD ($B6E8),A    ;
 $993D LD A,(IX+$03)   ;
 $9940 LD ($B6E9),A    ;
 $9943 CALL $99C6      ;
 $9946 JR Z,$99AA      ;
 $9948 JR $9967        ;
*$994A LD L,(IX+$01)   ;
 $994D LD H,(IX+$02)   ;
 $9950 SUB A           ;
 $9951 LD ($B6FA),A    ;
 $9954 LD ($B6FB),A    ;
 $9957 CALL $9B6C      ;
 $995A LD A,($B6FB)    ;
 $995D CP $01          ;
 $995F JR NZ,$99AA     ;
 $9961 LD ($B6FA),A    ;
 $9964 CALL $9B6C      ;
*$9967 BIT 5,(IX+$00)  ;
 $996B JP Z,$9901      ;
 $996E LD (IX+$00),$00 ;
 $9972 JR $9901        ;
*$9974 LD DE,$0002     ;
 $9977 CALL $9918      ;
 $997A LD A,(IX+$01)   ;
 $997D CP $FF          ;
 $997F JR Z,$9994      ;
 $9981 LD ($B6E7),A    ;
 $9984 LD A,$FF        ;
 $9986 LD ($B6E8),A    ;
 $9989 LD ($B6E9),A    ;
 $998C CALL $99C6      ;
 $998F JR Z,$99AA      ;
 $9991 JP $9901        ;
*$9994 BIT 4,(IX+$00)  ;
 $9998 JP Z,$9901      ;
 $999B LD L,(IX+$02)   ;
 $999E LD H,(IX+$03)   ;
 $99A1 LD (IY+$02),L   ;
 $99A4 LD (IY+$03),H   ;
 $99A7 JP $9901        ;
*$99AA LD HL,$980B     ;
 $99AD INC (HL)        ;
 $99AE BIT 4,(IX+$00)  ;
 $99B2 JP Z,$987F      ;
 $99B5 ADD IX,DE       ;
 $99B7 LD H,(IX+$01)   ;
 $99BA LD L,(IX+$00)   ;
 $99BD LD (IY+$02),L   ;
 $99C0 LD (IY+$03),H   ;
 $99C3 JP $9885        ;
; This entry point is used by the routine at #R$9B16.
*$99C6 PUSH IX         ;
 $99C8 CALL $7AF5      ;
 $99CB JP Z,$9A56      ;
*$99CE LD A,($B6FE)    ;
 $99D1 CP $01          ;
 $99D3 JR Z,$9A32      ;
 $99D5 LD A,($B6E7)    ;
 $99D8 CP $1E          ;
 $99DA JR NZ,$99E5     ;
 $99DC LD A,($B6F6)    ;
 $99DF LD HL,$C12B     ;
 $99E2 CP (HL)         ;
 $99E3 JR NZ,$9A32     ;
*$99E5 LD A,($B6E8)    ;
 $99E8 CP $FF          ;
 $99EA JR Z,$9A2B      ;
 $99EC CALL $9F82      ;
 $99EF LD ($980D),A    ;
 $99F2 CP $FF          ;
 $99F4 JR NZ,$9A2B     ;
 $99F6 LD BC,($B6F5)   ;
 $99FA LD A,C          ;
 $99FB CP B            ;
 $99FC JR Z,$9A2B      ;
 $99FE LD B,(IX+$00)   ;
*$9A01 CP (IX+$10)     ;
 $9A04 JR Z,$9A0C      ;
 $9A06 INC IX          ;
 $9A08 DJNZ $9A01      ;
 $9A0A JR $9A2B        ;
*$9A0C LD A,($B6EA)    ;
 $9A0F LD B,A          ;
 $9A10 LD A,$FF        ;
 $9A12 LD ($B6EA),A    ;
 $9A15 LD A,$01        ;
 $9A17 LD ($B702),A    ;
 $9A1A PUSH IY         ;
 $9A1C CALL $712B      ;
 $9A1F POP IY          ;
 $9A21 SUB A           ;
 $9A22 LD ($B702),A    ;
 $9A25 LD A,B          ;
 $9A26 LD ($B6EA),A    ;
 $9A29 JR $9A32        ;
*$9A2B PUSH IY         ;
 $9A2D CALL $712B      ;
 $9A30 POP IY          ;
*$9A32 CALL $950F      ;
 $9A35 LD A,($B6EA)    ;
 $9A38 LD HL,$B6F6     ;
 $9A3B LD DE,$B017     ;
 $9A3E CALL $9ACD      ;
 $9A41 LD A,($B6FE)    ;
 $9A44 CP $01          ;
 $9A46 JR Z,$9A54      ;
 $9A48 LD A,($B6E8)    ;
 $9A4B LD HL,$980D     ;
 $9A4E LD DE,$B01C     ;
 $9A51 CALL $9ACD      ;
*$9A54 OR $01          ;
*$9A56 POP IX          ;
 $9A58 RET             ;
*$9A59 LD A,(IX+$01)   ;
 $9A5C CP (IY+$01)     ;
 $9A5F JR C,$9A64      ;
 $9A61 LD A,(IY+$01)   ;
*$9A64 CALL $9C9F      ;
 $9A67 LD E,A          ;
*$9A68 LD A,(IY+$01)   ;
 $9A6B CP E            ;
 $9A6C JR NC,$9A6F     ;
 $9A6E LD E,A          ;
*$9A6F LD L,(IY+$04)   ;
 $9A72 LD H,(IY+$05)   ;
 $9A75 LD D,$00        ;
 $9A77 ADD HL,DE       ;
 $9A78 ADD HL,DE       ;
 $9A79 ADD HL,DE       ;
 $9A7A INC HL          ;
 $9A7B LD E,(HL)       ;
 $9A7C INC HL          ;
 $9A7D LD D,(HL)       ;
 $9A7E LD (IY+$02),E   ;
 $9A81 LD (IY+$03),D   ;
 $9A84 RET             ;

; Routine at 9A85
;
; Used by the routines at #R$9034 and #R$96B3.
;
; A The index to search for
c$9A85 PUSH DE       ; {Stash #REGde and #REGbc on the stack.
 $9A86 PUSH BC       ; }
 $9A87 LD B,A        ; #REGb=#REGa (search key).
 $9A88 LD HL,$CACB   ; #REGhl=#R$CACB.
 $9A8B LD DE,$0007   ; #REGde=$0007.
*$9A8E LD A,(HL)     ; {If the current pointer matches our key jump to #R$9A9A.
 $9A8F CP B          ;
 $9A90 JR Z,$9A9A    ; }
 $9A92 CP $FF        ; {If we've reached the termination character then jump to
 $9A94 JR Z,$9A9A    ; #R$9A9A.}
 $9A96 ADD HL,DE     ; Increase the pointer address by $0007 (using #REGde).
 $9A97 JP $9A8E      ; Jump to #R$9A8E.
*$9A9A POP BC        ; {Restore #REGbc and #REGde from the stack.
 $9A9B POP DE        ; }
 $9A9C PUSH HL       ; {#REGiy=#REGhl.
 $9A9D POP IY        ; }
 $9A9F RET           ; Return.
; This entry point is used by the routines at #R$93DA and #R$96B3.
*$9AA0 PUSH IY       ; {Store #REGiy and #REGix on the stack.
 $9AA2 PUSH IX       ; }
 $9AA4 CALL $9A85    ; Call #R$9A85.
 $9AA7 CP $FF        ; {Jump to #R$9AC8 if the termination character was
 $9AA9 JR Z,$9AC8    ; reached.}
 $9AAB LD L,(IY+$04) ; {#REGhl=
 $9AAE LD H,(IY+$05) ; }
 $9AB1 PUSH HL       ; {#REGix=#REGhl.
 $9AB2 POP IX        ; }
 $9AB4 LD A,B        ;
 $9AB5 CALL $9DBD    ; Call #R$9DBD.
 $9AB8 CP $FF        ; {Jump to #R$9AC8 if the termination character was
 $9ABA JR Z,$9AC8    ; reached.}
 $9ABC LD L,(IX+$01) ; {Store ... TODO
 $9ABF LD H,(IX+$02) ;
 $9AC2 LD (IY+$02),L ;
 $9AC5 LD (IY+$03),H ; }
*$9AC8 POP IX        ; {Restore #REGix and #REGiy from the stack.
 $9ACA POP IY        ; }
 $9ACC RET           ; Return.

; Routine at 9ACD
;
; Used by the routine at #R$96B3.
c$9ACD CP $FF        ;
 $9ACF RET Z         ;
 $9AD0 AND A         ;
 $9AD1 RET Z         ;
 $9AD2 LD B,A        ;
 $9AD3 LD A,($980C)  ;
 $9AD6 CP $02        ;
 $9AD8 RET Z         ;
 $9AD9 LD A,B        ;
 $9ADA CALL $9F82    ;
 $9ADD LD C,A        ;
 $9ADE CP (HL)       ;
 $9ADF RET Z         ;
 $9AE0 LD A,($B6F5)  ;
 $9AE3 CP C          ;
 $9AE4 RET NZ        ;
 $9AE5 LD A,($9BDC)  ;
 $9AE8 AND A         ;
 $9AE9 RET Z         ;
 $9AEA LD A,$01      ;
 $9AEC LD ($B702),A  ;
 $9AEF PUSH DE       ;
 $9AF0 POP HL        ;
 $9AF1 LD A,B        ;
 $9AF2 CALL $9BCA    ;
 $9AF5 PUSH DE       ;
 $9AF6 LD DE,$0008   ;
 $9AF9 ADD IX,DE     ;
 $9AFB POP DE        ;
 $9AFC PUSH IX       ;
 $9AFE CALL $72DD    ;
 $9B01 RET           ;

; Action None
;
; Used by the routines at #R$96B3 and #R$9BDC.
@label=Action_None
c$9B02 LD A,$00      ; {Call #R$9F82 using #REGa=$00 #R$C11B("#TEXTTOKEN($C11B
 $9B04 CALL $9F82    ; + $08, 1)").}
 $9B07 LD ($B6F5),A  ; Write #REGa to #R$B6F5.
 $9B0A CALL $95ED    ; Call #R$95ED.
 $9B0D LD A,$00      ; #REGa=$00.
 $9B0F JR NC,$9B12   ; If it is light jump to #R$9B12.
 $9B11 INC A         ; #REGa=$01.
*$9B12 LD ($980C),A  ; Write #REGa to #R$980C.
 $9B15 RET           ; Return.

; Routine at 9B16
;
; Used by the routine at #R$96B3.
c$9B16 LD A,$FF       ;
 $9B18 LD ($B6E9),A   ;
 $9B1B LD A,(IX+$01)  ;
 $9B1E LD ($B6E8),A   ;
 $9B21 CALL $9BCA     ;
 $9B24 BIT 3,(IX+$07) ;
 $9B28 JP NZ,$9870    ;
 $9B2B BIT 6,(IX+$07) ;
 $9B2F JP NZ,$9870    ;
 $9B32 BIT 5,(IX+$07) ;
 $9B36 JP Z,$9901     ;
 $9B39 LD A,$37       ;
 $9B3B LD ($B6E7),A   ;
 $9B3E CALL $99C6     ;
 $9B41 JP $9901       ;
; This entry point is used by the routine at #R$93DA.
*$9B44 LD A,($B6E8)   ;
 $9B47 INC A          ;
 $9B48 JR NZ,$9B4C    ;
 $9B4A INC A          ;
 $9B4B RET            ;
*$9B4C LD A,($B6FE)   ;
 $9B4F AND A          ;
 $9B50 JR NZ,$9B5F    ;
 $9B52 LD HL,$B6E8    ;
 $9B55 LD A,($B6EA)   ;
 $9B58 CP (HL)        ;
 $9B59 RET Z          ;
 $9B5A LD A,($B6E9)   ;
 $9B5D CP (HL)        ;
 $9B5E RET Z          ;
*$9B5F LD A,($B6FF)   ;
 $9B62 AND A          ;
 $9B63 RET NZ         ;
 $9B64 LD A,($B6E9)   ;
 $9B67 LD HL,$B6EA    ;
 $9B6A CP (HL)        ;
 $9B6B RET            ;

; Execute Action.
;
; Used by the routines at #R$8D9D, #R$93DA, #R$96B3 and #R$9F4A.
;
; HL Pointer to the action code
@label=TriggerAction
c$9B6C PUSH IX       ; {Stash #REGix, #REGiy, #REGde, #REGbc and #REGhl on the
 $9B6E PUSH IY       ; stack.
 $9B70 PUSH DE       ;
 $9B71 PUSH BC       ;
 $9B72 PUSH HL       ; }
 $9B73 LD A,L        ; {Call #R$9B80 if #REGhl is not empty (i.e. $0000).
 $9B74 OR H          ;
 $9B75 CALL NZ,$9B80 ; }
 $9B78 POP HL        ; {Restore #REGhl, #REGbc, #REGde, #REGiy and #REGix from
 $9B79 POP BC        ; the stack.
 $9B7A POP DE        ;
 $9B7B POP IY        ;
 $9B7D POP IX        ; }
 $9B7F RET           ; Return.
@label=TriggerAction_Jump
*$9B80 JP (HL)       ; Indirect jump to the address held in #REGhl.

; Routine at 9B81
;
; Used by the routines at #R$9171 and #R$93DA.
c$9B81 PUSH DE       ;
 $9B82 LD D,A        ;
 $9B83 LD A,(IX+$00) ;
 $9B86 ADD A,$10     ;
 $9B88 LD E,A        ;
 $9B89 LD A,D        ;
 $9B8A LD D,$00      ;
 $9B8C ADD IX,DE     ;
 $9B8E CALL $9DBD    ;
 $9B91 POP DE        ;
 $9B92 RET           ;

; Step Into 3ByteTable
;
; Used by the routines at #R$9BA9, #R$9C41, #R$9DD9, #R$9EA0, #R$9F08 and
; #R$9F25.
;
;   IX Pointer to the record data
; O:A The record ID
; O:IY The record data
@label=Step3ByteTable
c$9B93 EXX           ; Exchange registers.
 $9B94 LD DE,$0003   ; {Move onto the next record #REGix=#REGix+$0003.
 $9B97 ADD IX,DE     ; }
 $9B99 LD D,(IX+$02) ; {#REGiy=load the record.
 $9B9C LD E,(IX+$01) ;
 $9B9F PUSH DE       ;
 $9BA0 POP IY        ; }
 $9BA2 LD A,(IX+$00) ; #REGa=the record ID.
 $9BA5 CP $FF        ; Set flag if this is the termination character ($FF).
 $9BA7 EXX           ; Exchange registers.
 $9BA8 RET           ; Return.

; Wrapper Around Step3ByteTable.
;
; Used by the routines at #R$9BDC, #R$9CE8, #R$9D44, #R$9D97, #R$9F94 and
; #R$A138.
;
;   IX Pointer to 3 byte table data
; O:IX Pointer moved to the next record
; O:IY Contents of the record
@label=Step3ByteTable_Next
c$9BA9 PUSH BC       ; Store #REGbc on the stack.
 $9BAA LD B,A        ; Store #REGa in register #REGb so it's not overwritten by
                     ; the following CALL instruction.
 $9BAB CALL $9B93    ; Call #R$9B93.
 $9BAE LD A,B        ; Restore the previous value of #REGa.
 $9BAF POP BC        ; Restore #REGbc off the stack.
 $9BB0 RET           ; Return.

; Locate Location
;
; Used by the routines at #R$70F3, #R$8D9D, #R$962B, #R$9C41, #R$9D37, #R$9EA0,
; #R$A0AE and #R$A541.
;
;   A Location ID
; O:IX Pointer to #R$BA8A(location data)
@label=LocateLocation
c$9BB1 CP $50        ; {If the location ID is less than $50 jump to #R$9BB7 to
 $9BB3 JR C,$9BB7    ; process it.}
 $9BB5 XOR A         ; Reset #REGa to $00.
 $9BB6 RET           ; Return.
; Work out the location now #REGa is validated as a legitimate location ID.
@label=LocateLocation_Action
*$9BB7 PUSH DE       ; Stash #REGde on the stack.
 $9BB8 LD DE,$B9E0   ; #REGde=#R$B9E0
 $9BBB PUSH HL       ; Stash #REGhl on the stack.
 $9BBC LD L,A        ; {Store offset in the #REGhl register pair.
 $9BBD LD H,$00      ; }
; Calculate Location address, some examples would be;
; #TABLE(default,centre,centre,centre,centre)
; { =h Location ID | =h Sum | =h Location Table Entry | =h Location Data }
; { #LET(id=$05) #N({id}, 2, 3, 1, 1)($) | (#N({id}, 2, 3, 1, 1)($) * 2) + #N($B9E0, 2, 3, 1, 1)($) | #R(#EVAL($B9E0 + {id} * 2)) | #R(#EVAL(#PEEK(#EVAL($B9E0 + {id} * 2)) + #EVAL(#PEEK(#EVAL($B9E1 + {id} * 2)) * 256))) }
; { #LET(id=$20) #N({id}, 2, 3, 1, 1)($) | (#N({id}, 2, 3, 1, 1)($) * 2) + #N($B9E0, 2, 3, 1, 1)($) | #R(#EVAL($B9E0 + {id} * 2)) | #R(#EVAL(#PEEK(#EVAL($B9E0 + {id} * 2)) + #EVAL(#PEEK(#EVAL($B9E1 + {id} * 2)) * 256))) }
; { #LET(id=$33) #N({id}, 2, 3, 1, 1)($) | (#N({id}, 2, 3, 1, 1)($) * 2) + #N($B9E0, 2, 3, 1, 1)($) | #R(#EVAL($B9E0 + {id} * 2)) | #R(#EVAL(#PEEK(#EVAL($B9E0 + {id} * 2)) + #EVAL(#PEEK(#EVAL($B9E1 + {id} * 2)) * 256))) }
; TABLE#
 $9BBF ADD HL,HL     ; {#REGhl=(#REGhl*2)+#REGde
 $9BC0 ADD HL,DE     ; }
 $9BC1 LD E,(HL)     ; {#REGde=the location from the pointer in #REGhl.
 $9BC2 INC HL        ;
 $9BC3 LD D,(HL)     ; }
 $9BC4 PUSH DE       ; {#REGix=#REGde using the stack.
 $9BC5 POP IX        ; }
 $9BC7 POP HL        ; {Restore #REGhl and #REGde off the stack.
 $9BC8 POP DE        ; }
 $9BC9 RET           ; Return.

; Locate Object
;
; Used by the routines at #R$70F3, #R$8C4B, #R$8D33, #R$8D9D, #R$9171, #R$93DA,
; #R$96B3, #R$9ACD, #R$9B16, #R$9C78, #R$9D44, #R$9E7A, #R$9F82, #R$A050,
; #R$A0C8, #R$A138 and #R$A541.
;
;   A Object ID
; O:IX The object data address from #R$C11B
;
; Locates an object from a given object ID.
@label=LocateObject
c$9BCA LD IX,$C063   ; #REGix=#R$C063(the start address of the object table).
 $9BCE CALL $9DBD    ; Call #R$9DBD to locate the object.
 $9BD1 PUSH HL       ; Stash #REGhl on the stack.
 $9BD2 LD L,(IX+$01) ; {#REGhl=the corresponding object address from the object
 $9BD5 LD H,(IX+$02) ; table.}
 $9BD8 EX (SP),HL    ; {#REGix=#REGhl and restore the old value of #REGhl from
 $9BD9 POP IX        ; the stack.}
 $9BDB RET           ; Return.

; Routine at 9BDC
c$9BDC DEFB $FF      ;
; This entry point is used by the routines at #R$8D9D, #R$939E, #R$93DA,
; #R$A3E6 and #R$A541.
*$9BDD LD HL,$9BDC   ;
 $9BE0 LD (HL),$01   ;
 $9BE2 CALL $9C17    ;
 $9BE5 LD A,(HL)     ;
 $9BE6 AND A         ;
 $9BE7 RET NZ        ;
 $9BE8 PUSH HL       ;
 $9BE9 LD A,($C12B)  ;
 $9BEC AND A         ;
 $9BED JR Z,$9C13    ;
 $9BEF LD A,($B6EA)  ;
 $9BF2 PUSH AF       ;
 $9BF3 LD HL,($B70C) ;
 $9BF6 PUSH HL       ;
 $9BF7 LD HL,$C11B   ;
 $9BFA LD ($B70C),HL ;
 $9BFD XOR A         ;
 $9BFE LD ($B6EA),A  ;
 $9C01 LD A,B        ;
 $9C02 LD ($8D9B),A  ;
 $9C05 CALL $8E12    ;
 $9C08 CALL $9B02    ;
 $9C0B POP HL        ;
 $9C0C LD ($B70C),HL ;
 $9C0F POP AF        ;
 $9C10 LD ($B6EA),A  ;
*$9C13 POP HL        ;
 $9C14 XOR A         ;
 $9C15 LD (HL),A     ;
 $9C16 RET           ;
*$9C17 PUSH IY       ;
 $9C19 PUSH IX       ;
 $9C1B LD IX,$C060   ;
*$9C1F CALL $9BA9    ;
 $9C22 JR Z,$9C3C    ;
 $9C24 CP (IY+$01)   ;
 $9C27 JR NZ,$9C1F   ;
 $9C29 LD (IY+$10),B ;
 $9C2C PUSH AF       ;
 $9C2D LD A,(IX+$00) ;
 $9C30 AND A         ;
 $9C31 JR NZ,$9C36   ;
 $9C33 LD ($9BDC),A  ;
*$9C36 CALL $9C17    ;
 $9C39 POP AF        ;
 $9C3A JR $9C1F      ;
*$9C3C POP IX        ;
 $9C3E POP IY        ;
 $9C40 RET           ;

; Routine at 9C41
;
; Used by the routine at #R$8D9D.
c$9C41 PUSH IX       ; {Stash #REGix, #REGiy and #REGbc on the stack.
 $9C43 PUSH IY       ;
 $9C45 PUSH BC       ; }
 $9C46 LD B,A        ; Stash #REGa in the #REGb register temporarily so it
                     ; doesn't get overwritten.
 $9C47 CALL $9BB1    ; Call #R$9BB1.
 $9C4A LD A,(IX+$01) ;
 $9C4D LD C,A        ; Stash #REGa in the #REGc register temporarily so it
                     ; doesn't get overwritten.
 $9C4E LD IX,$C060   ; Set #REGix to $C060 which is 3 bytes less than the start of the #R$C063(object table) due to the following
                     ;           line adding $0003 and moving us on to the first record.
*$9C52 CALL $9B93    ; Call #R$9B93.
 $9C55 JR Z,$9C6D    ; Jump to #R$9C6D if we've reached the end of the object
                     ; data.
 $9C57 LD A,(IY+$00) ; {If the TODO is not $01 (TODO), then loop back round to
 $9C5A CP $01        ; #R$9C52 to move onto the next record.
 $9C5C JR NZ,$9C52   ; }
; Success! We've found a record which matches $01 (TODO).
 $9C5E LD A,B        ; Restore the previous value of #REGa from the #REGb
                     ; register.
 $9C5F CP (IY+$10)   ;
 $9C62 JR NZ,$9C52   ;
 $9C64 LD A,C        ;
 $9C65 SUB (IY+$02)  ;
 $9C68 JR C,$9C74    ;
 $9C6A LD C,A        ;
 $9C6B JR $9C52      ; Jump to #R$9C52.
*$9C6D LD A,C        ; Restore the previous value of #REGa from the #REGc
                     ; register.
 $9C6E POP BC        ; {Restore #REGbc, #REGiy and #REGix from the stack.
 $9C6F POP IY        ;
 $9C71 POP IX        ; }
 $9C73 RET           ; Return.
*$9C74 LD C,$00      ;
 $9C76 JR $9C6D      ; Jump to #R$9C6D.

; Routine at 9C78
;
; Used by the routines at #R$8C4B, #R$8D33, #R$939E, #R$93DA and #R$A248.
c$9C78 LD A,($B6E8)  ;
; This entry point is used by the routines at #R$9076, #R$93DA and #R$96B3.
*$9C7B LD HL,$B6EA   ;
; This entry point is used by the routine at #R$8CA6.
*$9C7E CP $FF        ;
 $9C80 SCF           ;
 $9C81 RET Z         ;
 $9C82 PUSH IX       ;
 $9C84 CALL $9C8A    ;
 $9C87 POP IX        ;
 $9C89 RET           ;
*$9C8A CALL $9BCA    ;
 $9C8D PUSH AF       ;
 $9C8E LD A,(IX+$01) ;
 $9C91 CP $FF        ;
 $9C93 JR Z,$9C9C    ;
 $9C95 POP IX        ;
 $9C97 CP (HL)       ;
 $9C98 JR NZ,$9C8A   ;
 $9C9A SCF           ;
 $9C9B RET           ;
*$9C9C POP AF        ;
 $9C9D AND A         ;
 $9C9E RET           ;

; Random Number
;
; Used by the routines at #R$8D9D, #R$8FAD, #R$9034, #R$9076, #R$96B3, #R$A302,
; #R$A3E6 and #R$A541.
;
;   A Random seed?
; O:A Random number
@label=GetRandomNum
c$9C9F CALL $9CA8     ; Call #R$9CA8.
 $9CA2 BIT 7,A        ; {Return if bit 7 is set.
 $9CA4 RET Z          ; }
 $9CA5 NEG            ; Negate the accumulator.
 $9CA7 RET            ; Return.
; This entry point is used by the routine at #R$9171.
@label=CalcRandom
*$9CA8 PUSH IX        ; {Stash #REGix and #REGbc on the stack.
 $9CAA PUSH BC        ; }
 $9CAB LD C,A         ; #REGc=#REGa.
 $9CAC SLA A          ; #REGa=#REGa * 2.
 $9CAE JR NC,$9CB2    ; Jump to #R$9CB2 if there's no carry over.
 $9CB0 LD A,$FF       ; Else, set #REGa=#N$FF.
*$9CB2 LD B,A         ; #REGb=#REGa.
*$9CB3 LD IX,$B712    ; {Increase the LSB of the #R$B712 by one.
 $9CB7 INC (IX+$01)   ; }
 $9CBA JR NZ,$9CBF    ; If the LSB has not "rolled over" to $00, skip updating
                      ; the MSB on the following line. Jump to #R$9CB2.
 $9CBC INC (IX+$00)   ; Increase the MSB of the #R$B712 by one.
*$9CBF LD IX,($B712)  ; #REGix=#R$B712.
 $9CC3 LD A,($B70E)   ; #REGa=#R$B70E.
 $9CC6 ADC A,(IX+$00) ;
 $9CC9 ADD IX,DE      ;
 $9CCB XOR (IX+$01)   ;
 $9CCE PUSH HL        ; Stash #REGhl on the stack.
 $9CCF LD HL,$B70E    ; {Compare #R$B70E against #REGa.
 $9CD2 CP (HL)        ; }
 $9CD3 POP HL         ; Restore #REGhl from the stack.
 $9CD4 JR Z,$9CB3     ; If the result of the comparison was zero, jump back to
                      ; #R$9CB3 to try again.
 $9CD6 LD ($B70E),A   ; Write #REGa to #R$B70E.
*$9CD9 CP B           ;
 $9CDA JR C,$9CE3     ;
 $9CDC JR Z,$9CE3     ;
 $9CDE SRL A          ;
 $9CE0 JP $9CD9       ;
*$9CE3 SUB C          ;
 $9CE4 POP BC         ; {Restore #REGbc and #REGix from the stack.
 $9CE5 POP IX         ; }
 $9CE7 RET            ; Return.

; Routine at 9CE8
;
; Used by the routines at #R$8D9D, #R$9171 and #R$A541.
c$9CE8 PUSH BC        ;
 $9CE9 LD B,$01       ;
 $9CEB JR $9CF0       ;
; This entry point is used by the routines at #R$8CA6 and #R$939E.
*$9CED PUSH BC        ;
 $9CEE LD B,$00       ;
*$9CF0 PUSH IX        ;
 $9CF2 PUSH IY        ;
 $9CF4 LD C,$00       ;
 $9CF6 CALL $9D00     ;
 $9CF9 LD A,C         ;
 $9CFA POP IY         ;
 $9CFC POP IX         ;
 $9CFE POP BC         ;
 $9CFF RET            ;
*$9D00 PUSH IX        ;
 $9D02 LD IX,$C063    ;
*$9D06 CALL $9BA9     ;
 $9D09 JR Z,$9D2F     ;
 $9D0B CP (IY+$01)    ;
 $9D0E JR NZ,$9D06    ;
 $9D10 PUSH AF        ;
 $9D11 SUB A          ;
 $9D12 CP B           ;
 $9D13 LD A,C         ;
 $9D14 JR Z,$9D1F     ;
 $9D16 ADD A,(IY+$02) ;
 $9D19 JP PE,$9D32    ;
 $9D1C LD C,A         ;
 $9D1D JR $9D2C       ;
*$9D1F ADD A,(IY+$03) ;
 $9D22 JP PE,$9D32    ;
 $9D25 LD C,A         ;
 $9D26 LD A,(IX+$00)  ;
 $9D29 CALL $9D00     ;
*$9D2C POP AF         ;
 $9D2D JR $9D06       ;
*$9D2F POP IX         ;
 $9D31 RET            ;
*$9D32 POP AF         ;
 $9D33 LD C,$FF       ;
 $9D35 JR $9D2F       ;

; Get Object Location In IX
;
; Used by the routines at #R$95ED and #R$9E95.
;
; O:IX The object location
@label=GetObjectLocationInIX
c$9D37 PUSH AF       ; Stash #REGaf on the stack.
 $9D38 LD IX,($B70C) ; {Fetch the location ID for the object held by #R$B70C.
 $9D3C LD A,(IX+$10) ; }
 $9D3F CALL $9BB1    ; Call #R$9BB1.
 $9D42 POP AF        ; Restore #REGaf off the stack.
 $9D43 RET           ; Return.

; Routine at 9D44
;
; Used by the routines at #R$8C4B, #R$8CA6, #R$8D33, #R$8D9D, #R$9034, #R$9076,
; #R$90EB, #R$910E, #R$9171, #R$939E, #R$93DA, #R$A248, #R$A2B4, #R$A302,
; #R$A3E6 and #R$A541.
c$9D44 LD A,($B6FA)    ; {If #R$B6FA is $01 then return.
 $9D47 CP $01          ;
 $9D49 RET Z           ; }
 $9D4A INC A           ; Increase TODO by one and write it to #R$B6FB.
 $9D4B LD ($B6FB),A    ;
 $9D4E POP BC          ;
 $9D4F RET             ; Return.
; This entry point is used by the routines at #R$9171 and #R$93DA.
*$9D50 LD A,($B6E8)    ; #REGa=#R$B6E8.
; This entry point is used by the routines at #R$96B3 and #R$A541.
*$9D53 PUSH IY         ; {Stash #REGiy, #REGix and #REGhl on the stack.
 $9D55 PUSH IX         ;
 $9D57 PUSH HL         ; }
 $9D58 CALL $9BCA      ; Call #R$9BCA.
 $9D5B LD B,(IX+$01)   ; #REGb=Mother object.
 $9D5E LD IX,$C060     ; Set #REGix to $C060 which is 3 bytes less than the start of the #R$C063(object table) due to the following
                       ;           line adding $0003 and moving us on to the first record.
*$9D62 CALL $9BA9      ; Call #R$9BA9.
 $9D65 JR Z,$9D91      ; Jump to #R$9D91 if TODO.
 $9D67 CP (IY+$01)     ; {Compare TODO, jump back to #R$9D62 if so.
 $9D6A JR NZ,$9D62     ; }
 $9D6C BIT 1,(IY+$07)  ;
 $9D70 JR Z,$9D8B      ;
 $9D72 PUSH AF         ;
 $9D73 LD (IY+$10),$00 ;
 $9D77 LD (IY+$01),$FF ;
 $9D7B RES 7,(IY+$07)  ;
 $9D7F CALL $9EC7      ; Call #R$9EC7.
 $9D82 LD HL,$B143     ; #REGhl=#R$B142("evaporate(s|d|ing|es)[0x15]").
 $9D85 CALL $72DD      ; Call #R$72DD.
 $9D88 POP AF          ;
 $9D89 JR $9D62        ; Jump to #R$9D62.
*$9D8B LD (IY+$01),B   ;
 $9D8E JP $9D62        ; Jump to #R$9D62.
*$9D91 POP HL          ; {Restore #REGhl, #REGix and #REGiy from the stack.
 $9D92 POP IX          ;
 $9D94 POP IY          ; }
 $9D96 RET             ; Return.

; Routine at 9D97
;
; Used by the routines at #R$90EB, #R$910E, #R$93DA, #R$A050 and #R$A248.
;
; O:A The number of objects
@label=ObjectCount
c$9D97 PUSH IX        ; {Stash #REGix, #REGiy and #REGbc on the stack.
 $9D99 PUSH IY        ;
 $9D9B PUSH BC        ; }
 $9D9C LD B,$00       ; Initialise the count of the number of objects.
 $9D9E LD IX,$C060    ; Set #REGix to $C060 which is 3 bytes less than the start of the #R$C063(object table) due to the following
                      ;           line adding $0003 and moving us on to the first record.
@label=ObjectCount_Loop
*$9DA2 CALL $9BA9     ; Call #R$9BA9 to fetch the next record in #REGiy.
 $9DA5 JR Z,$9DB6     ; Jump to #R$9DB6 if we've reached the end of the table
                      ; data.
 $9DA7 CP (IY+$01)    ; {Don't count this record if it's a "Mother Object", if
 $9DAA JR NZ,$9DA2    ; it is then loop back to #R$9DA2 to continue.}
 $9DAC BIT 7,(IY+$07) ; {Don't count this record if it's not "visible", if not
 $9DB0 JR Z,$9DA2     ; then loop back to #R$9DA2 to continue.}
 $9DB2 INC B          ; Increase #REGb, the object counter, by one.
 $9DB3 JP $9DA2       ; Jump to #R$9DA2.
@label=ObjectCount_End
*$9DB6 LD A,B         ; Store the object count in #REGa.
 $9DB7 POP BC         ; {Restore #REGbc, #REGiy and #REGix from the stack.
 $9DB8 POP IY         ;
 $9DBA POP IX         ; }
 $9DBC RET            ; Return.

; Index ID Table
;
; Used by the routines at #R$6C00, #R$7F78, #R$83A0, #R$8D9D, #R$93DA, #R$9A85,
; #R$9B81, #R$9BCA and #R$A541.
;
;   A Key ID
;   IX Address of table data
; O:IX The address in the table which matches the key ID
;
; Searches through what is essentially key value data to find a key match.
@label=IndexIdTable
c$9DBD EXX           ; Exchange registers.
 $9DBE PUSH IX       ; {#REGhl=#REGix (using the stack to do so).
 $9DC0 POP HL        ; }
 $9DC1 LD B,A        ; #REGb=key ID
 $9DC2 LD E,$03      ; {#REGde=$0003 as each record is 3 bytes of data.
 $9DC4 LD D,$00      ; }
; Begin searching the table.
@label=IndexIdTable_Loop
*$9DC6 LD A,(HL)     ; Grab the next ID.
 $9DC7 CP B          ; {If the key ID is the one we want, jump to #R$9DD2.
 $9DC8 JR Z,$9DD2    ; }
 $9DCA CP $FF        ; {If we've reached the termination character (key ID not
 $9DCC JR Z,$9DD2    ; found), jump to #R$9DD2.}
 $9DCE ADD HL,DE     ; {Add #REGde to #REGhl to check the next row, and jump
 $9DCF JP $9DC6      ; back to #R$9DC6 to continue checking.}
; Handle the output.
@label=IndexIdTable_Found
*$9DD2 PUSH HL       ; {#REGix=#REGhl (using the stack to do so).
 $9DD3 POP IX        ; }
 $9DD5 CP $FF        ; Set flags (checking if the key ID was not found).
 $9DD7 EXX           ; Exchange registers.
 $9DD8 RET           ; Return.

; Routine at 9DD9
;
; Used by the routine at #R$77D1.
c$9DD9 PUSH BC       ; {Stash #REGbc, #REGde and #REGiy on the stack.
 $9DDA PUSH DE       ;
 $9DDB PUSH IY       ; }
 $9DDD LD IY,($B70C) ;
 $9DE1 LD D,(IY+$10) ;
 $9DE4 LD A,($B710)  ;
 $9DE7 LD E,A        ;
*$9DE8 CALL $9B93    ; Call #R$9B93.
 $9DEB JR Z,$9E1D    ;
 $9DED LD A,$02      ;
 $9DEF CP E          ;
 $9DF0 JR Z,$9E01    ;
 $9DF2 LD A,(IY+$07) ;
 $9DF5 AND $48       ;
 $9DF7 CP $40        ;
 $9DF9 LD A,$00      ;
 $9DFB JR NZ,$9DFE   ;
 $9DFD INC A         ;
*$9DFE CP E          ;
 $9DFF JR NZ,$9DE8   ;
*$9E01 LD BC,$0008   ;
 $9E04 PUSH IY       ;
 $9E06 ADD IY,BC     ;
 $9E08 CALL $71F3    ; Call #R$71F3.
 $9E0B POP IY        ;
 $9E0D JR NZ,$9DE8   ;
 $9E0F LD A,($B70F)  ;
 $9E12 AND A         ;
 $9E13 JR NZ,$9E1D   ;
 $9E15 LD A,(IX+$00) ;
 $9E18 CALL $9E34    ; Call #R$9E34.
 $9E1B JR Z,$9DE8    ;
*$9E1D LD A,(IX+$00) ;
 $9E20 POP IY        ; {Restore #REGiy, #REGde and #REGbc from the stack.
 $9E22 POP DE        ;
 $9E23 POP BC        ; }
 $9E24 RET           ; Return.
; This entry point is used by the routines at #R$96B3 and #R$A541.
*$9E25 CALL $9E2B    ; Call #R$9E2B.
 $9E28 CALL $9E40    ;
*$9E2B PUSH IX       ;
 $9E2D PUSH IY       ;
 $9E2F POP IX        ;
 $9E31 POP IY        ;
 $9E33 RET           ; Return.

; Routine at 9E34
;
; Used by the routines at #R$95ED, #R$9DD9, #R$9F94 and #R$A541.
c$9E34 PUSH IX        ; Stash #REGix on the stack.
 $9E36 LD IX,($B70C)  ; #REGix=#R$B70C.
 $9E3A CALL $9E40     ; Call #R$9E40.
 $9E3D POP IX         ; Restore #REGix from the stack.
 $9E3F RET            ; Return.
; This entry point is used by the routine at #R$9DD9.
*$9E40 BIT 7,(IY+$07) ; {Return if the object is not "visible".
 $9E44 RET Z          ; }
 $9E45 PUSH IY        ; {Stash #REGiy, #REGix and #REGbc on the stack.
 $9E47 PUSH IX        ;
 $9E49 PUSH BC        ; }
 $9E4A LD B,A         ; #REGb=the object ID.
 $9E4B LD C,(IX+$10)  ; #REGc=your current location ID.
 $9E4E PUSH IY        ;
 $9E50 CALL $9E7A     ;
 $9E53 CP B           ;
 $9E54 LD B,A         ;
 $9E55 POP IX         ;
 $9E57 JR Z,$9E72     ;
 $9E59 CALL $9E7A     ;
 $9E5C CP B           ;
 $9E5D JR NZ,$9E6F    ;
 $9E5F INC A          ;
 $9E60 JR NZ,$9E72    ;
 $9E62 LD B,(IY+$00)  ;
 $9E65 LD A,C         ;
*$9E66 CP (IY+$10)    ;
 $9E69 JR Z,$9E72     ;
 $9E6B INC IY         ;
 $9E6D DJNZ $9E66     ;
*$9E6F XOR A          ;
 $9E70 JR $9E74       ;
*$9E72 OR $01         ;
*$9E74 POP BC         ; {Restore #REGbc, #REGix and #REGiy from the stack.
 $9E75 POP IX         ;
 $9E77 POP IY         ; }
 $9E79 RET            ; Return.

; Is Container Lit?
;
; Used by the routines at #R$95ED and #R$9E34.
;
;   IX Object Data Address e.g. #R$C11B
; O:A Either $FF if this object is not inside a container, or the object ID of
; .   the container object
; O:IX Object Data Address of either the input value, or the address of the
; .    container object
@label=ContainerLit
c$9E7A PUSH IX                 ; Stash #REGix on the stack.
@label=ContainerLit_Fetch
*$9E7C LD A,(IX+$01)           ; {If the object is not inside of anything then
 $9E7F CP $FF                  ; jump to #R$9E92.
 $9E81 JR Z,$9E92              ; }
 $9E83 EX AF,AF'               ; Switch to the shadow register for #REGaf.
 $9E84 LD A,(IX+$01)           ; #REGa=The mother object ID.
 $9E87 CALL $9BCA              ; Call #R$9BCA.
 $9E8A LD A,(IX+$07)           ; Fetch the objects attributes.
 $9E8D AND %00101000           ; {If the 'Give Light' and 'Full' attributes are
 $9E8F JR NZ,%1001111001111100 ; set then jump to #R$9E7C to rerun the check on
                               ; this object.}
 $9E91 EX AF,AF'               ; Switch back to the "normal" #REGaf register.
@label=ContainerLit_Return
*$9E92 POP IX                  ; Restore #REGix from the stack.
 $9E94 RET                     ; Return.

; Routine at 9E95
;
; Used by the routines at #R$77D1, #R$9F08 and #R$9F25.
c$9E95 PUSH DE       ; Stash #REGde on the stack.
 $9E96 CALL $9D37    ; Call #R$9D37.
 $9E99 LD DE,$0007   ; {Add $0007 to the object location.
 $9E9C ADD IX,DE     ; }
 $9E9E POP DE        ; Restore #REGde from the stack.
 $9E9F RET           ; Return.

; Routine at 9EA0
;
; Used by the routine at #R$77D1.
c$9EA0 PUSH IY       ; {Stash #REGiy and #REGde on the stack.
 $9EA2 PUSH DE       ; }
 $9EA3 LD DE,$0002   ;
*$9EA6 CALL $9B93    ;
 $9EA9 JR Z,$9EC3    ;
 $9EAB LD A,(IX+$02) ;
 $9EAE PUSH IX       ;
 $9EB0 CALL $9BB1    ;
 $9EB3 PUSH IX       ;
 $9EB5 POP IY        ;
 $9EB7 POP IX        ;
 $9EB9 ADD IY,DE     ;
 $9EBB CALL $71F3    ;
 $9EBE JR NZ,$9EA6   ;
 $9EC0 LD A,(IX+$02) ;
*$9EC3 POP DE        ; {Restore #REGde and #REGiy from the stack.
 $9EC4 POP IY        ; }
 $9EC6 RET           ; Return.

; Routine at 9EC7
;
; Used by the routines at #R$93DA, #R$9D44 and #R$9F94.
c$9EC7 PUSH IY       ; {Stash #REGiy and #REGde on the stack.
 $9EC9 PUSH DE       ; }
 $9ECA LD DE,$0008   ; {#REGiy=#REGiy+$0008
 $9ECD ADD IY,DE     ; }
 $9ECF CALL $9ED6    ; Call #R$9ED6.
 $9ED2 POP DE        ; {Restore #REGde and #REGiy off the stack.
 $9ED3 POP IY        ; }
 $9ED5 RET           ; Return.
; This entry point is used by the routines at #R$742D and #R$962B.
*$9ED6 PUSH AF       ; {Stash #REGaf and #REGde on the stack.
 $9ED7 PUSH DE       ; }
 $9ED8 LD A,($B703)  ; {If #R$B703 is not zero then jump to #R$9EFA.
 $9EDB CP $00        ;
 $9EDD JR NZ,$9EFA   ; }
 $9EDF LD D,(IY+$01) ; {#REGde=...
 $9EE2 LD E,(IY+$00) ; }
 $9EE5 CALL $743F    ; Call #R$743F.
 $9EE8 LD E,(IY+$02) ; {#REGde=...
 $9EEB LD D,(IY+$03) ; }
 $9EEE CALL $74C1    ; Call #R$74C1.
 $9EF1 LD E,(IY+$04) ; {#REGde=...
 $9EF4 LD D,(IY+$05) ; }
 $9EF7 CALL $74C1    ; Call #R$74C1.
*$9EFA LD E,(IY+$00) ; {#REGde=...
 $9EFD LD D,(IY+$01) ; }
 $9F00 LD A,D        ; {If #REGde is not zero call #R$7478.
 $9F01 OR E          ;
 $9F02 CALL NZ,$7478 ; }
 $9F05 POP DE        ; {Restore #REGde and #REGaf off the stack.
 $9F06 POP AF        ; }
 $9F07 RET           ; Return.

; Routine at 9F08
;
; Used by the routines at #R$8D9D and #R$8FAD.
c$9F08 PUSH BC       ; {Stash #REGbc and #REGiy on the stack.
 $9F09 PUSH IY       ; }
 $9F0B LD B,A        ;
 $9F0C CALL $9E95    ; Call #R$9E95.
*$9F0F CALL $9B93    ; Call #R$9B93.
 $9F12 JR Z,$9F21    ;
 $9F14 LD A,(IX+$02) ;
 $9F17 AND A         ;
 $9F18 JR Z,$9F0F    ;
 $9F1A LD A,(IX+$00) ;
 $9F1D CP B          ;
 $9F1E JP NZ,$9F0F   ;
*$9F21 POP IY        ; {Restore #REGiy and #REGbc off the stack.
 $9F23 POP BC        ; }
 $9F24 RET           ; Return.

; Routine at 9F25
;
; Used by the routines at #R$8D9D, #R$A2B4 and #R$A541.
c$9F25 LD A,($B6E8)  ;
; This entry point is used by the routines at #R$93DA and #R$A541.
*$9F28 PUSH AF       ;
 $9F29 LD A,$01      ;
 $9F2B JR $9F30      ;
; This entry point is used by the routines at #R$8FCD, #R$8FD6 and #R$A541.
*$9F2D PUSH AF       ;
 $9F2E LD A,$02      ;
*$9F30 LD ($9F42),A  ;
 $9F33 POP AF        ;
 $9F34 PUSH BC       ;
 $9F35 PUSH IY       ;
 $9F37 LD B,A        ;
 $9F38 CALL $9E95    ;
*$9F3B CALL $9B93    ;
 $9F3E JR Z,$9F46    ;
 $9F40 LD A,(IX+$02) ;
 $9F43 CP B          ;
 $9F44 JR NZ,$9F3B   ;
*$9F46 POP IY        ;
 $9F48 POP BC        ;
 $9F49 RET           ; Return.

; Routine at 9F4A
;
; Used by the routines at #R$8D9D, #R$8FF5 and #R$A248.
c$9F4A LD DE,($B708) ; {Switch the addresses stored in #R$B708 and #R$B70A
 $9F4E LD IY,($B70A) ; using #REGde and #REGiy.
 $9F52 LD ($B708),IY ;
 $9F56 LD ($B70A),DE ; }
 $9F5A LD BC,($B6E8) ;
 $9F5E LD A,B        ;
 $9F5F LD ($B6E8),A  ;
 $9F62 LD A,C        ;
 $9F63 LD ($B6E9),A  ;
 $9F66 CALL $9B6C    ; Call #R$9B6C.
 $9F69 LD ($B6E8),BC ;
 $9F6D LD ($B708),DE ;
 $9F71 LD ($B70A),IY ;
 $9F75 RET           ; Return.

; Routine at 9F76
;
; Used by the routines at #R$8CA6, #R$8D33, #R$8D9D, #R$9171, #R$93DA, #R$A248,
; #R$A302, #R$A3E6 and #R$A541.
c$9F76 LD A,($B6FA)  ; #REGa=#R$B6FA.
 $9F79 DEC A         ; Decrease #REGa by one.
 $9F7A JP Z,$712B    ; Jump to #R$712B if #REGa is now zero.
 $9F7D SUB A         ; {Write $00 to #R$B6FB.
 $9F7E LD ($B6FB),A  ; }
 $9F81 RET           ; Return.

; Get Object First Location
;
; Used by the routines at #R$96B3, #R$9ACD and #R$9B02.
;
;   A Object ID
; O:A Either $FF if the object appears once, or the location ID of the first
; .   time the object appears.
@label=ObjectFirstLocation
c$9F82 CP $FF        ; {Return if this is the terminator character ($FF).
 $9F84 RET Z         ; }
 $9F85 CALL $9BCA    ; Call #R$9BCA to set #REGix to the object data address.
 $9F88 LD A,$01      ; {Does the object appear in the game once?
 $9F8A CP (IX+$00)   ; }
 $9F8D LD A,$FF      ; #REGa=$FF (termination character).
 $9F8F RET NZ        ; Return if not.
 $9F90 LD A,(IX+$10) ; #REGa=the first location the object appears in.
 $9F93 RET           ; Return.

; Routine at 9F94
;
; Used by the routine at #R$962B.
c$9F94 PUSH IY       ; {Stash #REGiy, #REGaf and #REGbc on the stack.
 $9F96 PUSH AF       ;
 $9F97 PUSH BC       ; }
 $9F98 LD HL,$B003   ; #REGhl=#R$B003("You see :[0x14]")
 $9F9B CALL $72DD    ; Call #R$72DD.
 $9F9E LD A,$FF      ; #REGa=$FF.
 $9FA0 LD IY,($B70C) ; #REGiy=#R$B70C.
 $9FA4 LD B,(IY+$10) ; #REGb=location ID of the object.
 $9FA7 CALL $9FAF    ; Call #R$9FAF.
 $9FAA POP BC        ; {Restore #REGbc, #REGaf and #REGiy off the stack.
 $9FAB POP AF        ;
 $9FAC POP IY        ; }
 $9FAE RET           ; Return.
; This entry point is used by the routines at #R$8C4B, #R$90EB and #R$910E.
*$9FAF PUSH IY       ; {Stash #REGiy, #REGde and #REGbc on the stack.
 $9FB1 PUSH DE       ;
 $9FB2 PUSH BC       ; }
 $9FB3 LD C,$00      ;
 $9FB5 LD D,$04      ;
 $9FB7 CALL $9FC7    ; Call #R$9FC7.
 $9FBA SUB A         ;
 $9FBB CP C          ;
 $9FBC LD HL,$B33B   ; #REGhl=#R$B33B(" {6} nothing")
 $9FBF CALL Z,$72DD  ; Call #R$9FAF if zero.
 $9FC2 POP BC        ; {Restore #REGbc, #REGde and #REGiy off the stack.
 $9FC3 POP DE        ;
 $9FC4 POP IY        ; }
 $9FC6 RET           ; Return.
*$9FC7 PUSH HL       ;
 $9FC8 LD L,A        ;
 $9FC9 LD A,($869F)  ;
 $9FCC LD H,A        ;
 $9FCD LD A,D        ;
 $9FCE LD ($869F),A  ;
 $9FD1 LD A,L        ;
 $9FD2 EX (SP),HL    ;
 $9FD3 PUSH IX       ; Stash #REGix on the stack.
 $9FD5 LD IX,$C060   ; Set #REGix to $C060 which is 3 bytes less than the start of the #R$C063(object table) due to the following
                     ;           line adding $0003 and moving us on to the first record.
*$9FD9 CALL $9BA9    ; Call #R$9BA9.
 $9FDC JR Z,$A046    ;
 $9FDE CP (IY+$01)   ;
 $9FE1 JR NZ,$9FD9   ;
 $9FE3 PUSH AF       ;
 $9FE4 INC A         ;
 $9FE5 LD E,(IY+$00) ;
 $9FE8 JR NZ,$9FEF   ;
 $9FEA LD A,$01      ;
 $9FEC CP E          ;
 $9FED JR NZ,$A03D   ;
*$9FEF LD A,(IY+$10) ;
 $9FF2 CP B          ;
 $9FF3 JR Z,$9FFE    ;
 $9FF5 DEC E         ;
 $9FF6 JR Z,$A03D    ;
 $9FF8 LD A,(IY+$11) ;
 $9FFB CP B          ;
 $9FFC JR NZ,$A03D   ;
*$9FFE LD A,($B6EA)  ;
 $A001 CP (IX+$00)   ;
 $A004 JR NZ,$A00B   ;
 $A006 LD A,$04      ;
 $A008 CP D          ;
 $A009 JR Z,$A03D    ;
*$A00B LD A,(IX+$00) ;
 $A00E CALL $9E34    ; Call #R$9E34.
 $A011 JR Z,$A03D    ;
 $A013 INC C         ;
 $A014 SUB A         ;
 $A015 LD ($B704),A  ;
 $A018 LD ($B703),A  ;
 $A01B CALL $9EC7    ; Call #R$9EC7.
 $A01E LD A,($B6EA)  ;
 $A021 CP (IX+$00)   ;
 $A024 JR Z,$A041    ;
 $A026 LD A,$2E      ;
 $A028 CALL $858B    ; Call #R$858B.
 $A02B LD A,(IX+$00) ;
 $A02E CALL $A050    ; Call #R$A050.
 $A031 JR C,$A03D    ;
 $A033 LD A,(IX+$00) ;
 $A036 PUSH DE       ;
 $A037 INC D         ;
 $A038 INC D         ;
 $A039 CALL $9FC7    ; Call #R$9FC7.
 $A03C POP DE        ;
*$A03D POP AF        ;
 $A03E JP $9FD9      ;
*$A041 CALL $8583    ; Call #R$8583.
 $A044 JR $A03D      ;
*$A046 POP IX        ;
 $A048 EX (SP),HL    ;
 $A049 LD A,H        ;
 $A04A LD ($869F),A  ;
 $A04D LD A,L        ;
 $A04E POP HL        ;
 $A04F RET           ; Return.

; Routine at A050
;
; Used by the routines at #R$910E and #R$9F94.
c$A050 PUSH IX        ; {Stash #REGix, #REGbc and #REGde on the stack.
 $A052 PUSH BC        ;
 $A053 PUSH DE        ; }
 $A054 LD C,A         ;
 $A055 CALL $9BCA     ;
 $A058 LD A,(IX+$07)  ;
 $A05B AND $28        ;
 $A05D JR Z,$A097     ;
 $A05F LD A,C         ;
 $A060 CALL $9D97     ;
 $A063 CP $00         ;
 $A065 JR Z,$A097     ;
 $A067 BIT 6,(IX+$07) ;
 $A06B JR Z,$A074     ;
 $A06D LD A,C         ;
 $A06E PUSH AF        ;
 $A06F LD HL,$ADF9    ;
 $A072 JR $A08E       ;
*$A074 LD HL,$039B    ;
 $A077 DEC A          ;
 $A078 JR Z,$A07D     ;
 $A07A LD HL,$0065    ;
*$A07D PUSH HL        ;
 $A07E LD L,(IX+$08)  ;
 $A081 LD A,(IX+$09)  ;
 $A084 AND $0F        ;
 $A086 LD H,A         ;
 $A087 PUSH HL        ;
 $A088 CALL $A09D     ; Call #R$A09D.
 $A08B LD HL,$AFE0    ; #REGhl=#R$AFE0("[0x01] there[0x01][0x14]")
*$A08E CALL $72DD     ; Call #R$72DD.
 $A091 AND A          ;
*$A092 POP DE         ; {Restore #REGde, #REGbc and #REGix off the stack.
 $A093 POP BC         ;
 $A094 POP IX         ; }
 $A096 RET            ; Return.
*$A097 CALL $8583     ; Call #R$8583.
 $A09A SCF            ;
 $A09B JR $A092       ; Jump back to #R$A092.
; This entry point is used by the routine at #R$8C4B.
*$A09D LD HL,$AFCA    ; #REGhl=#R$AFCA
 $A0A0 LD A,(IX+$04)  ;
 $A0A3 RLCA           ;
 $A0A4 RLCA           ;
 $A0A5 AND $3C        ;
 $A0A7 LD E,A         ;
 $A0A8 LD D,$00       ;
 $A0AA ADD HL,DE      ;
 $A0AB JP $72DD       ; Jump to #R$72DD.

; Routine at A0AE
;
; Used by the routines at #R$A0C8 and #R$A138.
c$A0AE CALL $9BB1    ;
 $A0B1 LD BC,$0007   ;
 $A0B4 ADD IX,BC     ;
 $A0B6 LD BC,$0003   ;
 $A0B9 RET           ;

; Routine at A0BA
;
; Used by the routines at #R$A0C8, #R$A138 and #R$A541.
c$A0BA LD HL,$A20E   ;
; This entry point is used by the routine at #R$A138.
*$A0BD LD E,A        ;
 $A0BE RES 7,E       ;
 $A0C0 LD D,$00      ;
 $A0C2 ADD HL,DE     ;
 $A0C3 ADD HL,DE     ;
 $A0C4 LD E,(HL)     ;
 $A0C5 INC HL        ;
 $A0C6 LD D,(HL)     ;
 $A0C7 RET           ; Return.

; Routine at A0C8
;
; Used by the routine at #R$962B.
c$A0C8 PUSH BC        ; {Stash #REGbc, #REGde, #REGiy and #REGix on the stack.
 $A0C9 PUSH DE        ;
 $A0CA PUSH IY        ;
 $A0CC PUSH IX        ; }
 $A0CE CALL $A0AE     ; Call #R$A0AE.
 $A0D1 ADD IX,BC      ;
 $A0D3 PUSH IX        ;
 $A0D5 POP IY         ;
*$A0D7 SUB A          ;
 $A0D8 CP (IY+$01)    ;
 $A0DB JR Z,$A113     ;
 $A0DD LD A,(IY+$01)  ;
 $A0E0 CALL $9BCA     ; Call #R$9BCA.
 $A0E3 BIT 7,(IX+$07) ;
 $A0E7 JR Z,$A113     ;
 $A0E9 LD DE,$0008    ;
 $A0EC ADD IX,DE      ;
 $A0EE PUSH IX        ;
 $A0F0 LD A,(IY+$00)  ;
 $A0F3 CALL $A0BA     ; Call #R$A0BA.
 $A0F6 CP $09         ;
 $A0F8 JR C,$A104     ;
 $A0FA LD DE,$07B5    ;
 $A0FD JR Z,$A10A     ;
 $A0FF LD DE,$082B    ;
 $A102 JR $A10A       ;
*$A104 LD HL,$AE17    ; #REGhl=#R$AE17("to the[0x16]")
 $A107 CALL $72DD     ; Call #R$72DD.
*$A10A CALL $74C1     ; Call #R$74C1.
 $A10D LD HL,$B013    ; #REGhl=#R$B013("there is[0x00][0x14]")
 $A110 CALL $72DD     ; Call #R$72DD.
*$A113 ADD IY,BC      ;
 $A115 LD A,$FF       ;
 $A117 CP (IY+$00)    ;
 $A11A JP NZ,$A0D7    ;
 $A11D POP IX         ; {Restore #REGix, #REGiy, #REGde and #REGbc off the
 $A11F POP IY         ; stack.
 $A121 POP DE         ;
 $A122 POP BC         ; }
 $A123 RET            ; Return.

; Routine at A124
;
; Used by the routine at #R$A138.
c$A124 ADD IX,BC     ;
 $A126 LD A,$FF      ;
 $A128 CP (IX+$00)   ;
 $A12B RET Z         ;
 $A12C XOR A         ;
 $A12D CP (IX+$01)   ;
 $A130 JR NZ,$A124   ;
 $A132 CP (IX+$00)   ;
 $A135 JR Z,$A124    ;
 $A137 RET           ; Return.

; Display Exits
;
; Used by the routine at #R$962B.
@label=DisplayExits
c$A138 PUSH IX                              ; {Stash #REGix, #REGiy, #REGde and
 $A13A PUSH IY                              ; #REGbc on the stack.
 $A13C PUSH DE                              ;
 $A13D PUSH BC                              ; }
 $A13E CALL $A0AE                           ; Call #R$A0AE.
 $A141 CALL $A124                           ; Call #R$A124.
 $A144 JR Z,$A15D                           ; Jump to #R$A15D if there are no
                                            ; exits.
 $A146 LD HL,$B020                          ; #REGhl=#R$B020("visible exits
                                            ; are:[0x16]")
 $A149 CALL $72DD                           ; Call #R$72DD.
*$A14C LD A,(IX+$00)                        ;
 $A14F CALL $A0BA                           ; Call #R$A0BA.
 $A152 CALL $74C1                           ; Call #R$74C1.
 $A155 CALL $A124                           ; Call #R$A14C.
 $A158 JR NZ,$A14C                          ;
 $A15A CALL $8583                           ; Call #R$8583.
*$A15D POP BC                               ; {Restore #REGbc, #REGde, #REGiy
 $A15E POP DE                               ; and #REGix from the stack.
 $A15F POP IY                               ;
 $A161 POP IX                               ; }
 $A163 RET                                  ; Return.
; This entry point is used by the routines at #R$9171 and #R$93DA.
*$A164 LD L,(IY+$08)                        ;
 $A167 LD H,(IY+$09)                        ;
 $A16A JR $A172                             ;
; This entry point is used by the routines at #R$8D9D, #R$9076, #R$910E,
; #R$9171, #R$93DA and #R$A541.
*$A16C LD L,(IX+$08)                        ;
 $A16F LD H,(IX+$09)                        ;
*$A172 PUSH DE                              ;
 $A173 PUSH HL                              ;
 $A174 LD HL,$A224                          ;
 $A177 BIT 7,A                              ;
 $A179 JR Z,$A17E                           ;
 $A17B LD HL,$A234                          ;
*$A17E CALL $A0BD                           ;
 $A181 POP HL                               ;
 $A182 PUSH DE                              ;
 $A183 PUSH HL                              ;
 $A184 LD HL,$AFBB                          ; #REGhl=#R$AFBB("[0x04]
                                            ; is[0x01][0x15]")
 $A187 CALL $72DD                           ; Call #R$72DD.
 $A18A POP DE                               ;
 $A18B RET                                  ; Return.
; This entry point is used by the routines at #R$9171, #R$96B3 and #R$A541.
*$A18C PUSH IX                              ;
 $A18E CALL $9BCA                           ;
 $A191 LD (IX+$0C),$00                      ;
 $A195 LD (IX+$0D),$00                      ;
 $A199 LD DE,$00CD                          ;
 $A19C BIT 6,(IX+$07)                       ;
 $A1A0 JR Z,$A1A5                           ;
 $A1A2 LD DE,$0192                          ;
*$A1A5 LD (IX+$0A),E                        ;
 $A1A8 LD (IX+$0B),D                        ;
 $A1AB POP IX                               ;
 $A1AD RET                                  ; Return.
 $A1AE PUSH IY                              ;
 $A1B0 PUSH IX                              ;
 $A1B2 LD IX,$C060                          ;
*$A1B6 CALL $9BA9                           ;
 $A1B9 JR Z,$A1C0                           ;
 $A1BB CP (IY+$01)                          ;
 $A1BE JR NZ,$A1B6                          ;
*$A1C0 LD A,(IX+$00)                        ;
 $A1C3 POP IX                               ;
 $A1C5 POP IY                               ;
 $A1C7 RET                                  ; Return.
; This entry point is used by the routine at #R$9076.
*$A1C8 LD A,(IX+$07)                        ;
 $A1CB AND $48                              ;
 $A1CD CP $40                               ;
 $A1CF RET                                  ; Return.
; This entry point is used by the routine at #R$93DA.
*$A1D0 PUSH HL                              ;
 $A1D1 PUSH BC                              ;
 $A1D2 LD B,$05                             ;
 $A1D4 LD HL,$A20B                          ;
 $A1D7 LD A,($B6E7)                         ;
*$A1DA CP (HL)                              ;
 $A1DB JR Z,$A1E0                           ;
 $A1DD INC HL                               ;
 $A1DE DJNZ $A1DA                           ;
*$A1E0 POP BC                               ;
 $A1E1 POP HL                               ;
 $A1E2 RET                                  ; Return.
; This entry point is used by the routines at #R$A3E6 and #R$A541.
*$A1E3 PUSH HL                              ; Stash #REGhl on the stack.
 $A1E4 LD HL,$B009                          ; #REGhl=#R$B009("You say "[0x16]")
 $A1E7 CALL $72DD                           ; Call #R$72DD.
 $A1EA POP HL                               ; Restore #REGhl from the stack.
 $A1EB LD A,$01                             ; {Write $01 to #R$B704.
 $A1ED LD ($B704),A                         ; }
 $A1F0 CALL $72DD                           ; Call #R$72DD.
 $A1F3 LD HL,$B00F                          ; #REGhl=#R$B00F(" ".[0x14]")
 $A1F6 JP $72DD                             ; Jump to #R$72DD.
; This entry point is used by the routines at #R$910E and #R$93DA.
*$A1F9 LD IX,($B708)                        ;
 $A1FD BIT 0,(IX+$07)                       ;
 $A201 LD A,$80                             ;
 $A203 RET NZ                               ;
; This entry point is used by the routine at #R$93DA.
*$A204 BIT 5,(IX+$07)                       ;
 $A208 LD A,$85                             ;
 $A20A RET                                  ; Return.
 $A20B DEFB $0E,$11,$12,$14,$2C,$80,$04,$07 ;
 $A213 DEFB $06,$FE,$01,$79,$07,$85,$04,$8E ;
 $A21B DEFB $04,$0C,$06,$15,$06,$25,$07,$C4 ;
 $A223 DEFB $01,$18,$07,$00,$00,$28,$02,$00 ;
 $A22B DEFB $00,$9F,$04,$39,$01,$92,$01,$00 ;
 $A233 DEFB $00,$F6,$03,$00,$00,$B9,$02,$CD ;
 $A23B DEFB $00,$AA,$04,$B4,$04,$D4,$07,$00 ;
 $A243 DEFB $00,$CD,$44,$9D,$C9             ;

; Action: Tie
@label=ActionTie
c$A248 LD A,($B6E8)    ;
 $A24B CP $12          ;
 $A24D JR Z,$A2AE      ;
 $A24F LD A,($B6E9)    ;
 $A252 CP $12          ;
 $A254 JP NZ,$9F76     ;
 $A257 LD IX,($B708)   ;
 $A25B BIT 1,(IX+$07)  ;
 $A25F JP NZ,$9F76     ;
 $A262 CALL $9D97      ;
 $A265 CP $00          ;
 $A267 LD HL,$B07D     ; #REGhl=#R$B07D("[0x09] is already tied[0x15]")
 $A26A JP NZ,$72DD     ;
 $A26D BIT 3,(IX+$07)  ;
 $A271 JR NZ,$A27A     ;
 $A273 BIT 6,(IX+$07)  ;
 $A277 JP NZ,$9F76     ;
*$A27A CALL $9D44      ;
 $A27D LD IY,($B70A)   ;
 $A281 CALL $9C78      ;
 $A284 LD A,($B6E9)    ;
 $A287 LD (IX+$01),A   ;
 $A28A JR C,$A2A2      ;
 $A28C SUB A           ;
 $A28D LD ($B6FA),A    ;
 $A290 CALL $8D33      ;
 $A293 LD A,($B6FB)    ;
 $A296 CP $00          ;
 $A298 LD A,$01        ;
 $A29A LD ($B6FA),A    ;
 $A29D LD ($B6FB),A    ;
 $A2A0 JR Z,$A2A9      ;
*$A2A2 LD A,($B6EA)    ;
 $A2A5 LD (IY+$01),A   ;
 $A2A8 RET             ;
*$A2A9 LD (IY+$01),$FF ;
 $A2AD RET             ;
*$A2AE LD HL,$A248     ;
 $A2B1 JP $9F4A        ;

; Action: Untie
@label=ActionUntie
c$A2B4 LD IX,($B708)  ;
 $A2B8 LD A,(IX+$01)  ;
 $A2BB CP $12         ;
 $A2BD LD HL,$B092    ;
 $A2C0 JP NZ,$72DD    ;
 $A2C3 CALL $9D44     ;
 $A2C6 LD A,($C367)   ;
 $A2C9 LD (IX+$01),A  ;
 $A2CC RET            ;
 $A2CD CALL $9F25     ;
 $A2D0 LD A,(IX+$02)  ;
 $A2D3 CP $00         ;
 $A2D5 JR NZ,$A2DB    ;
 $A2D7 CALL $9D44     ;
 $A2DA RET            ;
*$A2DB LD A,(IX+$00)  ;
 $A2DE LD HL,($B6E7)  ;
 $A2E1 PUSH HL        ;
 $A2E2 LD ($B6E7),A   ;
 $A2E5 LD IX,($B708)  ;
 $A2E9 SET 5,(IX+$07) ;
 $A2ED PUSH IX        ;
 $A2EF LD A,$FF       ;
 $A2F1 LD ($B6E8),A   ;
 $A2F4 CALL $8DAB     ;
 $A2F7 POP IX         ;
 $A2F9 RES 5,(IX+$07) ;
 $A2FD POP HL         ;
 $A2FE LD ($B6E7),HL  ;
 $A301 RET            ;

; Action: Burn
@label=ActionBurn
c$A302 LD A,($B6EA)   ;
 $A305 CP $3C         ;
 $A307 JP NZ,$9F76    ;
 $A30A CALL $9D44     ;
 $A30D JP $977C       ;
 $A310 CALL $9D44     ;
 $A313 LD HL,$B0B4    ;
*$A316 CALL $72DD     ;
 $A319 LD A,($B6EA)   ;
 $A31C PUSH AF        ;
 $A31D AND A          ;
 $A31E LD HL,$ADA9    ;
 $A321 CALL Z,$72DD   ;
 $A324 POP AF         ;
 $A325 JP $977F       ;
 $A328 CALL $9D44     ;
 $A32B LD HL,$B0F8    ;
 $A32E JR $A316       ;
 $A330 LD B,$02       ;
 $A332 JR $A33A       ;
 $A334 LD B,$0F       ;
 $A336 JR $A33A       ;
 $A338 LD B,$04       ;
*$A33A LD A,($B6E9)   ;
 $A33D CP B           ;
 $A33E JR NZ,$A34B    ;
 $A340 LD A,($B6E7)   ;
 $A343 CP $25         ;
 $A345 JP Z,$946D     ;
 $A348 JP $948D       ;
*$A34B CP $02         ;
 $A34D JR Z,$A358     ;
 $A34F CP $04         ;
 $A351 JR Z,$A358     ;
 $A353 CP $0F         ;
 $A355 JP NZ,$72CE    ;
*$A358 LD HL,$B02D    ;
 $A35B JP $72DD       ;
 $A35E CALL $97FF     ;
 $A361 LD IX,($B708)  ;
 $A365 JP $9117       ;
 $A368 LD IX,($B70C)  ;
 $A36C LD A,(IX+$10)  ;
 $A36F CP $0F         ;
 $A371 JP NZ,$9F76    ;
 $A374 JP $910E       ;
 $A377 LD IX,($B708)  ;
 $A37B BIT 3,(IX+$07) ;
 $A37F RET Z          ;
 $A380 SET 5,(IX+$07) ;
 $A384 LD A,($CA8B)   ;
 $A387 LD ($CA8C),A   ;
 $A38A LD HL,$B099    ;
 $A38D JP $72DD       ;
 $A390 CALL $9D44     ;
 $A393 LD IY,($B70C)  ;
 $A397 LD IX,$C31A    ;
 $A39B RES 7,(IY+$07) ;
 $A39F SRL (IY+$05)   ;
 $A3A3 SRL (IY+$05)   ;
 $A3A7 RES 7,(IX+$07) ;
 $A3AB LD A,($B6EA)   ;
 $A3AE LD (IX+$01),A  ;
 $A3B1 LD A,$08       ;
 $A3B3 CALL $9C9F     ;
 $A3B6 ADD A,$02      ;
 $A3B8 LD ($CAAF),A   ;
 $A3BB RET            ;
; This entry point is used by the routine at #R$A541.
*$A3BC LD IX,($B70C)  ;
 $A3C0 LD IY,$C31A    ;
 $A3C4 BIT 7,(IY+$07) ;
 $A3C8 LD HL,$B074    ;
 $A3CB JP NZ,$72DD    ;
 $A3CE CALL $9D44     ;
 $A3D1 SET 7,(IY+$07) ;
 $A3D5 SET 7,(IX+$07) ;
 $A3D9 SLA (IX+$05)   ;
 $A3DD SLA (IX+$05)   ;
 $A3E1 SUB A          ;
 $A3E2 LD ($CAAF),A   ;
 $A3E5 RET            ;

; Action: Capture
@label=ActionCapture
c$A3E6 LD IX,($B708)   ;
 $A3EA LD A,(IX+$04)   ;
 $A3ED AND $70         ;
 $A3EF PUSH IX         ;
 $A3F1 LD IX,($B70C)   ;
 $A3F5 AND (IX+$04)    ;
 $A3F8 POP IX          ;
 $A3FA JP NZ,$9F76     ;
 $A3FD BIT 6,(IX+$07)  ;
 $A401 JP Z,$9F76      ;
 $A404 LD A,($B6EA)    ;
 $A407 LD B,$1F        ;
 $A409 CP $40          ;
 $A40B JR Z,$A413      ;
 $A40D CP $42          ;
 $A40F JR Z,$A413      ;
 $A411 LD B,$0D        ;
*$A413 LD A,($B6F6)    ;
 $A416 CP B            ;
 $A417 JP Z,$9F76      ;
 $A41A CALL $9D44      ;
 $A41D LD IX,($B708)   ;
 $A421 LD (IX+$10),B   ;
 $A424 LD (IX+$01),$FF ;
 $A428 LD A,($B6E8)    ;
 $A42B CALL $9BDD      ;
 $A42E LD A,($B6E8)    ;
 $A431 CP $00          ;
 $A433 RET NZ          ;
 $A434 LD ($B6EA),A    ;
 $A437 LD HL,$C11B     ;
 $A43A LD ($B70C),HL   ;
 $A43D CALL $95ED      ;
 $A440 RET C           ;
 $A441 LD A,B          ;
 $A442 LD HL,$AFFC     ;
 $A445 JP $964D        ;
 $A448 LD IX,($B708)   ;
 $A44C BIT 3,(IX+$07)  ;
 $A450 RET Z           ;
 $A451 RES 3,(IX+$07)  ;
 $A455 LD DE,$0006     ;
 $A458 LD IY,$A49C     ;
 $A45C LD A,($B6E8)    ;
*$A45F CP (IY+$00)     ;
 $A462 JR Z,$A468      ;
 $A464 ADD IY,DE       ;
 $A466 JR $A45F        ;
*$A468 PUSH IY         ;
*$A46A POP HL          ;
 $A46B INC HL          ;
 $A46C LD E,(HL)       ;
 $A46D INC HL          ;
 $A46E LD D,(HL)       ;
 $A46F LD (DE),A       ;
 $A470 INC HL          ;
 $A471 LD A,(HL)       ;
 $A472 LD (IX+$10),A   ;
 $A475 INC HL          ;
 $A476 LD A,(HL)       ;
 $A477 LD (IX+$0A),A   ;
 $A47A INC HL          ;
 $A47B LD A,(HL)       ;
 $A47C LD (IX+$0B),A   ;
 $A47F LD HL,$B068     ;
 $A482 CALL $72DD      ;
 $A485 LD A,($C12B)    ;
 $A488 CP B            ;
 $A489 RET NZ          ;
 $A48A LD DE,$005E     ;
 $A48D CALL $74C1      ;
 $A490 LD DE,$02E2     ;
 $A493 CALL $74C1      ;
 $A496 LD HL,$B018     ;
 $A499 JP $72DD        ;
 $A49C DEC A           ;
 $A49D JR $A46A        ;
 $A49F RRCA            ;
 $A4A0 LD L,D          ;
 $A4A1 INC B           ;
 $A4A2 LD B,L          ;
 $A4A3 RRA             ;
 $A4A4 SRL D           ;
 $A4A6 SCF             ;
 $A4A7 INC BC          ;
 $A4A8 LD C,C          ;
 $A4A9 DEC L           ;
 $A4AA RL D            ;
 $A4AC LD H,C          ;
 $A4AD INC BC          ;
 $A4AE LD C,D          ;
 $A4AF INC (HL)        ;
 $A4B0 SRL B           ;
 $A4B2 INC (HL)        ;
 $A4B3 INC B           ;
 $A4B4 LD C,E          ;
 $A4B5 LD H,$CB        ;
 $A4B7 LD B,B          ;
 $A4B8 LD B,C          ;
 $A4B9 RLCA            ;
 $A4BA LD C,H          ;
 $A4BB DEC SP          ;
 $A4BC RL B            ;
 $A4BE OR (HL)         ;
 $A4BF LD BC,$2ADD     ;
 $A4C2 INC C           ;
 $A4C3 OR A            ;
 $A4C4 LD A,(IX+$10)   ;
 $A4C7 CP $10          ;
 $A4C9 JP NZ,$9F76     ;
 $A4CC CALL $910E      ;
 $A4CF CALL $97FF      ;
 $A4D2 LD A,($CA99)    ;
 $A4D5 LD ($CA9A),A    ;
 $A4D8 RET             ;
 $A4D9 LD HL,$C34B     ;
 $A4DC RES 5,(HL)      ;
 $A4DE RET             ;
 $A4DF CALL $9D44      ;
 $A4E2 LD A,$0A        ;
 $A4E4 CALL $9C9F      ;
 $A4E7 LD HL,$B0A6     ;
 $A4EA CP $08          ;
 $A4EC JP NC,$A1E3     ;
 $A4EF LD HL,$B047     ;
 $A4F2 JP $A1E3        ;
 $A4F5 CALL $9D44      ;
 $A4F8 LD HL,$B04B     ;
 $A4FB JP $A1E3        ;
 $A4FE CALL $9D44      ;
 $A501 LD A,$02        ;
 $A503 CALL $9C9F      ;
 $A506 LD HL,$B052     ;
 $A509 CP $00          ;
 $A50B JP Z,$A1E3      ;
 $A50E LD HL,$B05B     ;
 $A511 CP $01          ;
 $A513 JP Z,$A1E3      ;
 $A516 LD HL,$B05F     ;
 $A519 JP $A1E3        ;
 $A51C CALL $9D44      ;
 $A51F LD HL,$B061     ;
 $A522 JP $A1E3        ;
 $A525 LD A,($B6F6)    ;
 $A528 LD HL,$B6F5     ;
 $A52B CP (HL)         ;
 $A52C RET NZ          ;
 $A52D CALL $9D44      ;
 $A530 LD HL,$B05F     ;
 $A533 JP $A1E3        ;
 $A536 LD A,($B6EA)    ;
 $A539 CP $40          ;
 $A53B JP NZ,$9F76     ;
 $A53E JP $910E        ;

; Action: ClimbOut
@label=ActionClimbOut
c$A541 LD IY,($B70C)   ; #REGiy=#R$B70C.
 $A545 LD A,($B6E8)    ; #REGa=#R$B6E8.
 $A548 CP (IY+$01)     ; {If this is not a mother object (i.e. something to
 $A54B JP NZ,$9F76     ; climb out of) jump to #R$9F76.}
 $A54E CALL $9BCA      ; Call #R$9BCA.
 $A551 CALL $A5CA      ; Call #R$A5CA.
 $A554 JP Z,$A16C      ;
 $A557 CALL $9D44      ; Call #R$9D44.
 $A55A LD (IY+$01),$FF ;
 $A55E RET             ; Return.
 $A55F LD IY,($B70C)   ;
 $A563 LD A,($B6E8)    ;
 $A566 CP (IY+$01)     ;
 $A569 JP Z,$9F76      ;
 $A56C LD IY,($B708)   ;
 $A570 CALL $9E34      ;
 $A573 JP Z,$9F76      ;
 $A576 LD A,($B6E8)    ;
*$A579 CALL $9BCA      ;
 $A57C LD A,(IX+$01)   ;
 $A57F CP $FF          ;
 $A581 JR Z,$A596      ;
 $A583 LD A,($B6EA)    ;
 $A586 CP (IX+$01)     ;
 $A589 LD A,(IX+$01)   ;
 $A58C JR NZ,$A579     ;
 $A58E LD IX,($B708)   ;
 $A592 LD (IX+$01),$FF ;
*$A596 LD IY,($B70C)   ;
 $A59A LD A,($B6EA)    ;
 $A59D CALL $9CE8      ;
 $A5A0 ADD A,(IY+$02)  ;
 $A5A3 JR C,$A5A7      ;
 $A5A5 LD A,$FF        ;
*$A5A7 LD B,A          ;
 $A5A8 LD IX,($B708)   ;
 $A5AC CALL $A5CA      ;
 $A5AF JP Z,$A16C      ;
 $A5B2 LD A,(IX+$02)   ;
 $A5B5 CP $FF          ;
 $A5B7 JR Z,$A5C0      ;
 $A5B9 SUB B           ;
 $A5BA LD HL,$B13E     ;
 $A5BD JP NC,$72DD     ;
*$A5C0 CALL $9D44      ;
 $A5C3 LD A,($B6E8)    ;
 $A5C6 LD (IY+$01),A   ;
 $A5C9 RET             ;
; This entry point is used by the routines at #R$8D9D, #R$910E and #R$93DA.
*$A5CA BIT 5,(IX+$07)  ;
 $A5CE LD A,$05        ;
 $A5D0 RET             ;
 $A5D1 CALL $9D44      ;
 $A5D4 LD HL,$C452     ;
 $A5D7 LD A,($C12B)    ;
 $A5DA CP (HL)         ;
 $A5DB RET NZ          ;
 $A5DC LD HL,$B085     ; #REGhl=#R$B085("the vicious warg run around you and
                       ; howls.").
 $A5DF JP $97F4        ;
 $A5E2 LD A,($B6E8)    ;
 $A5E5 CP $13          ;
 $A5E7 RET NZ          ;
 $A5E8 CALL $97FF      ;
 $A5EB LD IX,$C3EE     ; #REGix=#R$C3EE("#TEXTTOKEN($C3EE + $08, 1)").
 $A5EF LD A,(IX+$10)   ; #REGa=location of the "#TEXTTOKEN($C3EE + $08, 1)".
 $A5F2 CP $21          ; {Return if "#TEXTTOKEN($C3EE + $08, 1)" is not at
 $A5F4 RET NZ          ; location #R$BDC1($21) - "#TEXTTOKEN($BDC1 + $02,
                       ; $01)".}
 $A5F5 LD A,$02        ;
 $A5F7 LD ($CA85),A    ;
 $A5FA RET             ;
 $A5FB SUB A           ;
 $A5FC LD ($B6F0),A    ;
 $A5FF LD A,($C11C)    ; #REGa=#R$C11C(player mother object).
 $A602 CP $13          ; Is the player inside object $13, i.e. using the
                       ; "#TEXTTOKEN($C3EE + $08, 1)"?
 $A604 LD HL,$B32C     ; #REGhl=#R$B32C("you are thrown onto the bank of the
                       ; long lake").
 $A607 CALL Z,$72DD    ; If so, call #R$72DD.
 $A60A LD A,$22        ;
 $A60C LD ($C3FE),A    ;
 $A60F LD B,A          ;
 $A610 LD A,$13        ;
 $A612 CALL $9BDD      ;
 $A615 LD IX,$C3EE     ; #REGix=#R$C3EE("#TEXTTOKEN($C3EE + $08, 1)").
 $A619 LD (IX+$10),$20 ; Update the location of the object to location
                       ; #R$BDAD($20) - "#TEXTTOKEN($BDAD + $02, $01)".
 $A61D RES 5,(IX+$07)  ;
 $A621 SET 2,(IX+$07)  ;
 $A625 SUB A           ;
 $A626 LD ($B702),A    ;
 $A629 LD A,$13        ;
 $A62B CALL $9D53      ;
 $A62E LD A,$01        ;
 $A630 LD ($B702),A    ;
 $A633 LD IY,$C418     ; #REGiy=Object #R$C418($14) - "#TEXTTOKEN($C418 + $08,
                       ; 1)".
 $A637 LD (IY+$10),$20 ;
 $A63B LD (IY+$01),$13 ;
 $A63F RET             ; Return.
 $A640 LD A,($B6F6)    ;
 $A643 LD HL,$B6F5     ;
 $A646 CP (HL)         ;
 $A647 RET NZ          ;
 $A648 LD A,($C122)    ;
 $A64B BIT 7,A         ;
 $A64D RET NZ          ;
 $A64E CALL $9D44      ;
 $A651 LD HL,$B0CB     ; #REGhl=#R$B0CB("where's the thief ?[0x16]").
 $A654 JP $A1E3        ;
 $A657 CALL $9D44      ;
 $A65A LD A,$08        ;
 $A65C CALL $9C9F      ;
 $A65F CP $05          ;
 $A661 RET NC          ;
 $A662 CP $03          ;
 $A664 LD HL,$B0F4     ; #REGhl=#R$B0F4("thorin wait.").
 $A667 JP NC,$97F4     ;
 $A66A LD HL,$B0D5     ; #REGhl=#R$B0D5("get us out of this one, thief
                       ; ![0x16]").
 $A66D JP Z,$A1E3      ;
 $A670 LD HL,$B0E5     ; #REGhl=#R$B0E5("thorin sit(s|d|ing|es) down and
                       ; start(s|d|ing|es) sing(s|d|ing|es) about gold.").
 $A673 CP $00          ;
 $A675 JP Z,$97F4      ;
 $A678 LD HL,$B05B     ; #REGhl=#R$B05B("hurry up.").
 $A67B JP $A1E3        ;
 $A67E LD IX,($B70C)   ;
 $A682 LD A,(IX+$10)   ;
 $A685 CP $20          ;
 $A687 LD HL,$B11B     ; #REGhl=#R$B11B("you cannot reach[0x07][0x15]").
 $A68A JP NZ,$72DD     ;
 $A68D LD A,($B6E7)    ;
 $A690 CP $0C          ;
 $A692 JP Z,$9138      ;
 $A695 JP $910E        ;
 $A698 LD A,($C12B)    ;
 $A69B CP $27          ;
 $A69D JR Z,$A6A6      ;
 $A69F CP $2C          ;
 $A6A1 JR Z,$A6A6      ;
 $A6A3 CP $29          ;
 $A6A5 RET NZ          ;
*$A6A6 CALL $9D44      ;
 $A6A9 LD A,($C12B)    ;
 $A6AC LD HL,$C143     ;
 $A6AF CP (HL)         ;
 $A6B0 RET Z           ;
 $A6B1 LD (HL),A       ;
 $A6B2 LD A,$01        ;
 $A6B4 LD ($B702),A    ;
 $A6B7 LD HL,$C13B     ;
 $A6BA PUSH HL         ;
 $A6BB LD HL,$B017     ; #REGhl=#R$B017("[0x00] enter(s|d|ing|es).[0x14]").
*$A6BE CALL $72DD      ;
 $A6C1 RET             ;
 $A6C2 LD A,($C12B)    ;
 $A6C5 LD HL,$B6F6     ;
 $A6C8 CP (HL)         ;
 $A6C9 RET NZ          ;
 $A6CA CALL $9D44      ;
 $A6CD LD A,($C122)    ;
 $A6D0 AND $80         ;
 $A6D2 LD HL,$B17E     ;
 $A6D5 JR Z,$A6DA      ;
 $A6D7 LD HL,$B15D     ;
*$A6DA JR $A6BE        ;
 $A6DC LD A,($C5DD)    ;
 $A6DF CP $29          ;
 $A6E1 RET Z           ;
 $A6E2 LD A,($C12B)    ;
 $A6E5 CALL $9BB1      ;
 $A6E8 BIT 7,(IX+$00)  ;
 $A6EC RET Z           ;
 $A6ED CALL $9D44      ;
 $A6F0 LD A,$01        ;
 $A6F2 LD ($B702),A    ;
 $A6F5 LD HL,$B1A6     ;
 $A6F8 LD A,$64        ;
 $A6FA CALL $9C9F      ;
 $A6FD CP $50          ;
 $A6FF JR C,$A6BE      ;
 $A701 LD HL,$B1BA     ;
 $A704 CALL $72DD      ;
 $A707 JP $90D2        ;
 $A70A CALL $9F25      ;
 $A70D CP $FF          ;
 $A70F RET Z           ;
 $A710 SUB A           ;
 $A711 LD (IX+$00),$00 ;
 $A715 LD (IX+$01),$00 ;
 $A719 LD (IX+$02),$00 ;
 $A71D RET             ;
 $A71E CALL $9D44      ;
 $A721 LD IX,($B70C)   ;
 $A725 BIT 7,(IX+$07)  ;
 $A729 LD HL,$AFF4     ;
 $A72C JP NZ,$72DD     ;
 $A72F LD A,($CAA7)    ;
 $A732 LD ($CAA8),A    ;
 $A735 LD HL,$B2AA     ;
 $A738 JP $72DD        ;
 $A73B LD HL,$C3B9     ;
 $A73E BIT 3,(HL)      ;
 $A740 RET Z           ;
 $A741 CALL $97FF      ;
 $A744 LD IX,$C1AD     ;
 $A748 SET 3,(IX+$07)  ;
 $A74C LD A,$02        ;
 $A74E CALL $A18C      ;
 $A751 LD A,$02        ;
 $A753 LD IY,$C11B     ;
 $A757 CALL $9E25      ;
 $A75A RET Z           ;
 $A75B LD HL,$B109     ;
 $A75E JP $72DD        ;
 $A761 LD A,($B6EA)    ;
 $A764 CP $00          ;
 $A766 JR NZ,$A776     ;
 $A768 LD A,($C11C)    ;
 $A76B LD HL,$B11B     ;
 $A76E CP $FF          ;
 $A770 JP Z,$72DD      ;
 $A773 JP $9F76        ;
*$A776 LD A,($B6E7)    ;
 $A779 CP $0C          ;
 $A77B JP Z,$9138      ;
 $A77E CP $10          ;
 $A780 JP Z,$910E      ;
 $A783 RET             ;
 $A784 LD A,($B6EA)    ;
 $A787 CP $00          ;
 $A789 JP NZ,$A797     ;
 $A78C LD A,($C11C)    ;
 $A78F CP $FF          ;
 $A791 LD HL,$B11B     ;
 $A794 JP Z,$72DD      ;
*$A797 LD A,($B6E7)    ;
 $A79A CP $1E          ;
 $A79C JP Z,$8F3B      ;
 $A79F CP $0B          ;
 $A7A1 JP Z,$92ED      ;
 $A7A4 CP $18          ;
 $A7A6 JP Z,$8EEC      ;
 $A7A9 RET             ;
 $A7AA LD A,($C12B)    ;
 $A7AD CP $1D          ;
 $A7AF JR NZ,$A7B5     ;
 $A7B1 SUB A           ;
 $A7B2 LD ($CAA1),A    ;
*$A7B5 LD HL,$B153     ;
 $A7B8 CALL $72DD      ;
 $A7BB LD A,($CAA1)    ;
 $A7BE CP $00          ;
 $A7C0 RET NZ          ;
 $A7C1 JP $90D2        ;
 $A7C4 LD A,($B6EA)    ;
 $A7C7 CP $41          ;
 $A7C9 JP NZ,$93DA     ;
 $A7CC CALL $9D44      ;
 $A7CF LD IY,$0000     ;
 $A7D3 LD L,(IY+$01)   ;
 $A7D6 LD H,(IY+$02)   ;
 $A7D9 LD A,($B6F1)    ;
 $A7DC CP $00          ;
 $A7DE JR NZ,$A7EF     ;
 $A7E0 LD B,$03        ;
*$A7E2 LD A,(IY+$03)   ;
 $A7E5 LD (HL),A       ;
 $A7E6 INC HL          ;
 $A7E7 INC IY          ;
 $A7E9 DJNZ $A7E2      ;
 $A7EB LD IY,($A7D1)   ;
*$A7EF LD A,(IY+$05)   ;
 $A7F2 CALL $9BB1      ;
 $A7F5 INC IX          ;
 $A7F7 INC IX          ;
 $A7F9 PUSH IX         ;
 $A7FB LD A,(IY+$00)   ;
 $A7FE CALL $9BB1      ;
 $A801 INC IX          ;
 $A803 INC IX          ;
 $A805 PUSH IX         ;
 $A807 LD A,(IY+$03)   ;
 $A80A CALL $A0BA      ;
 $A80D PUSH DE         ;
 $A80E LD HL,$B1D0     ;
 $A811 JP $A1E3        ;
 $A814 LD A,($B6E9)    ;
 $A817 CALL $9F28      ;
 $A81A CP $FF          ;
 $A81C JP Z,$9F76      ;
 $A81F CALL $9D44      ;
 $A822 LD HL,$AF66     ;
 $A825 CALL $72DD      ;
 $A828 LD A,($C62B)    ;
 $A82B CP (IX+$02)     ;
 $A82E JR NZ,$A84C     ;
 $A830 CALL $A86E      ;
 $A833 JR C,$A842      ;
 $A835 LD HL,$AF76     ;
 $A838 CALL $A86E      ;
 $A83B JR C,$A86B      ;
 $A83D LD HL,$AF82     ;
 $A840 JR $A86B        ;
*$A842 LD A,$12        ;
 $A844 LD ($C61C),A    ;
 $A847 LD HL,$AF8B     ;
 $A84A JR $A86B        ;
*$A84C LD HL,$AF76     ;
 $A84F CALL $A86E      ;
 $A852 JR C,$A86B      ;
 $A854 LD A,(IX+$02)   ;
 $A857 LD IX,($B708)   ;
 $A85B LD (IX+$10),A   ;
 $A85E LD (IX+$01),$FF ;
 $A862 LD A,($B6E8)    ;
 $A865 CALL $9BDD      ;
 $A868 LD HL,$AF6D     ;
*$A86B JP $72DD        ;
*$A86E LD A,$64        ;
 $A870 CALL $9C9F      ;
 $A873 CP $32          ;
 $A875 RET             ;
 $A876 CALL $9D44      ;
 $A879 LD A,($C61C)    ;
 $A87C CP $12          ;
 $A87E RET NZ          ;
 $A87F LD HL,$AF92     ;
*$A882 CALL $72DD      ;
 $A885 LD A,($C62B)    ;
 $A888 CP $42          ;
 $A88A LD A,$42        ;
 $A88C JR NZ,$A890     ;
 $A88E LD A,$43        ;
*$A890 LD ($C62B),A    ;
 $A893 LD B,A          ;
 $A894 LD A,$FF        ;
 $A896 LD ($C61C),A    ;
 $A899 LD A,$29        ;
 $A89B JP $9BDD        ;
 $A89E CALL $97FF      ;
 $A8A1 LD A,($B6EA)    ;
 $A8A4 AND A           ;
 $A8A5 RET NZ          ;
 $A8A6 LD HL,$AFA4     ;
 $A8A9 JR $A882        ;
 $A8AB LD A,($B6F4)    ;
 $A8AE CP $01          ;
 $A8B0 RET NZ          ;
 $A8B1 SUB A           ;
 $A8B2 LD ($B6F4),A    ;
 $A8B5 INC A           ;
 $A8B6 CALL $7F1A      ;
 $A8B9 RET Z           ;
 $A8BA SUB A           ;
 $A8BB LD ($B6FB),A    ;
 $A8BE LD A,($B6E6)    ;
 $A8C1 LD ($C9E3),A    ;
 $A8C4 LD BC,($B6E8)   ;
 $A8C8 LD ($C9E4),BC   ;
 $A8CC LD A,$42        ;
 $A8CE LD ($C9E2),A    ;
 $A8D1 RET             ;
 $A8D2 LD A,($C4C1)    ;
 $A8D5 LD HL,$B6F5     ;
 $A8D8 CP (HL)         ;
 $A8D9 RET NZ          ;
 $A8DA LD HL,$C122     ;
 $A8DD BIT 7,(HL)      ;
 $A8DF RET Z           ;
 $A8E0 CALL $9D44      ;
 $A8E3 LD HL,($B6EE)   ;
 $A8E6 INC HL          ;
 $A8E7 INC HL          ;
 $A8E8 LD E,(HL)       ;
 $A8E9 INC HL          ;
 $A8EA LD D,(HL)       ;
 $A8EB PUSH DE         ;
 $A8EC POP HL          ;
 $A8ED CALL $A1E3      ;
 $A8F0 LD A,$01        ;
 $A8F2 LD ($B6F9),A    ;
 $A8F5 RET             ;
 $A8F6 CALL $9D44      ;
 $A8F9 SUB A           ;
 $A8FA LD ($B6F9),A    ;
 $A8FD CALL $7F1A      ;
 $A900 JR Z,$A915      ;
 $A902 LD BC,$0018     ;
 $A905 LD DE,($B6EE)   ;
 $A909 LD A,(DE)       ;
*$A90A CPIR            ;
 $A90C JR NZ,$A915     ;
 $A90E INC DE          ;
 $A90F LD A,(DE)       ;
 $A910 DEC DE          ;
 $A911 CP (HL)         ;
 $A912 JR NZ,$A90A     ;
 $A914 RET             ;
*$A915 CALL $9D44      ;
 $A918 LD A,$01        ; {Set #R$B702 to $01 (daytime).
 $A91A LD ($B702),A    ; }
 $A91D LD HL,$B1DB     ; #REGhl=#R$B1DB("someone strangle(s|d|ing|es) you from
                       ; behind").
 $A920 CALL $72DD      ; Call #R$72DD.
 $A923 JP $90D2        ; Jump to #R$90D2.
 $A926 LD A,($C4C1)    ;
 $A929 LD HL,$B6F5     ;
 $A92C CP (HL)         ;
 $A92D RET NZ          ;
 $A92E CALL $9D44      ;
 $A931 LD HL,$B2D9     ;
 $A934 LD A,$08        ;
 $A936 CALL $9C9F      ;
 $A939 JP NC,$A1E3     ;
 $A93C LD IX,$C31A     ;
 $A940 LD A,$44        ;
 $A942 CP (IX+$01)     ;
 $A945 JP Z,$A1E3      ;
 $A948 LD HL,$B2E7     ;
 $A94B JP $A1E3        ;
 $A94E LD A,($B6F6)    ;
 $A951 LD HL,$B6F5     ;
 $A954 CP (HL)         ;
 $A955 RET NZ          ;
 $A956 CALL $9D44      ;
 $A959 LD A,$1B        ;
 $A95B LD ($B6E7),A    ;
 $A95E LD A,$00        ;
 $A960 LD ($B6E8),A    ;
 $A963 LD A,$FF        ;
 $A965 LD ($B6E9),A    ;
 $A968 CALL $9F76      ;
 $A96B CALL $92B5      ;
 $A96E JP $90D2        ;
 $A971 CALL $9D44      ; Call #R$9D44.
 $A974 LD A,$47        ; {Call #R$977F using object #R$C63F($47) -
 $A976 CALL $977F      ; "#TEXTTOKEN($C63F + $08, 1)".}
 $A979 LD A,$48        ; {Call #R$977F using object #R$C651($48) -
 $A97B CALL $977F      ; "#TEXTTOKEN($C651 + $08, 1)".}
 $A97E LD HL,$C646     ; #REGhl=#R$C646(attributes) for #R$C63F($47) -
                       ; "#TEXTTOKEN($C63F + $08, 1)".
 $A981 RES 7,(HL)      ; Reset bit 7 of the attribute byte set to "Visible" =
                       ; "No".
 $A983 LD HL,$C658     ; #REGhl=#R$C658(attributes) for #R$C651($48) -
                       ; "#TEXTTOKEN($C651 + $08, 1)".
 $A986 RES 7,(HL)      ; Reset bit 7 of the attribute byte set to "Visible" =
                       ; "No".
 $A988 LD HL,$B262     ; #REGhl=#R$B262("in a clearing with two stone
                       ; trolls.").
 $A98B LD ($BAC4),HL   ; Write #REGhl to #R$BAC4(the empty location
                       ; description) for #R$BABC($05) - "#TEXTTOKEN($BABC +
                       ; $02, $01)".
 $A98E LD HL,$BABC     ; #REGhl=Location #R$BABC($05) - "#TEXTTOKEN($BABC +
                       ; $02, $01)".
 $A991 RES 6,(HL)      ; Reset bit 6 of the attribute byte.
 $A993 LD A,$47        ; {Call #R$9D53 using object #R$C63F($47) -
 $A995 CALL $9D53      ; "#TEXTTOKEN($C63F + $08, 1)".}
 $A998 LD A,$48        ; {Call #R$9D53 using object #R$C651($48) -
 $A99A CALL $9D53      ; "#TEXTTOKEN($C651 + $08, 1)".}
 $A99D LD HL,$B30B     ; #REGhl=#R$B30B("day dawn(s|d|ing|es)").
 $A9A0 LD A,$01        ; {Set #R$B702 to $01 (daytime).
 $A9A2 LD ($B702),A    ; }
 $A9A5 CALL $72DD      ; Call #R$72DD.
 $A9A8 LD IX,$CC00     ; #REGix=#R$CC00.
 $A9AC LD A,$05        ; {Load the graphics data for #R$E142
 $A9AE CALL $9DBD      ; "#LOCATIONNAME$05".}
 $A9B1 LD L,(IX+$01)   ; {#REGhl=graphics data pointer.
 $A9B4 LD H,(IX+$02)   ; }
 $A9B7 LD (HL),$05     ; Change the paper colour to $05 (cyan).
 $A9B9 INC HL          ; Increment the graphics data pointer by one.
 $A9BA LD (HL),$28     ; Change the ??? colour to $28 ().
 $A9BC RET             ; Return.
 $A9BD LD A,($B6F5)    ;
 $A9C0 CP $05          ;
 $A9C2 RET NZ          ;
 $A9C3 CALL $9D44      ;
 $A9C6 LD A,($B6EA)    ;
 $A9C9 LD HL,$B238     ; #REGhl=#R$B238("blimey, look at this!! Can yer
                       ; cook'em?[0x16]").
 $A9CC CP $47          ;
 $A9CE JR Z,$A9D3      ;
 $A9D0 LD HL,$B24C     ; #REGhl=#R$B24C("yer can try, but he wouldn't make
                       ; above a mouthfull.").
*$A9D3 JP $A1E3        ; Jump to #R$A1E3.
; This entry point is used by the routine at #R$96B3.
*$A9D6 LD A,($C5CE)    ;
 $A9D9 CP $25          ;
 $A9DB RET NZ          ;
 $A9DC LD HL,$B3D9     ; #REGhl=#R$B3D9.
 $A9DF CALL $72DD      ; Call #R$72DD.
 $A9E2 JP $90DF        ; Jump to #R$90DF.
 $A9E5 LD A,($B6F6)    ;
 $A9E8 LD HL,$B6F5     ;
 $A9EB CP (HL)         ;
 $A9EC RET NZ          ;
 $A9ED LD IX,$C663     ;
 $A9F1 LD A,(IX+$10)   ;
 $A9F4 CP $00          ;
 $A9F6 JR Z,$A9FE      ;
 $A9F8 LD A,$41        ;
 $A9FA CP (IX+$01)     ;
 $A9FD RET NZ          ;
*$A9FE CALL $9D44      ;
 $AA01 LD A,($B6F6)    ;
 $AA04 LD (IX+$10),A   ;
 $AA07 LD (IX+$01),$41 ;
 $AA0B LD BC,$0026     ;
 $AA0E LD ($B6E8),BC   ;
 $AA12 LD A,$1D        ;
 $AA14 LD ($B6E7),A    ;
 $AA17 LD ($B708),IX   ;
 $AA1B LD HL,$C11B     ;
 $AA1E LD ($B70A),HL   ;
 $AA21 CALL $9F76      ;
 $AA24 JP $939E        ;
 $AA27 LD IY,($B708)   ;
 $AA2B LD A,(IY+$10)   ;
 $AA2E LD B,A          ;
 $AA2F CALL $9F2D      ;
 $AA32 CP $FF          ;
 $AA34 LD HL,$B301     ;
 $AA37 JP Z,$72DD      ;
 $AA3A LD A,(IX+$00)   ;
 $AA3D CP $0A          ;
 $AA3F JP NZ,$B301     ;
 $AA42 CALL $9D44      ;
 $AA45 LD A,($B6E8)    ;
 $AA48 LD IX,($B70C)   ;
 $AA4C LD (IX+$01),A   ;
 $AA4F CALL $9BDD      ;
 $AA52 LD A,($B6EA)    ;
 $AA55 CP $00          ;
 $AA57 RET NZ          ;
 $AA58 LD A,B          ;
 $AA59 JP $9630        ;
 $AA5C LD IX,$C205     ;
 $AA60 RES 3,(IX+$07)  ;
 $AA64 RES 5,(IX+$07)  ;
 $AA68 SLA (IX+$05)    ;
 $AA6C LD DE,$0623     ;
 $AA6F LD ($C20F),DE   ;
 $AA73 RET             ;
 $AA74 LD HL,$C2BC     ;
 $AA77 BIT 5,(HL)      ;
 $AA79 RET NZ          ;
 $AA7A LD A,($CAC3)    ;
 $AA7D LD ($CAC4),A    ;
 $AA80 LD HL,$C2BC     ;
 $AA83 RES 7,(HL)      ;
 $AA85 LD A,($C12B)    ;
 $AA88 CP $2A          ;
 $AA8A RET NZ          ;
*$AA8B LD HL,$B2A4     ; #REGhl=#R$B2A4("the hole vanish(s|d|ing|es)[0x15]").
 $AA8E JP $72DD        ; Jump to #R$72DD.
 $AA91 LD HL,$C2BC     ; #REGhl=#R$C2BC(attributes) for object #R$C2B5($0B) -
                       ; "#TEXTTOKEN($C2B5 + $08, $01)".
 $AA94 SET 7,(HL)      ; Set bit 7 of the attribute byte to "Visible" = "Yes".
 $AA96 LD A,($C12B)    ;
 $AA99 CP $2A          ;
 $AA9B RET NZ          ;
 $AA9C LD HL,$B277     ; #REGhl=#R$B277.
 $AA9F JP $72DD        ; Jump to #R$72DD.
 $AAA2 CALL $97FF      ;
 $AAA5 LD A,$06        ;
 $AAA7 LD ($CAC4),A    ;
 $AAAA LD HL,$C2BC     ;
 $AAAD SET 0,(HL)      ;
 $AAAF RES 7,(HL)      ;
 $AAB1 JR $AA8B        ;
 $AAB3 LD HL,$C388     ;
 $AAB6 SET 5,(HL)      ;
 $AAB8 LD HL,$B037     ; #REGhl=#R$B037("the magic door
                       ; open(s|d|ing|es).[0x14]").
 $AABB CALL $AAC7      ;
 $AABE LD HL,$B113     ;
 $AAC1 CALL $AAC7      ;
 $AAC4 JP $AAE0        ;
*$AAC7 LD A,($C12B)    ;
 $AACA CP $1E          ;
 $AACC JP Z,$72DD      ;
 $AACF CP $1C          ;
 $AAD1 JP Z,$72DD      ;
 $AAD4 RET             ;
 $AAD5 LD HL,$C388     ;
 $AAD8 RES 5,(HL)      ;
 $AADA LD HL,$B03F     ; #REGhl=#R$B03F("the magic door
                       ; close(s|d|ing|es).[0x14]").
 $AADD JP $AAC7        ;
*$AAE0 LD IX,$C31A     ;
 $AAE4 LD A,(IX+$01)   ;
 $AAE7 CP $FF          ;
 $AAE9 RET Z           ;
 $AAEA CALL $9BCA      ;
 $AAED LD ($B70C),IX   ;
 $AAF1 BIT 7,(IX+$07)  ;
 $AAF5 JP Z,$A3BC      ;
 $AAF8 RET             ;
 $AAF9 LD A,($B6EA)    ;
 $AAFC CP $00          ;
 $AAFE RET NZ          ;
 $AAFF LD A,$01        ;
 $AB01 LD ($B700),A    ;
 $AB04 LD A,($CAB5)    ;
 $AB07 LD ($CAB6),A    ;
 $AB0A RET             ;
 $AB0B SUB A           ;
 $AB0C LD ($B700),A    ;
 $AB0F RET             ;
 $AB10 LD A,($C12B)    ;
 $AB13 CP $1A          ;
 $AB15 RET NZ          ;
 $AB16 LD HL,$B0FD     ; #REGhl=#R$B0FD("the spider web is slowly smothering
                       ; you.").
 $AB19 CALL $72DD      ; Call #R$72DD.
 $AB1C JP $90D2        ; Jump to #R$90D2.
 $AB1F LD HL,$B311     ; #REGhl=#R$B311("You see some pale bulbous eyes
                       ; star(s|d|ing|es) at You[0x15]").
 $AB22 CALL $72DD      ; Call #R$72DD.
 $AB25 LD A,($C12B)    ;
 $AB28 LD C,A          ;
 $AB29 LD HL,$B6F3     ;
 $AB2C CP (HL)         ;
 $AB2D RET Z           ;
 $AB2E LD B,(HL)       ;
 $AB2F LD A,$02        ;
 $AB31 CP B            ;
 $AB32 JR NZ,$AB36     ;
 $AB34 LD A,$03        ;
*$AB36 CP C            ;
 $AB37 RET Z           ;
 $AB38 JR $AB4A        ;
 $AB3A LD A,($C12B)    ;
 $AB3D CP $02          ;
 $AB3F JR Z,$AB44      ;
 $AB41 CP $03          ;
 $AB43 RET NZ          ;
*$AB44 LD HL,$B311     ; #REGhl=#R$B311("You see some pale bulbous eyes
                       ; star(s|d|ing|es) at You[0x15]").
 $AB47 CALL $72DD      ; Call #R$72DD.
*$AB4A LD HL,$B31F     ; #REGhl=#R$B31F("some thing drop(s|d|ing|es) from above
                       ; and sting(s|d|ing|es)[0x15]").
 $AB4D CALL $72DD      ; Call #R$72DD.
 $AB50 JP $90D2        ; Jump to #R$90D2.

; Actions
@label=Actions
w$AB53 DEFW $0480    ; {"01) north - - go"
 $AB55 DEFW $0000    ;
 $AB57 DEFW $0000    ;
 $AB59 DEFW $02DE    ; }
 $AB5B DEFW $0607    ; {"02) south - - go"
 $AB5D DEFW $0000    ;
 $AB5F DEFW $0000    ;
 $AB61 DEFW $02DE    ; }
 $AB63 DEFW $01FE    ; {"03) east - - go"
 $AB65 DEFW $0000    ;
 $AB67 DEFW $0000    ;
 $AB69 DEFW $02DE    ; }
 $AB6B DEFW $0779    ; {"04) west - - go"
 $AB6D DEFW $0000    ;
 $AB6F DEFW $0000    ;
 $AB71 DEFW $02DE    ; }
 $AB73 DEFW $0485    ; {"05) northeast - - go"
 $AB75 DEFW $0000    ;
 $AB77 DEFW $0000    ;
 $AB79 DEFW $02DE    ; }
 $AB7B DEFW $048E    ; {"06) northwest - - go"
 $AB7D DEFW $0000    ;
 $AB7F DEFW $0000    ;
 $AB81 DEFW $02DE    ; }
 $AB83 DEFW $060C    ; {"07) southeast - - go"
 $AB85 DEFW $0000    ;
 $AB87 DEFW $0000    ;
 $AB89 DEFW $02DE    ; }
 $AB8B DEFW $0615    ; {"08) southwest - - go"
 $AB8D DEFW $0000    ;
 $AB8F DEFW $0000    ;
 $AB91 DEFW $02DE    ; }
 $AB93 DEFW $0725    ; {"09) up - - go"
 $AB95 DEFW $0000    ;
 $AB97 DEFW $0000    ;
 $AB99 DEFW $02DE    ; }
 $AB9B DEFW $01C4    ; {"0a) down - - go"
 $AB9D DEFW $0000    ;
 $AB9F DEFW $0000    ;
 $ABA1 DEFW $02DE    ; }
 $ABA3 DEFW $E658    ; {"0b) strike - with -"
 $ABA5 DEFW $0000    ;
 $ABA7 DEFW $0796    ;
 $ABA9 DEFW $4000    ; }
 $ABAB DEFW $8134    ; {"0c) close - - -"
 $ABAD DEFW $0000    ;
 $ABAF DEFW $0000    ;
 $ABB1 DEFW $4000    ; }
 $ABB3 DEFW $81E8    ; {"0d) drop - - -"
 $ABB5 DEFW $0000    ;
 $ABB7 DEFW $8000    ;
 $ABB9 DEFW $0000    ; }
 $ABBB DEFW $C1E8    ; {"0e) drop - in -"
 $ABBD DEFW $0000    ;
 $ABBF DEFW $0378    ;
 $ABC1 DEFW $4000    ; }
 $ABC3 DEFW $E073    ; {"0f) attack - with -"
 $ABC5 DEFW $0000    ;
 $ABC7 DEFW $4796    ;
 $ABC9 DEFW $4000    ; }
 $ABCB DEFW $84B4    ; {"10) open - - -"
 $ABCD DEFW $0000    ;
 $ABCF DEFW $0000    ;
 $ABD1 DEFW $4000    ; }
 $ABD3 DEFW $C508    ; {"11) put - in -"
 $ABD5 DEFW $0000    ;
 $ABD7 DEFW $0378    ;
 $ABD9 DEFW $4000    ; }
 $ABDB DEFW $C508    ; {"12) put - on -"
 $ABDD DEFW $0000    ;
 $ABDF DEFW $04AA    ;
 $ABE1 DEFW $4000    ; }
 $ABE3 DEFW $868C    ; {"13) take - - -"
 $ABE5 DEFW $0000    ;
 $ABE7 DEFW $0000    ;
 $ABE9 DEFW $4000    ; }
 $ABEB DEFW $C68C    ; {"14) take out of -"
 $ABED DEFW $04BF    ;
 $ABEF DEFW $049C    ;
 $ABF1 DEFW $4000    ; }
 $ABF3 DEFW $C68C    ; {"15) take from - -"
 $ABF5 DEFW $02B5    ;
 $ABF7 DEFW $0000    ;
 $ABF9 DEFW $4000    ; }
 $ABFB DEFW $968C    ; {"16) take off - -"
 $ABFD DEFW $249F    ;
 $ABFF DEFW $0000    ;
 $AC01 DEFW $4000    ; }
 $AC03 DEFW $0413    ; {"17) look - - -"
 $AC05 DEFW $1000    ;
 $AC07 DEFW $0000    ;
 $AC09 DEFW $4000    ; }
 $AC0B DEFW $8413    ; {"18) look through - -"
 $AC0D DEFW $26C1    ;
 $AC0F DEFW $0000    ;
 $AC11 DEFW $0000    ; }
 $AC13 DEFW $8413    ; {"19) look across - -"
 $AC15 DEFW $2043    ;
 $AC17 DEFW $0000    ;
 $AC19 DEFW $0000    ; }
 $AC1B DEFW $0392    ; {"1a) inventory - - -"
 $AC1D DEFW $1000    ;
 $AC1F DEFW $0000    ;
 $AC21 DEFW $4000    ; }
 $AC23 DEFW $8202    ; {"1b) eat - - -"
 $AC25 DEFW $0000    ;
 $AC27 DEFW $0000    ;
 $AC29 DEFW $0000    ; }
 $AC2B DEFW $823E    ; {"1c) examine - - -"
 $AC2D DEFW $0000    ;
 $AC2F DEFW $0000    ;
 $AC31 DEFW $4000    ; }
 $AC33 DEFW $C2D4    ; {"1d) give to - -"
 $AC35 DEFW $06D1    ;
 $AC37 DEFW $1000    ;
 $AC39 DEFW $6000    ; }
 $AC3B DEFW $82DE    ; {"1e) go through - -"
 $AC3D DEFW $26C1    ;
 $AC3F DEFW $0000    ;
 $AC41 DEFW $0000    ; }
 $AC43 DEFW $822D    ; {"1f) enter - - -"
 $AC45 DEFW $8000    ;
 $AC47 DEFW $0000    ;
 $AC49 DEFW $0000    ; }
 $AC4B DEFW $82DE    ; {"20) go into - -"
 $AC4D DEFW $A38E    ;
 $AC4F DEFW $0000    ;
 $AC51 DEFW $0000    ; }
 $AC53 DEFW $81E3    ; {"21) drink - - -"
 $AC55 DEFW $0000    ;
 $AC57 DEFW $0000    ;
 $AC59 DEFW $0000    ; }
 $AC5B DEFW $8228    ; {"22) empty - - -"
 $AC5D DEFW $0000    ;
 $AC5F DEFW $0000    ;
 $AC61 DEFW $0000    ; }
 $AC63 DEFW $C261    ; {"23) fill - with -"
 $AC65 DEFW $0000    ;
 $AC67 DEFW $0796    ;
 $AC69 DEFW $4000    ; }
 $AC6B DEFW $056C    ; {"24) run - - -"
 $AC6D DEFW $0000    ;
 $AC6F DEFW $0000    ;
 $AC71 DEFW $0000    ; }
 $AC73 DEFW $C3F2    ; {"25) lock - with -"
 $AC75 DEFW $0000    ;
 $AC77 DEFW $0796    ;
 $AC79 DEFW $4000    ; }
 $AC7B DEFW $C712    ; {"26) unlock - with -"
 $AC7D DEFW $0000    ;
 $AC7F DEFW $0796    ;
 $AC81 DEFW $4000    ; }
 $AC83 DEFW $9285    ; {"27) follow - - -"
 $AC85 DEFW $0000    ;
 $AC87 DEFW $4000    ;
 $AC89 DEFW $0000    ; }
 $AC8B DEFW $8772    ; {"28) wear - - -"
 $AC8D DEFW $0000    ;
 $AC8F DEFW $0000    ;
 $AC91 DEFW $0000    ; }
 $AC93 DEFW $86C8    ; {"29) throw - - -"
 $AC95 DEFW $0000    ;
 $AC97 DEFW $0000    ;
 $AC99 DEFW $0000    ; }
 $AC9B DEFW $C6C8    ; {"2a) throw - at -"
 $AC9D DEFW $0000    ;
 $AC9F DEFW $2070    ;
 $ACA1 DEFW $0000    ; }
 $ACA3 DEFW $C6C8    ; {"2b) throw - across -"
 $ACA5 DEFW $0000    ;
 $ACA7 DEFW $0043    ;
 $ACA9 DEFW $4000    ; }
 $ACAB DEFW $C6C8    ; {"2c) throw - through -"
 $ACAD DEFW $0000    ;
 $ACAF DEFW $06C1    ;
 $ACB1 DEFW $4000    ; }
 $ACB3 DEFW $80D3    ; {"2d) burn - - -"
 $ACB5 DEFW $0000    ;
 $ACB7 DEFW $4000    ;
 $ACB9 DEFW $0000    ; }
 $ACBB DEFW $C6CD    ; {"2e) tie - to -"
 $ACBD DEFW $0000    ;
 $ACBF DEFW $06D1    ;
 $ACC1 DEFW $4000    ; }
 $ACC3 DEFW $8178    ; {"2f) cut - - -"
 $ACC5 DEFW $0000    ;
 $ACC7 DEFW $0000    ;
 $ACC9 DEFW $0000    ; }
 $ACCB DEFW $80F4    ; {"30) capture - - -"
 $ACCD DEFW $0000    ;
 $ACCF DEFW $4000    ;
 $ACD1 DEFW $0000    ; }
 $ACD3 DEFW $8500    ; {"31) pull - - -"
 $ACD5 DEFW $0000    ;
 $ACD7 DEFW $0000    ;
 $ACD9 DEFW $0000    ; }
 $ACDB DEFW $867C    ; {"32) swim - - -"
 $ACDD DEFW $0000    ;
 $ACDF DEFW $0000    ;
 $ACE1 DEFW $4000    ; }
 $ACE3 DEFW $8720    ; {"33) untie - - -"
 $ACE5 DEFW $0000    ;
 $ACE7 DEFW $8000    ;
 $ACE9 DEFW $4000    ; }
 $ACEB DEFW $812F    ; {"34) climb - - -"
 $ACED DEFW $0000    ;
 $ACEF DEFW $0000    ;
 $ACF1 DEFW $4000    ; }
 $ACF3 DEFW $8690    ; {"35) talk to - -"
 $ACF5 DEFW $26D1    ;
 $ACF7 DEFW $4000    ;
 $ACF9 DEFW $4000    ; }
 $ACFB DEFW $812F    ; {"36) climb into - -"
 $ACFD DEFW $238E    ;
 $ACFF DEFW $0000    ;
 $AD01 DEFW $4000    ; }
 $AD03 DEFW $812F    ; {"37) climb out of -"
 $AD05 DEFW $24BF    ;
 $AD07 DEFW $049C    ;
 $AD09 DEFW $8000    ; }
 $AD0B DEFW $93A1    ; {"38) jump onto - -"
 $AD0D DEFW $24B0    ;
 $AD0F DEFW $0000    ;
 $AD11 DEFW $0000    ; }
 $AD13 DEFW $81A9    ; {"39) dig - - -"
 $AD15 DEFW $0000    ;
 $AD17 DEFW $0000    ;
 $AD19 DEFW $4000    ; }
 $AD1B DEFW $8594    ; {"3a) shoot - - -"
 $AD1D DEFW $0000    ;
 $AD1F DEFW $4000    ;
 $AD21 DEFW $4000    ; }
 $AD23 DEFW $810D    ; {"3b) carry - - -"
 $AD25 DEFW $0000    ;
 $AD27 DEFW $8000    ;
 $AD29 DEFW $4000    ; }
 $AD2B DEFW $0000    ; ""
 $AD2D DEFW $069F    ; "THE"
 $AD2F DEFW $0040    ; "A"
 $AD31 DEFW $0058    ; "AN"
 $AD33 DEFW $0603    ; "SOME"
 $AD35 DEFW $069F    ; "THE"
 $AD37 DEFW $069F    ; "THE"
 $AD39 DEFW $069F    ; "THE"
 $AD3B DEFW $0603    ; "SOME"

; Common Words
@label=CommonWords
w$AD3D DEFW $0040    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("A")
 $AD3F DEFW $005B    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("AND")
 $AD41 DEFW $0065    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("ARE")
 $AD43 DEFW $0070    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("AT")
 $AD45 DEFW $0822    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("BE")
 $AD47 DEFW $00AF    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("BLOW")
 $AD49 DEFW $00D7    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("BUT")
 $AD4B DEFW $00EE    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("CANNOT")
 $AD4D DEFW $085E    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("CARRYING")
 $AD4F DEFW $08C2    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("DO")
 $AD51 DEFW $01C0    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("DOOR")
 $AD53 DEFW $01C8    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("DRAGON")
 $AD55 DEFW $024F    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("FALL")
 $AD57 DEFW $02B5    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("FROM")
 $AD59 DEFW $0989    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("HERE")
 $AD5B DEFW $0373    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("I")
 $AD5D DEFW $0378    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("IN")
 $AD5F DEFW $039B    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("IS")
 $AD61 DEFW $039E    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("IT")
 $AD63 DEFW $0A5A    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("NOT")
 $AD65 DEFW $049C    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("OF")
 $AD67 DEFW $04AA    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("ON")
 $AD69 DEFW $0AAF    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("SEE")
 $AD6B DEFW $0603    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("SOME")
 $AD6D DEFW $069F    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("THE")
 $AD6F DEFW $0B61    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("THERE")
 $AD71 DEFW $0B6B    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("THIS")
 $AD73 DEFW $06D1    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("TO")
 $AD75 DEFW $06D4    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("TOO")
 $AD77 DEFW $0BC8    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("WHAT")
 $AD79 DEFW $0796    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("WITH")
 $AD7B DEFW $07A8    ; #R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256+$6000))("YOU")

; Text Messages
@label=TextMessages
b$AD7D DEFB $66,$6C,$61,$83,$47,$8B,$EA,$20 ; {" but fall and hit your
 $AD85 DEFB $48,$45,$41,$44,$15             ; head[0x15]"}
 $AD8A DEFB $66,$6C,$61,$85,$E6,$8B,$EA,$B5 ; {" but fall and smash your skull"
 $AD92 DEFB $BE                             ; }
 $AD93 DEFB $6F,$69,$73,$89,$C5,$78,$8B,$DE ; {" i do not know the word "
 $AD9B DEFB $20,$22,$20,$16                 ; [0x16]"}
 $AD9F DEFB $7D,$20,$3F,$14                 ; " what ?[0x14]"
 $ADA3 DEFB $0D,$F7,$A8,$01,$2E,$0D,$FB,$87 ; {"[0x0d] You[0x01].[0x0d] Time
 $ADAB DEFB $8A,$74,$2E,$2E,$15             ; passes..[0x15]"}
 $ADB0 DEFB $6F,$69,$73,$89,$C5,$78,$8B,$A9 ; {" i do not know the verb
 $ADB8 DEFB $20,$22,$01,$01,$01,$20,$22,$14 ; "[0x01][0x01][0x01] "[0x14]"}
 $ADC0 DEFB $01,$01,$01,$00,$01,$01,$01,$7D ; {"[0x01][0x01][0x01][0x00][0x01][0x01][0x01]
 $ADC8 DEFB $20,$3F,$20,$16                 ; what ? [0x16]"}
 $ADCC DEFB $8B,$D1,$01,$20,$3F,$20,$16     ; " which[0x01] ? [0x16]"
 $ADD3 DEFB $6F,$69,$73,$76,$00,$6E,$14     ; " i do not see[0x00] here[0x14]"
 $ADDA DEFB $14                             ; "[0x14]"
 $ADDB DEFB $6F,$76,$8A,$5D,$A6,$D1         ; " i see nothing to."
 $ADE1 DEFB $0B,$F9,$01,$01,$01,$14         ; "[0x0b] D[0x01][0x01][0x14]"
 $ADE7 DEFB $0B,$F3,$01,$01,$01,$00,$01,$01 ; {"[0x0b]
 $ADEF DEFB $01,$14                         ; Eat[0x01][0x01][0x00][0x01][0x01][0x01][0x14]"
                                            ; }
 $ADF1 DEFB $10,$73,$68,$72,$15             ; "You are not carrying it[0x15]"
 $ADF6 DEFB $10,$68,$15                     ; "You are carrying[0x15]"
 $ADF9 DEFB $13,$68,$14                     ; "[0x13] carrying[0x14]"
 $ADFC DEFB $61,$72,$C2,$CE,$8B,$46,$B8,$1A ; " and it get(s|d|ing|es) swept
                                            ; away"
 $AE04 DEFB $07,$71,$7C,$83,$27,$7B,$B3,$D4 ; "[0x07] is too heavy to lift"
 $AE0C DEFB $10,$68,$7C,$BA,$4B             ; "You are carrying too much"
 $AE11 DEFB $10,$80,$51,$68,$07,$15         ; "You are already
                                            ; carrying[0x07][0x15]"
 $AE17 DEFB $7B,$78,$16                     ; " to the[0x16]"
 $AE1A DEFB $09,$71,$7C,$B2,$B9             ; "[0x09] is too full"
 $AE1F DEFB $72,$71,$B1,$8E                 ; " it is dark"
 $AE23 DEFB $04,$71,$7C,$85,$E1,$82,$8F,$06 ; {"[0x04] is too small for you to
 $AE2B DEFB $7B,$B2,$2D                     ; enter"}
 $AE2E DEFB $04,$71,$7C,$82,$B9,$82,$8F,$06 ; {"[0x04] is too full for you
 $AE36 DEFB $7B,$D2,$2D,$15                 ; to{5} enter[0x15]"}
 $AE3A DEFB $7E,$84,$AD,$8B,$C4,$CA,$7E,$80 ; {" with one well
 $AE42 DEFB $AF,$06,$88,$66,$0E,$B5,$BE     ; place(s|d|ing|es) blow you
                                            ; cleave[0x0e] skull"}
 $AE49 DEFB $0C,$20,$56,$49,$4F,$4C,$45,$4E ; {"[0x0c] violent attack almost
 $AE51 DEFB $54,$80,$73,$87,$D9,$C3,$A8,$06 ; kill(s|d|ing|es)You[0x15]"
 $AE59 DEFB $15                             ; }
 $AE5A DEFB $06,$82,$D4,$07,$60,$87,$41,$D1 ; {"You give[0x07] a vicious{5} cut
 $AE62 DEFB $78,$70,$78,$85,$39,$2D,$0E,$8B ; in the ribs-[0x0e] strength is
 $AE6A DEFB $2E,$71,$89,$02,$B2,$53         ; failing fast"}
 $AE70 DEFB $60,$84,$6A,$85,$CF,$CA,$25,$0E ; {" a nasty slice
 $AE78 DEFB $B3,$22                         ; miss(s|d|ing|es)[0x0e] heart"}
 $AE7A DEFB $06,$85,$CF,$0E,$2D,$83,$12,$80 ; {"You slice[0x0e]- hand blood
 $AE82 DEFB $B3,$88,$CA,$85,$DB,$7B,$78,$B9 ; drips slowly to the ground"
 $AE8A DEFB $65                             ; }
 $AE8B DEFB $06,$82,$D4,$07,$60,$84,$6A,$D5 ; {"You give[0x07] a nasty{5} slash
 $AE93 DEFB $C3,$70,$78,$B3,$C9             ; in the leg"}
 $AE98 DEFB $06,$83,$47,$07,$83,$16,$75,$78 ; {"You hit[0x07] hard on the
 $AEA0 DEFB $85,$9E,$2D,$07,$9B,$03,$61,$87 ; shoulder-[0x07] stagger(s) and
 $AEA8 DEFB $D9,$92,$4F,$15                 ; almost fall(s)[0x15]"}
 $AEAC DEFB $60,$82,$53,$65,$89,$BF,$78,$8B ; {" a fast blow knocks the wind
 $AEB4 DEFB $DA,$84,$BF,$74,$07,$15         ; out of[0x07][0x15]"}
 $AEBA DEFB $60,$82,$53,$86,$5E,$8B,$40,$07 ; {" a fast stroke sweeps[0x07]
 $AEC2 DEFB $84,$9F,$0E,$82,$5D,$2C,$66,$11 ; off[0x0e] feet, but[0x11] on
 $AECA DEFB $75,$89,$6F,$70,$60,$BA,$29     ; guard in a moment"}
 $AED1 DEFB $06,$83,$47,$07,$7E,$60,$89,$4C ; {"You hit[0x07] with a glancing
 $AED9 DEFB $65,$61,$83,$C4,$07,$8A,$2F,$B6 ; blow and leave[0x07] momentarily
 $AEE1 DEFB $70                             ; stunned"}
 $AEE2 DEFB $06,$8B,$81,$07,$80,$7C,$2D,$07 ; {"You thrust[0x07] back-[0x07]
 $AEEA DEFB $99,$E8,$0E,$89,$35,$66,$9A,$A4 ; lose(s)[0x0e] footing but
 $AEF2 DEFB $B5,$0C                         ; recover(s) quickly"}
 $AEF4 DEFB $06,$8B,$4B,$88,$4B,$63,$0E,$80 ; {"You swing broadside at[0x0e]
 $AEFC DEFB $BF,$66,$63,$78,$89,$C9,$8A,$29 ; body but at the last moment[0x07]
 $AF04 DEFB $07,$93,$A1,$B8,$08             ; jump(s) aside"}
 $AF09 DEFB $0C,$03,$8B,$40,$8A,$7A,$81,$34 ; {"[0x0c][0x03] sweeps past close
 $AF11 DEFB $7B,$0E,$B1,$FB                 ; to[0x0e] ear"}
 $AF15 DEFB $06,$85,$C3,$63,$07,$66,$78,$65 ; {"You slash at[0x07] but the blow
 $AF1D DEFB $71,$B9,$A0                     ; is ineffective"}
 $AF20 DEFB $06,$88,$3E,$0C,$03,$2C,$66,$11 ; {"You brandish[0x0c][0x03],
 $AF28 DEFB $75,$B9,$6F                     ; but[0x11] on guard"}
 $AF2B DEFB $06,$8B,$4B,$82,$57,$63,$07,$66 ; {"You swing feebly at[0x07] but
 $AF33 DEFB $8A,$25,$88,$5B,$60,$87,$7D,$B9 ; miss by a wide margin"
 $AF3B DEFB $FD                             ; }
 $AF3C DEFB $06,$8A,$B2,$8B,$8B,$2D,$06,$8B ; {"You seem tired-you stagger but
 $AF44 DEFB $03,$66,$87,$28,$4C,$59,$88,$13 ; valiantly attempt another blow"
 $AF4C DEFB $80,$5E,$B0,$AF                 ; }
 $AF50 DEFB $66,$78,$88,$CF,$71,$8B,$BB,$2E ; {" but the effort is
 $AF58 DEFB $0E,$88,$A2,$71,$7C,$B6,$64     ; wasted.[0x0e] defense is too
                                            ; strong"}
 $AF5F DEFB $7F,$67,$83,$A8,$7E,$09,$15     ; " you cannot kill
                                            ; with[0x09][0x15]"
 $AF66 DEFB $72,$CA,$AB,$80,$43,$A0,$5B     ; " it sail(s|d|ing|es) across
                                            ; and."
 $AF6D DEFB $83,$BB,$53,$75,$78,$8A,$6B,$B5 ; {" lands on the other side"
 $AF75 DEFB $A6                             ; }
 $AF76 DEFB $C2,$4F,$89,$B1,$85,$99,$74,$78 ; {" fall(s|d|ing|es) just short of
 $AF7E DEFB $8A,$6B,$B5,$A6                 ; the other side"}
 $AF82 DEFB $0B,$08,$66,$CA,$D4,$84,$BF,$B7 ; {"[0x0b][0x08] but
 $AF8A DEFB $C3                             ; slide(s|d|ing|es) out again"}
 $AF8B DEFB $83,$BB,$53,$70,$78,$B0,$B8     ; " lands in the boat"
 $AF92 DEFB $78,$80,$B8,$89,$54,$80,$43,$78 ; {" the boat glides across the
 $AF9A DEFB $85,$4A,$61,$83,$BB,$53,$75,$7A ; river and lands on this side"
 $AFA2 DEFB $B5,$A6                         ; }
 $AFA4 DEFB $7E,$60,$89,$B5,$78,$80,$B8,$89 ; {" with a lurch the boat glides
 $AFAC DEFB $54,$80,$43,$78,$85,$4A,$61,$02 ; across the river and[0x02] ngfar"
 $AFB4 DEFB $B9,$07                         ; }
 $AFB6 DEFB $71,$73,$70,$09,$15             ; " is not in[0x09][0x15]"
 $AFBB DEFB $04,$71,$01,$15                 ; "[0x04] is[0x01][0x15]"
 $AFBF DEFB $6F,$67,$69,$B6,$9B             ; " i cannot do that"
 $AFC4 DEFB $6F,$76,$8A,$5D,$B9,$89         ; " i see nothing here"
 $AFCA DEFB $83,$78,$02,$11,$84,$AA,$02,$0D ; {" in[0x02][0x11] on[0x02][0x0d]
 $AFD2 DEFB $88,$25,$02,$09,$8B,$9B,$02,$05 ; behind[0x02][0x09]
 $AFDA DEFB $86,$CD,$44,$7B,$78,$16         ; under[0x02][0x05] tied to
                                            ; the[0x16]"}
 $AFE0 DEFB $01,$79,$01,$14                 ; "[0x01] there[0x01][0x14]"
 $AFE4 DEFB $04,$71,$68,$04,$15             ; "[0x04] is carrying[0x04][0x15]"
 $AFE9 DEFB $6F,$67,$82,$85,$07,$6D,$6E,$15 ; " i cannot follow[0x07] from
                                            ; here[0x15]"
 $AFF1 DEFB $10,$B1,$92                     ; "You are dead"
 $AFF4 DEFB $06,$76,$8A,$5D,$8A,$F7,$B9,$89 ; "You see nothing special here"
 $AFFC DEFB $10,$83,$78,$16                 ; "You are in[0x16]"
 $B000 DEFB $06,$76,$16                     ; "You see[0x16]"
 $B003 DEFB $06,$8A,$AF,$20,$3A,$14         ; "You see :[0x14]"
 $B009 DEFB $06,$85,$84,$20,$22,$16         ; "You say "[0x16]"
 $B00F DEFB $20,$22,$2E,$14                 ; " ".[0x14]"
 $B013 DEFB $79,$71,$00,$14                 ; " there is[0x00][0x14]"
 $B017 DEFB $00,$C2,$2D,$2E,$14             ; "[0x00] enter(s|d|ing|es).[0x14]"
 $B01C DEFB $00,$C7,$EA,$15                 ; "[0x00] appear(s|d|ing|es)[0x15]"
 $B020 DEFB $8B,$AD,$88,$F1,$62,$3A,$16     ; " visible exits are:[0x16]"
 $B027 DEFB $7F,$D9,$85,$60,$BA,$55         ; " you{5} hear a noise"
 $B02D DEFB $09,$69,$45,$53,$73,$89,$19,$7A ; {"[0x09] does not fit this lock"
 $B035 DEFB $B3,$F2                         ; }
 $B037 DEFB $78,$84,$24,$6A,$C4,$B4,$2E,$14 ; " the magic door
                                            ; open(s|d|ing|es).[0x14]"
 $B03F DEFB $78,$84,$24,$6A,$C1,$34,$2E,$14 ; " the magic door
                                            ; close(s|d|ing|es).[0x14]"
 $B047 DEFB $8B,$58,$A7,$A8                 ; " thank you."
 $B04B DEFB $7D,$27,$53,$7A,$20,$3F,$16     ; " what's this ?[0x16]"
 $B052 DEFB $7F,$62,$C8,$C6,$60,$82,$FF,$A9 ; {" you are do(s|d|ing|es) a great
 $B05A DEFB $AE                             ; job."}
 $B05B DEFB $89,$9B,$A7,$25                 ; " hurry up."
 $B05F DEFB $A3,$2C                         ; " hello."
 $B061 DEFB $7A,$8B,$B8,$FB,$6F,$A3,$A5     ; " this was Thrains key."
 $B068 DEFB $07,$C2,$4F,$81,$C4,$60,$83,$5D ; {"[0x07] fall(s|d|ing|es) down a
 $B070 DEFB $61,$CB,$A3,$15                 ; hole and
                                            ; vanish(s|d|ing|es)[0x15]"}
 $B074 DEFB $10,$73,$87,$72,$49,$4E,$47,$07 ; {"You are not
 $B07C DEFB $15                             ; wearing[0x07][0x15]"}
 $B07D DEFB $09,$71,$80,$51,$86,$CD,$44,$15 ; "[0x09] is already tied[0x15]"
 $B085 DEFB $78,$87,$41,$87,$9A,$85,$6C,$87 ; {" the vicious warg run around
 $B08D DEFB $F8,$7F,$61,$A9,$96             ; you and howls."}
 $B092 DEFB $07,$71,$73,$86,$CD,$44,$15     ; "[0x07] is not tied[0x15]"
 $B099 DEFB $77,$86,$23,$53,$8B,$17,$CA,$15 ; {" some spiders start
 $B0A1 DEFB $78,$80,$CD,$B7,$76             ; mend(s|d|ing|es) the broken web"}
 $B0A6 DEFB $7D,$69,$7F,$88,$F6,$84,$2F,$7B ; {" what do you expect me to do
 $B0AE DEFB $69,$7E,$7A,$20,$3F,$16         ; with this ?[0x16]"}
 $B0B4 DEFB $88,$05,$8A,$F3,$88,$05,$06,$8B ; {" as soon as you touch the river
 $B0BC DEFB $93,$78,$85,$4A,$06,$6C,$88,$0D ; you fall asleep and gently float
 $B0C4 DEFB $61,$82,$C8,$89,$26,$B8,$1A     ; away"}
 $B0CB DEFB $8B,$CC,$27,$53,$78,$86,$AB,$20 ; {" where's the thief ?[0x16]"
 $B0D3 DEFB $3F,$16                         ; }
 $B0D5 DEFB $82,$CE,$8B,$A0,$84,$BF,$74,$7A ; {" get us out of this one, thief
 $B0DD DEFB $84,$AD,$2C,$86,$AB,$20,$21,$16 ; ![0x16]"}
 $B0E5 DEFB $86,$B4,$CA,$D0,$81,$C4,$61,$CB ; {" thorin sit(s|d|ing|es) down
 $B0ED DEFB $17,$CA,$C8,$87,$B0,$A2,$EF     ; and start(s|d|ing|es)
                                            ; sing(s|d|ing|es) about gold."}
 $B0F4 DEFB $86,$B4,$A7,$56                 ; " thorin wait."
 $B0F8 DEFB $06,$6C,$88,$0D,$15             ; "You fall asleep[0x15]"
 $B0FD DEFB $78,$86,$23,$87,$76,$71,$85,$DB ; {" the spider web is slowly
 $B105 DEFB $85,$F3,$A7,$A8                 ; smothering you."}
 $B109 DEFB $78,$85,$E1,$81,$63,$83,$A5,$CA ; {" the small curious key
 $B111 DEFB $C1,$15                         ; shatter(s|d|ing|es)[0x15]"}
 $B113 DEFB $80,$58,$82,$0A,$8B,$40,$BA,$7A ; " an elf sweeps past"
 $B11B DEFB $7F,$67,$8A,$9F,$07,$15         ; " you cannot reach[0x07][0x15]"
 $B121 DEFB $10,$73,$68,$78,$B0,$C3         ; "You are not carrying the bow"
 $B127 DEFB $78,$80,$6B,$8A,$25,$45,$53,$09 ; {" the arrow misses[0x09] by a
 $B12F DEFB $88,$5B,$60,$87,$7D,$B9,$FD     ; wide margin"}
 $B136 DEFB $78,$80,$6B,$D3,$47,$53,$07,$15 ; " the arrow{5} hits[0x07][0x15]"
 $B13E DEFB $10,$7C,$B0,$A2                 ; "You are too big"
 $B142 DEFB $00,$C8,$E1,$15                 ; "[0x00]
                                            ; evaporate(s|d|ing|es)[0x15]"
 $B146 DEFB $0C,$82,$B1,$89,$5A,$89,$7B,$D3 ; {"[0x0c] foul gluttony has{5}
 $B14E DEFB $A8,$45,$44,$06,$15             ; killed you[0x15]"}
 $B153 DEFB $10,$85,$DB,$CA,$CC,$83,$8E,$78 ; {"You are slowly sink(s|d|ing|es)
 $B15B DEFB $B0,$BC                         ; into the bog"}
 $B15D DEFB $78,$6B,$C5,$84,$20,$22,$FB,$C4 ; {" the dragon say(s|d|ing|es) "
 $B165 DEFB $86,$AB,$8B,$EA,$81,$71,$89,$7B ; Well thief your cunning has
 $B16D DEFB $88,$FC,$7F,$7A,$8B,$87,$2E,$8A ; failed you this time. prepare to
 $B175 DEFB $91,$7B,$88,$B1,$20,$22,$20,$2E ; die " .[0x14]"
 $B17D DEFB $14                             ; }
 $B17E DEFB $78,$6B,$C5,$84,$20,$22,$F3,$73 ; {" the dragon say(s|d|ing|es) " I
 $B186 DEFB $8A,$0D,$73,$64,$87,$AC,$7B,$76 ; may not be able to see you thief
 $B18E DEFB $7F,$86,$AB,$66,$F3,$73,$80,$EB ; but I can still burn you. prepare
 $B196 DEFB $8B,$1C,$80,$D3,$7F,$2E,$8A,$91 ; to die " .[0x14]"
 $B19E DEFB $7B,$88,$B1,$20,$22,$20,$2E,$14 ; }
 $B1A6 DEFB $70,$78,$88,$BA,$7F,$76,$78,$8A ; {" in the distance you see the
 $B1AE DEFB $BC,$74,$60,$84,$45,$6B,$89,$2B ; shape of a monstrous dragon
 $B1B6 DEFB $80,$49,$B7,$A8                 ; flying after you"}
 $B1BA DEFB $78,$6B,$88,$A9,$61,$70,$60,$8B ; {" the dragon descends and in a
 $B1C2 DEFB $50,$DA,$FE,$74,$82,$6F,$C0,$D3 ; terrific{5} spout of flames
 $B1CA DEFB $7F,$7B,$60,$88,$96,$15         ; burn(s|d|ing|es) you to a
                                            ; crisp[0x15]"}
 $B1D0 DEFB $D2,$DE,$01,$6D,$00,$7B,$D2,$CE ; {"{5} go[0x01] from[0x00] to{5}
 $B1D8 DEFB $7B,$00,$16                     ; get to[0x00][0x16]"}
 $B1DB DEFB $8A,$E3,$CB,$26,$7F,$6D,$B8,$25 ; " someone strangle(s|d|ing|es)
                                            ; you from behind"
 $B1E3 DEFB $07,$85,$84,$53,$20,$22,$FA,$52 ; {"[0x07] says " No "[0x14]"
 $B1EB DEFB $20,$22,$14                     ; }
 $B1EE DEFB $72,$67,$64,$76,$4E,$2C,$67,$64 ; {" it cannot be seen, cannot be
 $B1F6 DEFB $89,$15,$0D,$F0,$EE,$64,$C9,$85 ; felt[0x0d] Cannot be
 $B1FE DEFB $2C,$67,$64,$8A,$DE,$2E,$0D,$F3 ; hear(s|d|ing|es), cannot be
 $B206 DEFB $9E,$C9,$DB,$88,$25,$CB,$0F,$61 ; smelt.[0x0d] It lie(s|d|ing|es)
 $B20E DEFB $8B,$9B,$83,$42,$2C,$0D,$F0,$5B ; behind star(s|d|ing|es) and under
 $B216 DEFB $D2,$28,$83,$5D,$53,$72,$C2,$61 ; hills,[0x0d$"
 $B21E DEFB $2E,$0D,$F3,$9E,$C8,$71,$89,$1C ;
 $B226 DEFB $61,$C2,$85,$80,$49,$2C,$0D,$C8 ;
 $B22E DEFB $D5,$89,$DF,$2C,$C3,$A8,$89,$D3 ;
 $B236 DEFB $2E,$16                         ; }
 $B238 DEFB $88,$38,$2C,$84,$13,$63,$7A,$21 ; {" blimey, look at this!! Can yer
 $B240 DEFB $21,$F0,$EB,$8B,$E7,$88,$8B,$27 ; cook'em?[0x16]"
 $B248 DEFB $45,$4D,$3F,$16                 ; }
 $B24C DEFB $8B,$E7,$80,$EB,$8B,$90,$2C,$66 ; {" yer can try, but he wouldn't
 $B254 DEFB $89,$82,$8B,$E2,$4E,$27,$54,$89 ; make above a mouthfull."
 $B25C DEFB $F9,$87,$B5,$60,$AA,$3E         ; }
 $B262 DEFB $70,$60,$81,$27,$7E,$8B,$98,$86 ; {" in a clearing with two stone
 $B26A DEFB $41,$A6,$FD                     ; trolls."}
 $B26D DEFB $10,$8B,$46,$82,$92,$87,$C8,$78 ; {"You are swept forcefully
 $B275 DEFB $B4,$F1                         ; against the portcullis"}
 $B277 DEFB $79,$71,$60,$89,$EC,$81,$51,$61 ; {" there is a loud crack and a
 $B27F DEFB $60,$83,$5D,$C7,$EA,$87,$B0,$8B ; hole appear(s|d|ing|es) about
 $B287 DEFB $76,$82,$5D,$6D,$78,$89,$65,$2E ; three feet from the ground.[0x0d]
 $B28F DEFB $0D,$F7,$A8,$62,$CB,$0A,$70,$89 ; You are stand(s|d|ing|es) in
 $B297 DEFB $40,$74,$78,$85,$A6,$6A,$7B,$78 ; front of the side door to the
 $B29F DEFB $F4,$09,$F4,$4E,$15             ; Lone$"}
 $B2A4 DEFB $78,$83,$5D,$CB,$A3,$15         ; " the hole
                                            ; vanish(s|d|ing|es)[0x15]"
 $B2AA DEFB $F6,$9F,$84,$24,$6A,$CB,$B4,$74 ; {" The magic door
 $B2B2 DEFB $82,$1D,$C7,$F0,$15             ; warn(s|d|ing|es) of elves
                                            ; approach(s|d|ing|es)[0x15]"}
 $B2B7 DEFB $8B,$D1,$71,$78,$87,$E4,$86,$9B ; {" which is the animal that has
 $B2BF DEFB $89,$7B,$89,$3C,$82,$5D,$70,$78 ; four feet in the
 $B2C7 DEFB $CA,$3A,$2C,$8B,$98,$63,$8A,$1F ; morn(s|d|ing|es), two at midday
 $B2CF DEFB $61,$8B,$76,$70,$78,$88,$EA,$20 ; and three in the evening ?[0x16]"
 $B2D7 DEFB $3F,$16                         ; }
 $B2D9 DEFB $7D,$89,$7B,$72,$89,$62,$70,$89 ; {" what has it got in its
 $B2E1 DEFB $AB,$CA,$83,$20,$3F,$16         ; pocket(s|d|ing|es) ?[0x16]"}
 $B2E7 DEFB $8A,$4F,$88,$30,$8A,$98,$20,$22 ; {" my birthday present " how did
 $B2EF DEFB $89,$93,$88,$B4,$8B,$C1,$89,$E8 ; we lose it.[0x0d] my precious
 $B2F7 DEFB $72,$2E,$0D,$8A,$4F,$8A,$89,$20 ; "[0x16]"
 $B2FF DEFB $22,$16                         ; }
*$B301 DEFB $06,$67,$83,$A1,$84,$B0,$07,$6D ; {"You cannot jump onto[0x07] from
 $B309 DEFB $6E,$15                         ; here[0x15]"}
 $B30B DEFB $88,$9F,$C8,$9B,$B0,$00         ; " day dawn(s|d|ing|es) |b"
 $B311 DEFB $06,$76,$77,$8A,$70,$88,$54,$82 ; {"You see some pale bulbous eyes
 $B319 DEFB $4B,$CB,$13,$63,$06,$15         ; star(s|d|ing|es) at You[0x15]"}
 $B31F DEFB $77,$86,$B0,$47,$C1,$E8,$6D,$87 ; {" some thing drop(s|d|ing|es)
 $B327 DEFB $B5,$61,$CB,$21,$15             ; from above and
                                            ; sting(s|d|ing|es)[0x15]"}
 $B32C DEFB $7F,$62,$8B,$7B,$84,$B0,$78,$88 ; {" you are thrown onto the bank
 $B334 DEFB $1E,$74,$78,$84,$0F,$B3,$B7     ; of the long lake"}
 $B33B DEFB $20,$20,$20,$20,$20,$EA,$5D     ; "     {6} nothing"
 $B342 DEFB $8B,$17,$20,$54,$41,$50,$45,$86 ; {"start tape then press any key"
 $B34A DEFB $A2,$20,$50,$52,$45,$53,$53,$20 ;
 $B352 DEFB $41,$4E,$59,$B3,$A5             ; }
 $B357 DEFB $54,$41,$50,$45,$20,$45,$52,$52 ; {"tape error -     hit any key to
 $B35F DEFB $4F,$52,$20,$2D,$20,$20,$20,$20 ; restart program[0x15]"
 $B367 DEFB $83,$47,$20,$41,$4E,$59,$83,$A5 ;
 $B36F DEFB $7B,$20,$52,$45,$53,$54,$41,$52 ;
 $B377 DEFB $54,$20,$50,$52,$4F,$47,$52,$41 ;
 $B37F DEFB $4D,$15                         ; }
 $B381 DEFB $54,$41,$50,$45,$20,$45,$52,$52 ; {"tape error -     hit any key to
 $B389 DEFB $4F,$52,$20,$2D,$20,$20,$20,$20 ; continue[0x15]"
 $B391 DEFB $83,$47,$20,$41,$4E,$59,$83,$A5 ;
 $B399 DEFB $7B,$20,$43,$4F,$4E,$54,$49,$4E ;
 $B3A1 DEFB $55,$45,$15                     ; }
 $B3A4 DEFB $52,$45,$57,$49,$4E,$44,$61,$20 ; {"rewind and prepare tape for
 $B3AC DEFB $50,$52,$45,$50,$41,$52,$45,$20 ; verification  -- then hit any
 $B3B4 DEFB $54,$41,$50,$45,$82,$8F,$20,$20 ; key"
 $B3BC DEFB $20,$20,$20,$56,$45,$52,$49,$46 ;
 $B3C4 DEFB $49,$43,$41,$54,$49,$4F,$4E,$20 ;
 $B3CC DEFB $20,$2D,$2D,$86,$A2,$83,$47,$20 ;
 $B3D4 DEFB $41,$4E,$59,$B3,$A5             ; }
 $B3D9 DEFB $0D,$0D,$0D,$60,$20,$43,$48,$45 ; {"[0x0d][0x0d][0x0d] a cheering
 $B3E1 DEFB $45,$52,$49,$4E,$47,$20,$43,$52 ; crowd of dwarves, hobbits and
 $B3E9 DEFB $4F,$57,$44,$74,$20,$44,$57,$41 ; elves appear(s|d|ing|es). led by
 $B3F1 DEFB $52,$56,$45,$53,$2C,$20,$48,$4F ; gandalf they carry you off into
 $B3F9 DEFB $42,$42,$49,$54,$53,$61,$82,$1D ; the sunset, proclaiming you  he$"
 $B401 DEFB $C7,$EA,$2E,$20,$4C,$45,$44,$88 ;
 $B409 DEFB $5B,$82,$BD,$20,$54,$48,$45,$59 ;
 $B411 DEFB $81,$0D,$7F,$84,$9F,$83,$8E,$78 ;
 $B419 DEFB $20,$53,$55,$4E,$53,$45,$54,$2C ;
 $B421 DEFB $20,$50,$52,$4F,$43,$4C,$41,$49 ;
 $B429 DEFB $4D,$49,$4E,$47,$7F,$20,$20,$48 ;
 $B431 DEFB $45,$52,$4F,$74,$20,$48,$45,$52 ;
 $B439 DEFB $4F,$45,$53,$61,$20,$4D,$41,$53 ;
 $B441 DEFB $54,$45,$52,$20,$41,$44,$56,$45 ;
 $B449 DEFB $4E,$54,$55,$52,$45,$52,$20,$21 ;
 $B451 DEFB $21,$21,$15                     ; }
 $B454 DEFB $7F,$89,$7E,$20,$4D,$41,$53,$54 ; {" you have mastered [0x16]"
 $B45C DEFB $45,$52,$45,$44,$20,$16         ; }
 $B462 DEFB $25,$74,$7A,$B7,$BA             ; "% of this adventure"
 $B467 DEFB $20,$59,$4F,$55,$27,$52,$45,$20 ; {" you're doing fine[0x15]"
 $B46F DEFB $44,$4F,$49,$4E,$47,$20,$46,$49 ;
 $B477 DEFB $4E,$45,$15                     ; }
; Location Help Messages
 $B47A DEFB $60,$86,$FD,$81,$C0,$20,$4E,$45 ; {" a trolls door needs a trolls
*$B482 DEFB $45,$44,$53,$60,$86,$FD,$B3,$A5 ; key"}
 $B48A DEFB $82,$1D,$62,$20,$47,$4F,$4F,$44 ; {" elves are good at reading
 $B492 DEFB $63,$85,$30,$49,$4E,$47,$B6,$85 ; symbols"}
 $B49A DEFB $60,$87,$8C,$20,$53,$48,$4F,$55 ; {" a window should be no obstacle
 $B4A2 DEFB $4C,$44,$64,$8A,$52,$20,$4F,$42 ; to a thief with friends[0x15]"
 $B4AA DEFB $53,$54,$41,$43,$4C,$45,$7B,$60 ;
 $B4B2 DEFB $86,$AB,$7E,$20,$46,$52,$49,$45 ;
 $B4BA DEFB $4E,$44,$53,$15                 ; }
 $B4BE DEFB $80,$B8,$53,$80,$EB,$83,$1E,$2E ; {" boats can help. Look
 $B4C6 DEFB $F4,$13,$B0,$FD                 ; carefully"}
 $B4CA DEFB $87,$56,$87,$F8,$61,$8B,$87,$8B ; {" wait around and time your exit
 $B4D2 DEFB $EA,$20,$45,$58,$49,$54,$B0,$FD ; carefully"}
 $B4DA DEFB $20,$54,$49,$4D,$49,$4E,$47,$71 ; {" timing is critical, remember
 $B4E2 DEFB $20,$43,$52,$49,$54,$49,$43,$41 ; barrels float"
 $B4EA DEFB $4C,$2C,$20,$52,$45,$4D,$45,$4D ;
 $B4F2 DEFB $42,$45,$52,$80,$84,$53,$B9,$26 ; }
 $B4FA DEFB $87,$56,$60,$20,$57,$48,$49,$4C ; {" wait a while[0x15]"
 $B502 DEFB $45,$15                         ; }
 $B504 DEFB $86,$8C,$20,$43,$41,$52,$45,$7B ; {" take care to leave at the
 $B50C DEFB $83,$C4,$63,$78,$20,$52,$49,$47 ; right time"
 $B514 DEFB $48,$54,$BB,$87                 ; }
 $B518 DEFB $60,$20,$4C,$49,$56,$49,$4E,$47 ; {" a living dragon is deadly,
 $B520 DEFB $6B,$71,$20,$44,$45,$41,$44,$4C ; look to bard"
 $B528 DEFB $59,$2C,$84,$13,$7B,$B0,$80     ; }
 $B52F DEFB $20,$44,$4F,$4E,$27,$54,$20,$53 ; {" don't stay here too long"
 $B537 DEFB $54,$41,$59,$6E,$7C,$B4,$0F     ; }
 $B53E DEFB $87,$56,$82,$8F,$78,$20,$4E,$45 ; {" wait for the new day
 $B546 DEFB $57,$88,$9F,$20,$44,$41,$57,$4E ; dawning[0x15]"
 $B54E DEFB $49,$4E,$47,$15                 ; }
 $B552 DEFB $79,$DA,$B2,$7B,$64,$77,$86,$85 ; {" there{5} seem to be some
 $B55A DEFB $75,$72,$66,$06,$67,$85,$30,$BB ; symbols on it but you cannot read
 $B562 DEFB $5D                             ; them"}
; Locations
 $B563 DEFB $7F,$76,$60,$82,$53,$82,$7E,$80 ; {" you see a fast flowing black
 $B56B DEFB $A5,$85,$4A,$73,$87,$3D,$87,$7D ; river not very wide across"
 $B573 DEFB $B0,$43                         ; }
 $B575 DEFB $60,$81,$3F,$87,$03,$83,$DA,$A3 ; {" a comfortable tunnel like
 $B57D DEFB $09                             ; hall."}
 $B57E DEFB $60,$82,$D8,$82,$28,$83,$BB,$7E ; {" a gloomy empty land with
 $B586 DEFB $81,$DD,$83,$42,$A7,$CF         ; dreary hills ahead."}
 $B58C DEFB $60,$83,$31,$84,$D4,$7E,$86,$FD ; {" a hidden path with trolls foot
 $B594 DEFB $89,$31,$84,$FB,$53,$16         ; prints[0x16]"}
 $B59A DEFB $78,$86,$FD,$A1,$12             ; " the trolls cave."
 $B59F DEFB $60,$83,$16,$81,$85,$84,$D4,$70 ; {" a hard dangerous path in the
 $B5A7 DEFB $78,$84,$40,$A4,$56             ; misty mountains."}
 $B5AC DEFB $60,$84,$64,$D4,$E6,$7E,$60,$81 ; {" a narrow{5} place with a
 $B5B4 DEFB $D5,$81,$E8,$83,$8E,$60,$88,$B7 ; dreadful drop into a dim valley."
 $B5BC DEFB $A7,$2F                         ; }
 $B5BE DEFB $60,$84,$64,$81,$85,$A4,$D4     ; " a narrow dangerous path."
 $B5C5 DEFB $60,$83,$BF,$81,$EC,$81,$12,$8B ; {" a large dry cave which is
 $B5CD DEFB $D1,$71,$85,$1C,$A1,$3F         ; quite comfortable."}
 $B5D3 DEFB $60,$80,$A2,$81,$16,$7E,$86,$D7 ; {" a big cavern with torches
 $B5DB DEFB $45,$53,$87,$DF,$78,$87,$5A,$53 ; along the walls[0x16]"
 $B5E3 DEFB $16                             ; }
 $B5E4 DEFB $78,$88,$46,$74,$60,$81,$96,$81 ; {" the brink of a deep dark under
 $B5EC DEFB $8E,$8B,$9B,$89,$65,$A3,$B7     ; ground lake."}
 $B5F3 DEFB $78,$82,$E8,$A2,$C4             ; " the goblins gate."
 $B5F8 DEFB $78,$82,$C4,$7B,$A4,$38         ; " the gate to mirkwood."
 $B5FE DEFB $60,$80,$99,$82,$D8,$84,$E6,$8B ; {" a bewitched gloomy place
 $B606 DEFB $36,$88,$5B,$86,$A6,$C6,$EC,$A0 ; surrounded by thick
 $B60E DEFB $00                             ; tree(s|d|ing|es) |b."}
 $B60F DEFB $60,$84,$E6,$74,$80,$A5,$86,$23 ; {" a place of black
 $B617 DEFB $53,$16                         ; spiders[0x16]"}
 $B619 DEFB $60,$82,$A0,$74,$86,$94,$85,$F3 ; {" a forest of tangled smothering
 $B621 DEFB $C6,$EC,$16                     ; tree(s|d|ing|es)[0x16]"}
 $B624 DEFB $60,$4E,$82,$22,$81,$27,$7E,$83 ; {" an elvish clearing with
 $B62C DEFB $CC,$89,$65,$61,$A3,$FC         ; levelled ground and logs."}
 $B632 DEFB $60,$81,$8E,$81,$EF,$70,$78,$82 ; {" a dark dungeon in the
 $B63A DEFB $13,$A3,$0D                     ; elvenkings halls."}
 $B63D DEFB $78,$81,$1C,$8B,$CC,$78,$83,$AE ; {" the cellar where the king
 $B645 DEFB $89,$BA,$89,$90,$80,$84,$53,$74 ; keeps his barrels of wine."
 $B64D DEFB $A7,$92                         ; }
 $B64F DEFB $60,$87,$A2,$86,$DC,$70,$78,$8A ; {" a wooden town in the middle of
 $B657 DEFB $19,$74,$84,$0F,$A3,$B7         ; long lake."}
 $B65D DEFB $60,$86,$64,$85,$4A,$3A,$78,$88 ; {" a strong river: the current is
 $B665 DEFB $8F,$71,$8A,$64,$7C,$86,$64,$7B ; now too strong to move against."
 $B66D DEFB $8A,$47,$A7,$C8                 ; }
 $B671 DEFB $60,$80,$AA,$80,$8A,$83,$BB,$86 ; {" a bleak barren land that was
 $B679 DEFB $9B,$8B,$B8,$8A,$67,$A3,$04     ; once green."}
 $B680 DEFB $78,$85,$67,$74,$78,$86,$DC,$74 ; {" the ruins of the town of
 $B688 DEFB $A1,$81                         ; dale."}
 $B68A DEFB $78,$89,$40,$82,$C4,$74,$78,$84 ; {" the front gate of the lonely
 $B692 DEFB $09,$A4,$4E                     ; mountain."}
 $B695 DEFB $78,$87,$79,$85,$A6,$74,$A5,$21 ; " the west side of ravenhill."
 $B69D DEFB $78,$83,$0D,$8B,$CC,$78,$6B,$C5 ; {" the halls where the dragon
 $B6A5 DEFB $CA,$16                         ; sleep(s|d|ing|es)[0x16]"}
 $B6A7 DEFB $60,$83,$E3,$86,$3C,$80,$90,$2C ; {" a little steep bay, still and
 $B6AF DEFB $8B,$1C,$61,$85,$13,$2C,$7E,$80 ; quiet, with an over hanging
 $B6B7 DEFB $58,$84,$C9,$89,$74,$A8,$6C     ; cliff."}
 $B6BE DEFB $60,$85,$ED,$86,$46,$A4,$CD     ; " a smooth straight passage."
 $B6C5 DEFB $78,$84,$09,$A4,$4E             ; " the lonely mountain."
 $B6CA DEFB $78,$87,$79,$02,$04,$78,$81,$FE ; {" the west[0x02][0x04] the east
 $B6D2 DEFB $88,$1E,$74,$60,$80,$A5,$A5,$4A ; bank of a black river."}

; Data block at B6DA
b$B6DA DEFW $0000
 $B6DC DEFW $0000
 $B6DE DEFB $00
 $B6DF DEFB $00
 $B6E0 DEFB $00,$00,$00,$00,$00,$00
 $B6E6 DEFB $00
@label=CurrentAction
 $B6E7 DEFB $00
@label=CurrentObject
 $B6E8 DEFB $00
 $B6E9 DEFB $00
@label=CurrentCharacter
 $B6EA DEFB $00
 $B6EB DEFB $00,$00,$00
 $B6EE DEFW $0000
 $B6F0 DEFB $00
 $B6F1 DEFB $00
 $B6F2 DEFB $00
 $B6F3 DEFB $00
 $B6F4 DEFB $00
 $B6F5 DEFB $00
 $B6F6 DEFB $00
@label=PercentageComplete
 $B6F7 DEFW $0000
 $B6F9 DEFB $00
 $B6FA DEFB $00
 $B6FB DEFB $00
 $B6FC DEFW $0000
 $B6FE DEFB $00
 $B6FF DEFB $00
 $B700 DEFB $00
@label=WaitCoutdown
 $B701 DEFB $00                             ; 1=action countdown, 0=countdown
                                            ; finished.
@label=NightDay
 $B702 DEFB $00                             ; 0=night, 1=day.
 $B703 DEFB $00
 $B704 DEFB $00
 $B705 DEFB $00
 $B706 DEFB $FF
 $B707 DEFB $00
 $B708 DEFB $00,$00
 $B70A DEFW $0000
@label=ptrCurObject
 $B70C DEFW $C11B
@label=RandomSeed
 $B70E DEFB $00
 $B70F DEFB $00
 $B710 DEFB $00
 $B711 DEFB $00
@label=RandomCounter
 $B712 DEFW $0000
 $B714 DEFW $0000
 $B716 DEFB $00
 $B717 DEFW $0000
 $B719 DEFB $00
 $B71A DEFB $00
 $B71B DEFB $00
 $B71C DEFB $00
 $B71D DEFB $00
 $B71E DEFW $7300
 $B720 DEFW $0000
 $B722 DEFW $6500
 $B724 DEFW $0073
 $B726 DEFW $6900
 $B728 DEFW $7365
 $B72A DEFW $0800
 $B72C DEFW $6569
 $B72E DEFW $6473
 $B730 DEFW $0000
 $B732 DEFW $6900
 $B734 DEFW $676E
 $B736 DEFW $0000
 $B738 DEFB $00
 $B739 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B741 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B749 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B751 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B759 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B761 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B769 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B771 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B779 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B781 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B789 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B791 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B799 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7A1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7A9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7B1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7B9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7C1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7C9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7D1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7D9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7E1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7E9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7F1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B7F9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B801 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B809 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B811 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B819 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B821 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B829 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B831 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B839 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B841 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B849 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B851 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B859 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B861 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B869 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B871 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B879 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B881 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B889 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B891 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B899 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8A1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8A9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8B1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8B9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8C1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8C9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8D1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8D9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8E1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8E9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8F1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B8F9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B901 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B909 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B911 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B919 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B921 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B929 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B931 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B939 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B941 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B949 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B951 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B959 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B961 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B969 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B971 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B979 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B981 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B989 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B991 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B999 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9A1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9A9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9B1 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9B9 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9C1 DEFB $00,$00,$00,$00,$00,$00,$00

; Data block at B9C8
b$B9C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $B9D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Location Table
@label=LocationTable
w$B9E0 DEFW $BA8A    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9E2 DEFW $BA97    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9E4 DEFW $BED3    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9E6 DEFW $BEE4    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9E8 DEFW $BAA5    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9EA DEFW $BABC    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9EC DEFW $BAD0    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9EE DEFW $BAE1    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9F0 DEFW $BEF5    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9F2 DEFW $BAEF    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9F4 DEFW $BB00    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9F6 DEFW $BB17    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9F8 DEFW $BB2B    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9FA DEFW $BCDA    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9FC DEFW $BB3C    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $B9FE DEFW $BB4D    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA00 DEFW $BC6A    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA02 DEFW $BC7E    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA04 DEFW $BC8C    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA06 DEFW $BCA0    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA08 DEFW $BCC9    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA0A DEFW $BCEB    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA0C DEFW $BCFC    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA0E DEFW $BF06    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA10 DEFW $BD16    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA12 DEFW $BD2A    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA14 DEFW $BD3E    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA16 DEFW $BD55    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA18 DEFW $BD66    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA1A DEFW $BD7A    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA1C DEFW $BD88    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA1E DEFW $BD9C    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA20 DEFW $BDAD    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA22 DEFW $BDC1    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA24 DEFW $BDD5    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA26 DEFW $BDEC    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA28 DEFW $BE03    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA2A DEFW $BE14    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA2C DEFW $BE25    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA2E DEFW $BE39    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA30 DEFW $BE4D    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA32 DEFW $BE61    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA34 DEFW $BE75    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA36 DEFW $BE89    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA38 DEFW $BE9A    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA3A DEFW $BEC2    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA3C DEFW $BEB1    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA3E DEFW $BF42    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA40 DEFW $BF17    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA42 DEFW $BF2B    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA44 DEFW $BF4D    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA46 DEFW $BF5E    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA48 DEFW $BB61    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA4A DEFW $BB75    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA4C DEFW $BB83    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA4E DEFW $BB9A    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA50 DEFW $BBB1    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA52 DEFW $BBBF    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA54 DEFW $BBD3    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA56 DEFW $BBEA    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA58 DEFW $BBFB    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA5A DEFW $BC0F    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA5C DEFW $BC20    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA5E DEFW $BC2E    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA60 DEFW $BC42    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA62 DEFW $BC56    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA64 DEFW $BF72    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA66 DEFW $BF83    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA68 DEFW $BF94    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA6A DEFW $BFA8    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA6C DEFW $BFBC    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA6E DEFW $BFCD    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA70 DEFW $BFE1    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA72 DEFW $BFF5    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA74 DEFW $C006    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA76 DEFW $C017    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA78 DEFW $C025    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA7A DEFW $C033    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA7C DEFW $C041    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".
 $BA7E DEFW $C052    ; #N(#EVAL((#PC - $B9E0) / 2), 2, 3, 1, 1)($) -
                     ; "#LOCATIONNAME(#EVAL((#PC - $B9E0) / 2))".

; Location Prepositions
;
; Used by the routine at #R$962B.
;
; .
;
; These are written directly to #R$AFFC($AFFD) which updates the copy for: "You
; are XXXX[0x16]".
b$BA80 DEFB $C2,$84  ; "OUTSIDE"
*$BA82 DEFB $7B,$83  ; "INSIDE"
 $BA84 DEFB $78,$83  ; "IN"
 $BA86 DEFB $AA,$84  ; "ON"
 $BA88 DEFB $70,$80  ; "AT"

; Locations
@label=Locations
b$BA8A DEFB $FF,$FF,$00,$00,$00,$00,$00,$00 ; {00:  : ''
 $BA92 DEFB $00,$00,$00,$00,$FF             ; }
; Location $01 - "#TEXTTOKEN(#PC + $02, $01)"
 $BA97 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BA98 DEFB $A0                             ; LOCATION_PROP_VOLUME
 $BA99 DEFB $09,$13                         ; {#TEXTTOKEN(#PC)
 $BA9B DEFB $03,$07                         ;
 $BA9D DEFB $DA,$03                         ; }
 $BA9F DEFW $B575                           ; comfortable tunnel like hall
 $BAA1 DEFB $03,$05,$04                     ; #MOVEMENT(#PC)
 $BAA4 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $04 - "#TEXTTOKEN(#PC + $02, $01)"
 $BAA5 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BAA6 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BAA7 DEFB $00,$04                         ; {#TEXTTOKEN(#PC)
 $BAA9 DEFB $00,$00                         ;
 $BAAB DEFB $00,$00                         ; }
 $BAAD DEFW $B57E                           ; gloomy empty land dreary hills
                                            ; ahead
 $BAAF DEFB $04,$05,$01                     ; #MOVEMENT(#PC)
 $BAB2 DEFB $03,$00,$05                     ; #MOVEMENT(#PC)
 $BAB5 DEFB $01,$00,$05                     ; #MOVEMENT(#PC)
 $BAB8 DEFB $05,$00,$06                     ; #MOVEMENT(#PC)
 $BABB DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $05 - "#TEXTTOKEN(#PC + $02, $01)"
 $BABC DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BABD DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BABE DEFB $27,$01                         ; {#TEXTTOKEN(#PC)
 $BAC0 DEFB $FD,$06                         ;
 $BAC2 DEFB $00,$00                         ; }
 $BAC4 DEFW $0000                           ; ---
 $BAC6 DEFB $08,$00,$04                     ; #MOVEMENT(#PC)
 $BAC9 DEFB $07,$00,$09                     ; #MOVEMENT(#PC)
 $BACC DEFB $01,$00,$06                     ; #MOVEMENT(#PC)
 $BACF DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $06 - "#TEXTTOKEN(#PC + $02, $01)"
 $BAD0 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BAD1 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BAD2 DEFB $D4,$04                         ; {#TEXTTOKEN(#PC)
 $BAD4 DEFB $FD,$06                         ;
 $BAD6 DEFB $00,$00                         ; }
 $BAD8 DEFW $B58C                           ; hidden path trolls foot print S
                                            ; [16]
 $BADA DEFB $02,$00,$05                     ; #MOVEMENT(#PC)
 $BADD DEFB $01,$01,$07                     ; #MOVEMENT(#PC)
 $BAE0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $07 - "#TEXTTOKEN(#PC + $02, $01)"
 $BAE1 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BAE2 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BAE3 DEFB $12,$01                         ; {#TEXTTOKEN(#PC)
 $BAE5 DEFB $FD,$06                         ;
 $BAE7 DEFB $00,$00                         ; }
 $BAE9 DEFW $B59A                           ; trolls cave
 $BAEB DEFB $02,$01,$06                     ; #MOVEMENT(#PC)
 $BAEE DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $09 - "#TEXTTOKEN(#PC + $02, $01)"
 $BAEF DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BAF0 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BAF1 DEFB $41,$85                         ; {#TEXTTOKEN(#PC)
 $BAF3 DEFB $00,$00                         ;
 $BAF5 DEFB $00,$00                         ; }
 $BAF7 DEFW $0000                           ; ---
 $BAF9 DEFB $03,$00,$0A                     ; #MOVEMENT(#PC)
 $BAFC DEFB $04,$00,$05                     ; #MOVEMENT(#PC)
 $BAFF DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $0A - "#TEXTTOKEN(#PC + $02, $01)"
 $BB00 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB01 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB02 DEFB $4E,$04                         ; {#TEXTTOKEN(#PC)
 $BB04 DEFB $40,$04                         ;
 $BB06 DEFB $00,$00                         ; }
 $BB08 DEFW $B59F                           ; hard dangerous path misty
                                            ; mountains
 $BB0A DEFB $03,$00,$0B                     ; #MOVEMENT(#PC)
 $BB0D DEFB $01,$00,$44                     ; #MOVEMENT(#PC)
 $BB10 DEFB $04,$00,$09                     ; #MOVEMENT(#PC)
 $BB13 DEFB $02,$00,$49                     ; #MOVEMENT(#PC)
 $BB16 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $0B - "#TEXTTOKEN(#PC + $02, $01)"
 $BB17 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB18 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB19 DEFB $E6,$14                         ; {#TEXTTOKEN(#PC)
 $BB1B DEFB $64,$04                         ;
 $BB1D DEFB $00,$00                         ; }
 $BB1F DEFW $B5AC                           ; narrow place dreadful drop into
                                            ; dim valley
 $BB21 DEFB $03,$00,$0C                     ; #MOVEMENT(#PC)
 $BB24 DEFB $04,$00,$0A                     ; #MOVEMENT(#PC)
 $BB27 DEFB $01,$00,$0E                     ; #MOVEMENT(#PC)
 $BB2A DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $0C - "#TEXTTOKEN(#PC + $02, $01)"
 $BB2B DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB2C DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB2D DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BB2F DEFB $85,$01                         ;
 $BB31 DEFB $64,$04                         ; }
 $BB33 DEFW $B5BE                           ; narrow dangerous path
 $BB35 DEFB $03,$00,$16                     ; #MOVEMENT(#PC)
 $BB38 DEFB $04,$00,$0B                     ; #MOVEMENT(#PC)
 $BB3B DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $0E - "#TEXTTOKEN(#PC + $02, $01)"
 $BB3C DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB3D DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB3E DEFB $12,$11                         ; {#TEXTTOKEN(#PC)
 $BB40 DEFB $BF,$03                         ;
 $BB42 DEFB $EC,$01                         ; }
 $BB44 DEFW $B5C5                           ; large dry cave which climb quite
                                            ; comfortable
 $BB46 DEFB $0A,$06,$0F                     ; #MOVEMENT(#PC)
 $BB49 DEFB $02,$00,$0B                     ; #MOVEMENT(#PC)
 $BB4C DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $0F - "#TEXTTOKEN(#PC + $02, $01)"
 $BB4D DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB4E DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB4F DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BB51 DEFB $8E,$01                         ;
 $BB53 DEFB $6A,$06                         ; }
 $BB55 DEFW $0000                           ; ---
 $BB57 DEFB $09,$06,$0E                     ; #MOVEMENT(#PC)
 $BB5A DEFB $02,$00,$34                     ; #MOVEMENT(#PC)
 $BB5D DEFB $05,$00,$3A                     ; #MOVEMENT(#PC)
 $BB60 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $34 - "#TEXTTOKEN(#PC + $02, $01)"
 $BB61 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB62 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB63 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BB65 DEFB $8E,$01                         ;
 $BB67 DEFB $6A,$06                         ; }
 $BB69 DEFW $0000                           ; ---
 $BB6B DEFB $01,$00,$0F                     ; #MOVEMENT(#PC)
 $BB6E DEFB $0A,$00,$35                     ; #MOVEMENT(#PC)
 $BB71 DEFB $09,$00,$36                     ; #MOVEMENT(#PC)
 $BB74 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $35 - "#TEXTTOKEN(#PC + $02, $01)"
 $BB75 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB76 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB77 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BB79 DEFB $8E,$01                         ;
 $BB7B DEFB $6A,$06                         ; }
 $BB7D DEFW $0000                           ; ---
 $BB7F DEFB $09,$00,$34                     ; #MOVEMENT(#PC)
 $BB82 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $36 - "#TEXTTOKEN(#PC + $02, $01)"
 $BB83 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB84 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB85 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BB87 DEFB $8E,$01                         ;
 $BB89 DEFB $6A,$06                         ; }
 $BB8B DEFW $0000                           ; ---
 $BB8D DEFB $0A,$00,$34                     ; #MOVEMENT(#PC)
 $BB90 DEFB $07,$00,$37                     ; #MOVEMENT(#PC)
 $BB93 DEFB $02,$00,$40                     ; #MOVEMENT(#PC)
 $BB96 DEFB $08,$00,$11                     ; #MOVEMENT(#PC)
 $BB99 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $37 - "#TEXTTOKEN(#PC + $02, $01)"
 $BB9A DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BB9B DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BB9C DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BB9E DEFB $8E,$01                         ;
 $BBA0 DEFB $6A,$06                         ; }
 $BBA2 DEFW $0000                           ; ---
 $BBA4 DEFB $02,$00,$11                     ; #MOVEMENT(#PC)
 $BBA7 DEFB $05,$00,$36                     ; #MOVEMENT(#PC)
 $BBAA DEFB $08,$00,$3D                     ; #MOVEMENT(#PC)
 $BBAD DEFB $04,$00,$3C                     ; #MOVEMENT(#PC)
 $BBB0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $38 - "#TEXTTOKEN(#PC + $02, $01)"
 $BBB1 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BBB2 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BBB3 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BBB5 DEFB $8E,$01                         ;
 $BBB7 DEFB $6A,$06                         ; }
 $BBB9 DEFW $0000                           ; ---
 $BBBB DEFB $08,$00,$3C                     ; #MOVEMENT(#PC)
 $BBBE DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $39 - "#TEXTTOKEN(#PC + $02, $01)"
 $BBBF DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BBC0 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BBC1 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BBC3 DEFB $8E,$01                         ;
 $BBC5 DEFB $6A,$06                         ; }
 $BBC7 DEFW $0000                           ; ---
 $BBC9 DEFB $09,$00,$10                     ; #MOVEMENT(#PC)
 $BBCC DEFB $04,$00,$41                     ; #MOVEMENT(#PC)
 $BBCF DEFB $01,$00,$3A                     ; #MOVEMENT(#PC)
 $BBD2 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $3A - "#TEXTTOKEN(#PC + $02, $01)"
 $BBD3 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BBD4 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BBD5 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BBD7 DEFB $8E,$01                         ;
 $BBD9 DEFB $6A,$06                         ; }
 $BBDB DEFW $0000                           ; ---
 $BBDD DEFB $07,$00,$3E                     ; #MOVEMENT(#PC)
 $BBE0 DEFB $03,$00,$0F                     ; #MOVEMENT(#PC)
 $BBE3 DEFB $02,$00,$39                     ; #MOVEMENT(#PC)
 $BBE6 DEFB $09,$00,$3B                     ; #MOVEMENT(#PC)
 $BBE9 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $3B - "#TEXTTOKEN(#PC + $02, $01)"
 $BBEA DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BBEB DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BBEC DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BBEE DEFB $8E,$01                         ;
 $BBF0 DEFB $6A,$06                         ; }
 $BBF2 DEFW $0000                           ; ---
 $BBF4 DEFB $0A,$00,$3A                     ; #MOVEMENT(#PC)
 $BBF7 DEFB $02,$00,$3C                     ; #MOVEMENT(#PC)
 $BBFA DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $3C - "#TEXTTOKEN(#PC + $02, $01)"
 $BBFB DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BBFC DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BBFD DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BBFF DEFB $8E,$01                         ;
 $BC01 DEFB $6A,$06                         ; }
 $BC03 DEFW $0000                           ; ---
 $BC05 DEFB $07,$00,$3D                     ; #MOVEMENT(#PC)
 $BC08 DEFB $01,$00,$3B                     ; #MOVEMENT(#PC)
 $BC0B DEFB $06,$00,$38                     ; #MOVEMENT(#PC)
 $BC0E DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $3D - "#TEXTTOKEN(#PC + $02, $01)"
 $BC0F DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC10 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC11 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BC13 DEFB $8E,$01                         ;
 $BC15 DEFB $6A,$06                         ; }
 $BC17 DEFW $0000                           ; ---
 $BC19 DEFB $01,$00,$36                     ; #MOVEMENT(#PC)
 $BC1C DEFB $06,$00,$3C                     ; #MOVEMENT(#PC)
 $BC1F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $3E - "#TEXTTOKEN(#PC + $02, $01)"
 $BC20 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC21 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC22 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BC24 DEFB $8E,$01                         ;
 $BC26 DEFB $6A,$06                         ; }
 $BC28 DEFW $0000                           ; ---
 $BC2A DEFB $03,$00,$3D                     ; #MOVEMENT(#PC)
 $BC2D DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $3F - "#TEXTTOKEN(#PC + $02, $01)"
 $BC2E DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC2F DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC30 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BC32 DEFB $8E,$01                         ;
 $BC34 DEFB $6A,$06                         ; }
 $BC36 DEFW $0000                           ; ---
 $BC38 DEFB $09,$00,$40                     ; #MOVEMENT(#PC)
 $BC3B DEFB $01,$00,$12                     ; #MOVEMENT(#PC)
 $BC3E DEFB $03,$00,$3A                     ; #MOVEMENT(#PC)
 $BC41 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $40 - "#TEXTTOKEN(#PC + $02, $01)"
 $BC42 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC43 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC44 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BC46 DEFB $8E,$01                         ;
 $BC48 DEFB $6A,$06                         ; }
 $BC4A DEFW $0000                           ; ---
 $BC4C DEFB $06,$00,$41                     ; #MOVEMENT(#PC)
 $BC4F DEFB $04,$00,$36                     ; #MOVEMENT(#PC)
 $BC52 DEFB $08,$00,$3F                     ; #MOVEMENT(#PC)
 $BC55 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $41 - "#TEXTTOKEN(#PC + $02, $01)"
 $BC56 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC57 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC58 DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BC5A DEFB $8E,$01                         ;
 $BC5C DEFB $6A,$06                         ; }
 $BC5E DEFW $0000                           ; ---
 $BC60 DEFB $01,$00,$40                     ; #MOVEMENT(#PC)
 $BC63 DEFB $07,$00,$39                     ; #MOVEMENT(#PC)
 $BC66 DEFB $03,$00,$13                     ; #MOVEMENT(#PC)
 $BC69 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $10 - "#TEXTTOKEN(#PC + $02, $01)"
 $BC6A DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC6B DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC6C DEFB $16,$01                         ; {#TEXTTOKEN(#PC)
 $BC6E DEFB $A2,$00                         ;
 $BC70 DEFB $E8,$02                         ; }
 $BC72 DEFW $B5D3                           ; big cavern torch ESalong wall S
                                            ; [16]
 $BC74 DEFB $0A,$00,$39                     ; #MOVEMENT(#PC)
 $BC77 DEFB $05,$00,$12                     ; #MOVEMENT(#PC)
 $BC7A DEFB $07,$11,$0D                     ; #MOVEMENT(#PC)
 $BC7D DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $11 - "#TEXTTOKEN(#PC + $02, $01)"
 $BC7E DEFB %00001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC7F DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC80 DEFB $B7,$03                         ; {#TEXTTOKEN(#PC)
 $BC82 DEFB $96,$01                         ;
 $BC84 DEFB $8E,$01                         ; }
 $BC86 DEFW $B5E4                           ; brink deep dark under ground lake
 $BC88 DEFB $01,$00,$37                     ; #MOVEMENT(#PC)
 $BC8B DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $12 - "#TEXTTOKEN(#PC + $02, $01)"
 $BC8C DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BC8D DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BC8E DEFB $CD,$04                         ; {#TEXTTOKEN(#PC)
 $BC90 DEFB $8E,$01                         ;
 $BC92 DEFB $85,$07                         ; }
 $BC94 DEFW $0000                           ; ---
 $BC96 DEFB $08,$00,$10                     ; #MOVEMENT(#PC)
 $BC99 DEFB $07,$00,$3F                     ; #MOVEMENT(#PC)
 $BC9C DEFB $01,$1B,$0D                     ; #MOVEMENT(#PC)
 $BC9F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $13 - "#TEXTTOKEN(#PC + $02, $01)"
 $BCA0 DEFB %00000010                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BCA1 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BCA2 DEFB $C4,$82                         ; {#TEXTTOKEN(#PC)
 $BCA4 DEFB $7B,$03                         ;
 $BCA6 DEFB $E8,$02                         ; }
 $BCA8 DEFW $B5F3                           ; goblins gate
 $BCAA DEFB $04,$00,$10                     ; #MOVEMENT(#PC)
 $BCAD DEFB $01,$00,$10                     ; #MOVEMENT(#PC)
 $BCB0 DEFB $02,$00,$10                     ; #MOVEMENT(#PC)
 $BCB3 DEFB $09,$0A,$14                     ; #MOVEMENT(#PC)
 $BCB6 DEFB $03,$00,$10                     ; #MOVEMENT(#PC)
 $BCB9 DEFB $07,$00,$10                     ; #MOVEMENT(#PC)
 $BCBC DEFB $08,$00,$10                     ; #MOVEMENT(#PC)
 $BCBF DEFB $0A,$00,$10                     ; #MOVEMENT(#PC)
 $BCC2 DEFB $05,$00,$41                     ; #MOVEMENT(#PC)
 $BCC5 DEFB $06,$00,$10                     ; #MOVEMENT(#PC)
 $BCC8 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $14 - "#TEXTTOKEN(#PC + $02, $01)"
 $BCC9 DEFB %10000000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BCCA DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BCCB DEFB $C4,$82                         ; {#TEXTTOKEN(#PC)
 $BCCD DEFB $C2,$04                         ;
 $BCCF DEFB $E8,$02                         ; }
 $BCD1 DEFW $B5F3                           ; goblins gate
 $BCD3 DEFB $0A,$0A,$13                     ; #MOVEMENT(#PC)
 $BCD6 DEFB $03,$00,$15                     ; #MOVEMENT(#PC)
 $BCD9 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $0D - "#TEXTTOKEN(#PC + $02, $01)"
 $BCDA DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BCDB DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BCDC DEFB $EF,$01                         ; {#TEXTTOKEN(#PC)
 $BCDE DEFB $E8,$02                         ;
 $BCE0 DEFB $00,$00                         ; }
 $BCE2 DEFW $0000                           ; ---
 $BCE4 DEFB $01,$11,$10                     ; #MOVEMENT(#PC)
 $BCE7 DEFB $04,$1B,$12                     ; #MOVEMENT(#PC)
 $BCEA DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $15 - "#TEXTTOKEN(#PC + $02, $01)"
 $BCEB DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BCEC DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BCED DEFB $B8,$04                         ; {#TEXTTOKEN(#PC)
 $BCEF DEFB $F0,$06                         ;
 $BCF1 DEFB $00,$00                         ; }
 $BCF3 DEFW $0000                           ; ---
 $BCF5 DEFB $03,$00,$16                     ; #MOVEMENT(#PC)
 $BCF8 DEFB $04,$00,$14                     ; #MOVEMENT(#PC)
 $BCFB DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $16 - "#TEXTTOKEN(#PC + $02, $01)"
 $BCFC DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BCFD DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BCFE DEFB $69,$83                         ; {#TEXTTOKEN(#PC)
 $BD00 DEFB $93,$00                         ;
 $BD02 DEFB $00,$00                         ; }
 $BD04 DEFW $0000                           ; ---
 $BD06 DEFB $05,$00,$18                     ; #MOVEMENT(#PC)
 $BD09 DEFB $06,$00,$14                     ; #MOVEMENT(#PC)
 $BD0C DEFB $02,$00,$2E                     ; #MOVEMENT(#PC)
 $BD0F DEFB $08,$00,$0C                     ; #MOVEMENT(#PC)
 $BD12 DEFB $01,$00,$31                     ; #MOVEMENT(#PC)
 $BD15 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $18 - "#TEXTTOKEN(#PC + $02, $01)"
 $BD16 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD17 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD18 DEFB $C4,$02                         ; {#TEXTTOKEN(#PC)
 $BD1A DEFB $A0,$02                         ;
 $BD1C DEFB $00,$00                         ; }
 $BD1E DEFW $B5F8                           ; gate mirkwood
 $BD20 DEFB $04,$00,$16                     ; #MOVEMENT(#PC)
 $BD23 DEFB $02,$00,$2E                     ; #MOVEMENT(#PC)
 $BD26 DEFB $03,$00,$19                     ; #MOVEMENT(#PC)
 $BD29 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $19 - "#TEXTTOKEN(#PC + $02, $01)"
 $BD2A DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD2B DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD2C DEFB $E6,$04                         ; {#TEXTTOKEN(#PC)
 $BD2E DEFB $99,$00                         ;
 $BD30 DEFB $D8,$02                         ; }
 $BD32 DEFW $0000                           ; ---
 $BD34 DEFB $04,$00,$18                     ; #MOVEMENT(#PC)
 $BD37 DEFB $03,$00,$42                     ; #MOVEMENT(#PC)
 $BD3A DEFB $02,$09,$00                     ; #MOVEMENT(#PC)
 $BD3D DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $1A - "#TEXTTOKEN(#PC + $02, $01)"
 $BD3E DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD3F DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD40 DEFB $E6,$04                         ; {#TEXTTOKEN(#PC)
 $BD42 DEFB $23,$06                         ;
 $BD44 DEFB $BA,$06                         ; }
 $BD46 DEFW $B60F                           ; place black spider S [16]
 $BD48 DEFB $03,$07,$1D                     ; #MOVEMENT(#PC)
 $BD4B DEFB $04,$07,$32                     ; #MOVEMENT(#PC)
 $BD4E DEFB $01,$07,$1C                     ; #MOVEMENT(#PC)
 $BD51 DEFB $02,$07,$1B                     ; #MOVEMENT(#PC)
 $BD54 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $1B - "#TEXTTOKEN(#PC + $02, $01)"
 $BD55 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD56 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD57 DEFB $A0,$02                         ; {#TEXTTOKEN(#PC)
 $BD59 DEFB $F3,$05                         ;
 $BD5B DEFB $00,$00                         ; }
 $BD5D DEFW $B619                           ; forest tangled smothering
                                            ; /3.Person/trees  [16]
 $BD5F DEFB $01,$07,$1A                     ; #MOVEMENT(#PC)
 $BD62 DEFB $04,$07,$32                     ; #MOVEMENT(#PC)
 $BD65 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $1C - "#TEXTTOKEN(#PC + $02, $01)"
 $BD66 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD67 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD68 DEFB $27,$11                         ; {#TEXTTOKEN(#PC)
 $BD6A DEFB $CC,$03                         ;
 $BD6C DEFB $22,$02                         ; }
 $BD6E DEFW $B624                           ; elvish clearing levelled ground
                                            ; untie logs
 $BD70 DEFB $04,$00,$19                     ; #MOVEMENT(#PC)
 $BD73 DEFB $03,$07,$1A                     ; #MOVEMENT(#PC)
 $BD76 DEFB $05,$0D,$1E                     ; #MOVEMENT(#PC)
 $BD79 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $1D - "#TEXTTOKEN(#PC + $02, $01)"
 $BD7A DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD7B DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD7C DEFB $BC,$00                         ; {#TEXTTOKEN(#PC)
 $BD7E DEFB $96,$01                         ;
 $BD80 DEFB $00,$00                         ; }
 $BD82 DEFW $0000                           ; ---
 $BD84 DEFB $04,$07,$1A                     ; #MOVEMENT(#PC)
 $BD87 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $1E - "#TEXTTOKEN(#PC + $02, $01)"
 $BD88 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD89 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD8A DEFB $0D,$03                         ; {#TEXTTOKEN(#PC)
 $BD8C DEFB $13,$02                         ;
 $BD8E DEFB $FF,$02                         ; }
 $BD90 DEFW $0000                           ; ---
 $BD92 DEFB $03,$08,$1F                     ; #MOVEMENT(#PC)
 $BD95 DEFB $02,$00,$20                     ; #MOVEMENT(#PC)
 $BD98 DEFB $04,$0D,$1C                     ; #MOVEMENT(#PC)
 $BD9B DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $1F - "#TEXTTOKEN(#PC + $02, $01)"
 $BD9C DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BD9D DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BD9E DEFB $EF,$11                         ; {#TEXTTOKEN(#PC)
 $BDA0 DEFB $8E,$01                         ;
 $BDA2 DEFB $00,$00                         ; }
 $BDA4 DEFW $B632                           ; dark dungeon elvenkings halls
 $BDA6 DEFB $08,$08,$20                     ; #MOVEMENT(#PC)
 $BDA9 DEFB $04,$08,$1E                     ; #MOVEMENT(#PC)
 $BDAC DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $20 - "#TEXTTOKEN(#PC + $02, $01)"
 $BDAD DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BDAE DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BDAF DEFB $1C,$01                         ; {#TEXTTOKEN(#PC)
 $BDB1 DEFB $13,$02                         ;
 $BDB3 DEFB $00,$00                         ; }
 $BDB5 DEFW $B63D                           ; cellar where king keeps his
                                            ; barrel Swine
 $BDB7 DEFB $05,$08,$1F                     ; #MOVEMENT(#PC)
 $BDBA DEFB $01,$00,$1E                     ; #MOVEMENT(#PC)
 $BDBD DEFB $0A,$0C,$21                     ; #MOVEMENT(#PC)
 $BDC0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $21 - "#TEXTTOKEN(#PC + $02, $01)"
 $BDC1 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BDC2 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BDC3 DEFB $A6,$82                         ; {#TEXTTOKEN(#PC)
 $BDC5 DEFB $00,$00                         ;
 $BDC7 DEFB $00,$00                         ; }
 $BDC9 DEFW $0000                           ; ---
 $BDCB DEFB $03,$27,$22                     ; #MOVEMENT(#PC)
 $BDCE DEFB $09,$0C,$00                     ; #MOVEMENT(#PC)
 $BDD1 DEFB $02,$2A,$00                     ; #MOVEMENT(#PC)
 $BDD4 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $22 - "#TEXTTOKEN(#PC + $02, $01)"
 $BDD5 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BDD6 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BDD7 DEFB $B7,$83                         ; {#TEXTTOKEN(#PC)
 $BDD9 DEFB $0F,$04                         ;
 $BDDB DEFB $00,$00                         ; }
 $BDDD DEFW $0000                           ; ---
 $BDDF DEFB $01,$00,$24                     ; #MOVEMENT(#PC)
 $BDE2 DEFB $03,$00,$23                     ; #MOVEMENT(#PC)
 $BDE5 DEFB $06,$27,$21                     ; #MOVEMENT(#PC)
 $BDE8 DEFB $02,$00,$2D                     ; #MOVEMENT(#PC)
 $BDEB DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $23 - "#TEXTTOKEN(#PC + $02, $01)"
 $BDEC DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BDED DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BDEE DEFB $DC,$86                         ; {#TEXTTOKEN(#PC)
 $BDF0 DEFB $B7,$03                         ;
 $BDF2 DEFB $00,$00                         ; }
 $BDF4 DEFW $B64F                           ; wooden town middle long lake
 $BDF6 DEFB $01,$00,$22                     ; #MOVEMENT(#PC)
 $BDF9 DEFB $02,$00,$22                     ; #MOVEMENT(#PC)
 $BDFC DEFB $03,$00,$22                     ; #MOVEMENT(#PC)
 $BDFF DEFB $04,$00,$22                     ; #MOVEMENT(#PC)
 $BE02 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $24 - "#TEXTTOKEN(#PC + $02, $01)"
 $BE03 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE04 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE05 DEFB $4A,$85                         ; {#TEXTTOKEN(#PC)
 $BE07 DEFB $70,$05                         ;
 $BE09 DEFB $00,$00                         ; }
 $BE0B DEFW $B65D                           ; strong river :current climb now
                                            ; strong move against
 $BE0D DEFB $09,$00,$25                     ; #MOVEMENT(#PC)
 $BE10 DEFB $02,$00,$22                     ; #MOVEMENT(#PC)
 $BE13 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $25 - "#TEXTTOKEN(#PC + $02, $01)"
 $BE14 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE15 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE16 DEFB $9F,$01                         ; {#TEXTTOKEN(#PC)
 $BE18 DEFB $CE,$01                         ;
 $BE1A DEFB $00,$00                         ; }
 $BE1C DEFW $B671                           ; bleak barren land that was once
                                            ; green
 $BE1E DEFB $01,$00,$26                     ; #MOVEMENT(#PC)
 $BE21 DEFB $0A,$00,$24                     ; #MOVEMENT(#PC)
 $BE24 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $26 - "#TEXTTOKEN(#PC + $02, $01)"
 $BE25 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE26 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE27 DEFB $2F,$87                         ; {#TEXTTOKEN(#PC)
 $BE29 DEFB $81,$01                         ;
 $BE2B DEFB $00,$00                         ; }
 $BE2D DEFW $B680                           ; ruins town dale
 $BE2F DEFB $01,$00,$27                     ; #MOVEMENT(#PC)
 $BE32 DEFB $02,$00,$25                     ; #MOVEMENT(#PC)
 $BE35 DEFB $06,$00,$28                     ; #MOVEMENT(#PC)
 $BE38 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $27 - "#TEXTTOKEN(#PC + $02, $01)"
 $BE39 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE3A DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE3B DEFB $C4,$02                         ; {#TEXTTOKEN(#PC)
 $BE3D DEFB $40,$09                         ;
 $BE3F DEFB $00,$00                         ; }
 $BE41 DEFW $B68A                           ; front gate lonely mountain
 $BE43 DEFB $01,$00,$29                     ; #MOVEMENT(#PC)
 $BE46 DEFB $02,$00,$26                     ; #MOVEMENT(#PC)
 $BE49 DEFB $04,$00,$28                     ; #MOVEMENT(#PC)
 $BE4C DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $28 - "#TEXTTOKEN(#PC + $02, $01)"
 $BE4D DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE4E DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE4F DEFB $21,$85                         ; {#TEXTTOKEN(#PC)
 $BE51 DEFB $00,$00                         ;
 $BE53 DEFB $00,$00                         ; }
 $BE55 DEFW $B695                           ; west side ravenhill
 $BE57 DEFB $01,$00,$2A                     ; #MOVEMENT(#PC)
 $BE5A DEFB $07,$00,$25                     ; #MOVEMENT(#PC)
 $BE5D DEFB $03,$00,$27                     ; #MOVEMENT(#PC)
 $BE60 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $29 - "#TEXTTOKEN(#PC + $02, $01)"
 $BE61 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE62 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE63 DEFB $0D,$83                         ; {#TEXTTOKEN(#PC)
 $BE65 DEFB $1A,$04                         ;
 $BE67 DEFB $00,$00                         ; }
 $BE69 DEFW $B69D                           ; halls where /3.Person/sleeps
                                            ; [16]
 $BE6B DEFB $02,$00,$27                     ; #MOVEMENT(#PC)
 $BE6E DEFB $03,$00,$2B                     ; #MOVEMENT(#PC)
 $BE71 DEFB $09,$00,$2C                     ; #MOVEMENT(#PC)
 $BE74 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $2A - "#TEXTTOKEN(#PC + $02, $01)"
 $BE75 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE76 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE77 DEFB $AA,$05                         ; {#TEXTTOKEN(#PC)
 $BE79 DEFB $00,$00                         ;
 $BE7B DEFB $00,$00                         ; }
 $BE7D DEFW $B6A7                           ; little steep bay ,still untie
                                            ; quiet ,an over hanging cliff
 $BE7F DEFB $02,$00,$28                     ; #MOVEMENT(#PC)
 $BE82 DEFB $03,$0B,$2B                     ; #MOVEMENT(#PC)
 $BE85 DEFB $01,$00,$33                     ; #MOVEMENT(#PC)
 $BE88 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $2B - "#TEXTTOKEN(#PC + $02, $01)"
 $BE89 DEFB %00000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE8A DEFB $B0                             ; LOCATION_PROP_VOLUME
 $BE8B DEFB $CD,$14                         ; {#TEXTTOKEN(#PC)
 $BE8D DEFB $ED,$05                         ;
 $BE8F DEFB $46,$06                         ; }
 $BE91 DEFW $B6BE                           ; smooth straight passage
 $BE93 DEFB $04,$0B,$2A                     ; #MOVEMENT(#PC)
 $BE96 DEFB $03,$00,$29                     ; #MOVEMENT(#PC)
 $BE99 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $2C - "#TEXTTOKEN(#PC + $02, $01)"
 $BE9A DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BE9B DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BE9C DEFB $4E,$84                         ; {#TEXTTOKEN(#PC)
 $BE9E DEFB $09,$04                         ;
 $BEA0 DEFB $00,$00                         ; }
 $BEA2 DEFW $B6C5                           ; lonely mountain
 $BEA4 DEFB $0A,$00,$29                     ; #MOVEMENT(#PC)
 $BEA7 DEFB $04,$00,$2A                     ; #MOVEMENT(#PC)
 $BEAA DEFB $02,$00,$27                     ; #MOVEMENT(#PC)
 $BEAD DEFB $08,$00,$28                     ; #MOVEMENT(#PC)
 $BEB0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $2E - "#TEXTTOKEN(#PC + $02, $01)"
 $BEB1 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BEB2 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BEB3 DEFB $4F,$05                         ; {#TEXTTOKEN(#PC)
 $BEB5 DEFB $A0,$02                         ;
 $BEB7 DEFB $00,$00                         ; }
 $BEB9 DEFW $0000                           ; ---
 $BEBB DEFB $03,$00,$02                     ; #MOVEMENT(#PC)
 $BEBE DEFB $01,$00,$18                     ; #MOVEMENT(#PC)
 $BEC1 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $2D - "#TEXTTOKEN(#PC + $02, $01)"
 $BEC2 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BEC3 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BEC4 DEFB $63,$07                         ; {#TEXTTOKEN(#PC)
 $BEC6 DEFB $00,$00                         ;
 $BEC8 DEFB $00,$00                         ; }
 $BECA DEFW $0000                           ; ---
 $BECC DEFB $02,$00,$08                     ; #MOVEMENT(#PC)
 $BECF DEFB $04,$00,$03                     ; #MOVEMENT(#PC)
 $BED2 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $02 - "#TEXTTOKEN(#PC + $02, $01)"
 $BED3 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BED4 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BED5 DEFB $4F,$05                         ; {#TEXTTOKEN(#PC)
 $BED7 DEFB $A0,$02                         ;
 $BED9 DEFB $00,$00                         ; }
 $BEDB DEFW $0000                           ; ---
 $BEDD DEFB $03,$00,$03                     ; #MOVEMENT(#PC)
 $BEE0 DEFB $04,$00,$2E                     ; #MOVEMENT(#PC)
 $BEE3 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $03 - "#TEXTTOKEN(#PC + $02, $01)"
 $BEE4 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BEE5 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BEE6 DEFB $A0,$02                         ; {#TEXTTOKEN(#PC)
 $BEE8 DEFB $00,$00                         ;
 $BEEA DEFB $00,$00                         ; }
 $BEEC DEFW $0000                           ; ---
 $BEEE DEFB $04,$00,$02                     ; #MOVEMENT(#PC)
 $BEF1 DEFB $03,$00,$2D                     ; #MOVEMENT(#PC)
 $BEF4 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $08 - "#TEXTTOKEN(#PC + $02, $01)"
 $BEF5 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BEF6 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BEF7 DEFB $4A,$05                         ; {#TEXTTOKEN(#PC)
 $BEF9 DEFB $70,$05                         ;
 $BEFB DEFB $00,$00                         ; }
 $BEFD DEFW $0000                           ; ---
 $BEFF DEFB $01,$00,$2D                     ; #MOVEMENT(#PC)
 $BF02 DEFB $04,$00,$03                     ; #MOVEMENT(#PC)
 $BF05 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $17 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF06 DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF07 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF08 DEFB $A6,$82                         ; {#TEXTTOKEN(#PC)
 $BF0A DEFB $00,$00                         ;
 $BF0C DEFB $00,$00                         ; }
 $BF0E DEFW $0000                           ; ---
 $BF10 DEFB $07,$2A,$21                     ; #MOVEMENT(#PC)
 $BF13 DEFB $01,$00,$30                     ; #MOVEMENT(#PC)
 $BF16 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $30 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF17 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF18 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF19 DEFB $56,$04                         ; {#TEXTTOKEN(#PC)
 $BF1B DEFB $00,$00                         ;
 $BF1D DEFB $00,$00                         ; }
 $BF1F DEFW $0000                           ; ---
 $BF21 DEFB $08,$00,$31                     ; #MOVEMENT(#PC)
 $BF24 DEFB $03,$00,$2F                     ; #MOVEMENT(#PC)
 $BF27 DEFB $07,$00,$17                     ; #MOVEMENT(#PC)
 $BF2A DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $31 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF2B DEFB %10001000                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF2C DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF2D DEFB $4A,$05                         ; {#TEXTTOKEN(#PC)
 $BF2F DEFB $FF,$02                         ;
 $BF31 DEFB $00,$00                         ; }
 $BF33 DEFW $0000                           ; ---
 $BF35 DEFB $05,$00,$30                     ; #MOVEMENT(#PC)
 $BF38 DEFB $02,$00,$16                     ; #MOVEMENT(#PC)
 $BF3B DEFB $03,$00,$18                     ; #MOVEMENT(#PC)
 $BF3E DEFB $08,$00,$0A                     ; #MOVEMENT(#PC)
 $BF41 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $2F - "#TEXTTOKEN(#PC + $02, $01)"
 $BF42 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF43 DEFB $FE                             ; LOCATION_PROP_VOLUME
 $BF44 DEFB $E6,$04                         ; {#TEXTTOKEN(#PC)
 $BF46 DEFB $28,$02                         ;
 $BF48 DEFB $00,$00                         ; }
 $BF4A DEFW $0000                           ; ---
 $BF4C DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $32 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF4D DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF4E DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF4F DEFB $A0,$02                         ; {#TEXTTOKEN(#PC)
 $BF51 DEFB $04,$03                         ;
 $BF53 DEFB $00,$00                         ; }
 $BF55 DEFW $0000                           ; ---
 $BF57 DEFB $05,$07,$1A                     ; #MOVEMENT(#PC)
 $BF5A DEFB $04,$00,$43                     ; #MOVEMENT(#PC)
 $BF5D DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $33 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF5E DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF5F DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF60 DEFB $E6,$04                         ; {#TEXTTOKEN(#PC)
 $BF62 DEFB $28,$02                         ;
 $BF64 DEFB $00,$00                         ; }
 $BF66 DEFW $0000                           ; ---
 $BF68 DEFB $01,$00,$2F                     ; #MOVEMENT(#PC)
 $BF6B DEFB $02,$00,$2A                     ; #MOVEMENT(#PC)
 $BF6E DEFB $09,$00,$2C                     ; #MOVEMENT(#PC)
 $BF71 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $42 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF72 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF73 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF74 DEFB $1E,$08                         ; {#TEXTTOKEN(#PC)
 $BF76 DEFB $79,$07                         ;
 $BF78 DEFB $00,$00                         ; }
 $BF7A DEFW $B6CA                           ; west  [02] [04]east bank black
                                            ; river
 $BF7C DEFB $04,$00,$19                     ; #MOVEMENT(#PC)
 $BF7F DEFB $03,$09,$43                     ; #MOVEMENT(#PC)
 $BF82 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $43 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF83 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF84 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF85 DEFB $1E,$08                         ; {#TEXTTOKEN(#PC)
 $BF87 DEFB $FE,$01                         ;
 $BF89 DEFB $00,$00                         ; }
 $BF8B DEFW $B6CF                           ; east bank black river
 $BF8D DEFB $03,$00,$32                     ; #MOVEMENT(#PC)
 $BF90 DEFB $04,$09,$42                     ; #MOVEMENT(#PC)
 $BF93 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $44 - "#TEXTTOKEN(#PC + $02, $01)"
 $BF94 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BF95 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BF96 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BF98 DEFB $64,$04                         ;
 $BF9A DEFB $00,$00                         ; }
 $BF9C DEFW $0000                           ; ---
 $BF9E DEFB $03,$00,$47                     ; #MOVEMENT(#PC)
 $BFA1 DEFB $05,$00,$45                     ; #MOVEMENT(#PC)
 $BFA4 DEFB $02,$00,$0A                     ; #MOVEMENT(#PC)
 $BFA7 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $45 - "#TEXTTOKEN(#PC + $02, $01)"
 $BFA8 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BFA9 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BFAA DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BFAC DEFB $64,$04                         ;
 $BFAE DEFB $00,$00                         ; }
 $BFB0 DEFW $0000                           ; ---
 $BFB2 DEFB $01,$00,$46                     ; #MOVEMENT(#PC)
 $BFB5 DEFB $08,$00,$44                     ; #MOVEMENT(#PC)
 $BFB8 DEFB $02,$00,$0A                     ; #MOVEMENT(#PC)
 $BFBB DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $46 - "#TEXTTOKEN(#PC + $02, $01)"
 $BFBC DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BFBD DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BFBE DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BFC0 DEFB $64,$04                         ;
 $BFC2 DEFB $00,$00                         ; }
 $BFC4 DEFW $0000                           ; ---
 $BFC6 DEFB $07,$00,$48                     ; #MOVEMENT(#PC)
 $BFC9 DEFB $02,$00,$45                     ; #MOVEMENT(#PC)
 $BFCC DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $47 - "#TEXTTOKEN(#PC + $02, $01)"
 $BFCD DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BFCE DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BFCF DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BFD1 DEFB $64,$04                         ;
 $BFD3 DEFB $00,$00                         ; }
 $BFD5 DEFW $0000                           ; ---
 $BFD7 DEFB $06,$00,$45                     ; #MOVEMENT(#PC)
 $BFDA DEFB $02,$00,$4A                     ; #MOVEMENT(#PC)
 $BFDD DEFB $04,$00,$44                     ; #MOVEMENT(#PC)
 $BFE0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $48 - "#TEXTTOKEN(#PC + $02, $01)"
 $BFE1 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BFE2 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BFE3 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BFE5 DEFB $64,$04                         ;
 $BFE7 DEFB $00,$00                         ; }
 $BFE9 DEFW $0000                           ; ---
 $BFEB DEFB $06,$00,$46                     ; #MOVEMENT(#PC)
 $BFEE DEFB $08,$00,$47                     ; #MOVEMENT(#PC)
 $BFF1 DEFB $0A,$00,$4B                     ; #MOVEMENT(#PC)
 $BFF4 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $49 - "#TEXTTOKEN(#PC + $02, $01)"
 $BFF5 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $BFF6 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $BFF7 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $BFF9 DEFB $64,$04                         ;
 $BFFB DEFB $00,$00                         ; }
 $BFFD DEFW $0000                           ; ---
 $BFFF DEFB $03,$00,$4A                     ; #MOVEMENT(#PC)
 $C002 DEFB $01,$00,$0A                     ; #MOVEMENT(#PC)
 $C005 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $4A - "#TEXTTOKEN(#PC + $02, $01)"
 $C006 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $C007 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $C008 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $C00A DEFB $64,$04                         ;
 $C00C DEFB $00,$00                         ; }
 $C00E DEFW $0000                           ; ---
 $C010 DEFB $01,$00,$47                     ; #MOVEMENT(#PC)
 $C013 DEFB $04,$00,$49                     ; #MOVEMENT(#PC)
 $C016 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $4B - "#TEXTTOKEN(#PC + $02, $01)"
 $C017 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $C018 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $C019 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $C01B DEFB $3C,$06                         ;
 $C01D DEFB $00,$00                         ; }
 $C01F DEFW $0000                           ; ---
 $C021 DEFB $0A,$00,$4C                     ; #MOVEMENT(#PC)
 $C024 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $4C - "#TEXTTOKEN(#PC + $02, $01)"
 $C025 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $C026 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $C027 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $C029 DEFB $3C,$06                         ;
 $C02B DEFB $00,$00                         ; }
 $C02D DEFW $0000                           ; ---
 $C02F DEFB $0A,$00,$4D                     ; #MOVEMENT(#PC)
 $C032 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $4D - "#TEXTTOKEN(#PC + $02, $01)"
 $C033 DEFB %10000110                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $C034 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $C035 DEFB $D4,$14                         ; {#TEXTTOKEN(#PC)
 $C037 DEFB $3C,$06                         ;
 $C039 DEFB $00,$00                         ; }
 $C03B DEFW $0000                           ; ---
 $C03D DEFB $0A,$00,$4E                     ; #MOVEMENT(#PC)
 $C040 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $4E - "#TEXTTOKEN(#PC + $02, $01)"
 $C041 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $C042 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $C043 DEFB $2F,$17                         ; {#TEXTTOKEN(#PC)
 $C045 DEFB $96,$01                         ;
 $C047 DEFB $40,$04                         ; }
 $C049 DEFW $0000                           ; ---
 $C04B DEFB $03,$00,$4F                     ; #MOVEMENT(#PC)
 $C04E DEFB $09,$00,$4D                     ; #MOVEMENT(#PC)
 $C051 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Location $4F - "#TEXTTOKEN(#PC + $02, $01)"
 $C052 DEFB %10000100                       ; #LOCATIONATTRIBUTE(#PEEK(#PC))
 $C053 DEFB $FF                             ; LOCATION_PROP_VOLUME
 $C054 DEFB $2F,$17                         ; {#TEXTTOKEN(#PC)
 $C056 DEFB $96,$01                         ;
 $C058 DEFB $40,$04                         ; }
 $C05A DEFW $0000                           ; ---
 $C05C DEFB $04,$00,$4E                     ; #MOVEMENT(#PC)
 $C05F DEFB $09,$00,$4A                     ; #MOVEMENT(#PC)
 $C062 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Object Table
;
; .
;
; .
;
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
@label=ObjectTable
b$C063 DEFB $00      ; Object ID.
 $C064 DEFW $C11B    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C066 DEFB $01      ; Object ID.
 $C067 DEFW $C170    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C069 DEFB $02      ; Object ID.
 $C06A DEFW $C1AD    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C06C DEFB $03      ; Object ID.
 $C06D DEFW $C1D1    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C06F DEFB $04      ; Object ID.
 $C070 DEFW $C1BF    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C072 DEFB $05      ; Object ID.
 $C073 DEFW $C145    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C075 DEFB $06      ; Object ID.
 $C076 DEFW $C1E6    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C078 DEFB $07      ; Object ID.
 $C079 DEFW $C205    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C07B DEFB $08      ; Object ID.
 $C07C DEFW $C224    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C07E DEFB $09      ; Object ID.
 $C07F DEFW $C24D    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C081 DEFB $0A      ; Object ID.
 $C082 DEFW $C28D    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C084 DEFB $0B      ; Object ID.
 $C085 DEFW $C2B5    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C087 DEFB $0C      ; Object ID.
 $C088 DEFW $C2DD    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C08A DEFB $0D      ; Object ID.
 $C08B DEFW $C381    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C08D DEFB $0E      ; Object ID.
 $C08E DEFW $C305    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C090 DEFB $0F      ; Object ID.
 $C091 DEFW $C332    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C093 DEFB $10      ; Object ID.
 $C094 DEFW $C31A    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C096 DEFB $11      ; Object ID.
 $C097 DEFW $C344    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C099 DEFB $12      ; Object ID.
 $C09A DEFW $C366    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C09C DEFB $13      ; Object ID.
 $C09D DEFW $C3EE    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C09F DEFB $14      ; Object ID.
 $C0A0 DEFW $C418    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0A2 DEFB $15      ; Object ID.
 $C0A3 DEFW $C454    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0A5 DEFB $16      ; Object ID.
 $C0A6 DEFW $C469    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0A8 DEFB $17      ; Object ID.
 $C0A9 DEFW $C47E    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0AB DEFB $18      ; Object ID.
 $C0AC DEFW $C49A    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0AE DEFB $19      ; Object ID.
 $C0AF DEFW $C4D5    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0B1 DEFB $1A      ; Object ID.
 $C0B2 DEFW $C4EA    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0B4 DEFB $1B      ; Object ID.
 $C0B5 DEFW $C4FF    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0B7 DEFB $1C      ; Object ID.
 $C0B8 DEFW $C521    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0BA DEFB $1D      ; Object ID.
 $C0BB DEFW $C534    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0BD DEFB $1E      ; Object ID.
 $C0BE DEFW $C54C    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0C0 DEFB $1F      ; Object ID.
 $C0C1 DEFW $C567    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0C3 DEFB $20      ; Object ID.
 $C0C4 DEFW $C57F    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0C6 DEFB $21      ; Object ID.
 $C0C7 DEFW $C597    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0C9 DEFB $22      ; Object ID.
 $C0CA DEFW $C5B8    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0CC DEFB $23      ; Object ID.
 $C0CD DEFW $C5CD    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0CF DEFB $24      ; Object ID.
 $C0D0 DEFW $C5DF    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0D2 DEFB $25      ; Object ID.
 $C0D3 DEFW $C5F4    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0D5 DEFB $26      ; Object ID.
 $C0D6 DEFW $C663    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0D8 DEFB $27      ; Object ID.
 $C0D9 DEFW $C678    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0DB DEFB $28      ; Object ID.
 $C0DC DEFW $C68E    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0DE DEFB $29      ; Object ID.
 $C0DF DEFW $C61B    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0E1 DEFB $2A      ; Object ID.
 $C0E2 DEFW $C26D    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0E4 DEFB $2B      ; Object ID.
 $C0E5 DEFW $C19B    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0E7 DEFB $3C      ; Object ID.
 $C0E8 DEFW $C133    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0EA DEFB $3D      ; Object ID.
 $C0EB DEFW $C6A0    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0ED DEFB $3E      ; Object ID.
 $C0EE DEFW $C3A0    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0F0 DEFB $3F      ; Object ID.
 $C0F1 DEFW $C3B2    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0F3 DEFB $40      ; Object ID.
 $C0F4 DEFW $C3CA    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0F6 DEFB $41      ; Object ID.
 $C0F7 DEFW $C3DC    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0F9 DEFB $42      ; Object ID.
 $C0FA DEFW $C430    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0FC DEFB $43      ; Object ID.
 $C0FD DEFW $C442    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C0FF DEFB $44      ; Object ID.
 $C100 DEFW $C4B1    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C102 DEFB $45      ; Object ID.
 $C103 DEFW $C6B8    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C105 DEFB $46      ; Object ID.
 $C106 DEFW $C4C3    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C108 DEFB $47      ; Object ID.
 $C109 DEFW $C63F    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C10B DEFB $48      ; Object ID.
 $C10C DEFW $C651    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C10E DEFB $49      ; Object ID.
 $C10F DEFW $C6D0    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C111 DEFB $4A      ; Object ID.
 $C112 DEFW $C6E8    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C114 DEFB $4B      ; Object ID.
 $C115 DEFW $C700    ; Object address.
; Object ID #OBJECT(#PEEK(#PC), 1, 1)($).
 $C117 DEFB $4C      ; Object ID.
 $C118 DEFW $C718    ; Object address.
; End of table.
 $C11A DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Objects
;
; .
;
; .
;
; Object $00 - "#TEXTTOKEN(#PC + $08, 1)"
@label=Objects
b$C11B DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C11C DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C11D DEFB $10                             ; Volume (?)
 $C11E DEFB $40                             ; Mass (?)
 $C11F DEFB $10
 $C120 DEFB $40                             ; Strength (?)
 $C121 DEFB $40
 $C122 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C123 DEFB $A8,$87                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C125 DEFB $00,$00                         ;
 $C127 DEFB $00,$00                         ; }
 $C129 DEFW $0000                           ; Help Message (none).
 $C12B DEFB $01                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C12C DEFB $1B,$B5,$92,$00,$D2,$90
 $C132 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $3C - "#TEXTTOKEN(#PC + $08, 1)"
 $C133 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C134 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C135 DEFB $C0                             ; Volume (?)
 $C136 DEFB $60                             ; Mass (?)
 $C137 DEFB $00
 $C138 DEFB $C0                             ; Strength (?)
 $C139 DEFB $C0
 $C13A DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C13B DEFB $C8,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C13D DEFB $36,$05                         ;
 $C13F DEFB $F3,$02                         ; }
 $C141 DEFW $0000                           ; Help Message (none).
 $C143 DEFB $29                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C144 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $05 - "#TEXTTOKEN(#PC + $08, 1)"
 $C145 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C146 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C147 DEFB $FF                             ; Volume (?)
 $C148 DEFB $FF                             ; Mass (?)
 $C149 DEFB $00
 $C14A DEFB $00                             ; Strength (?)
 $C14B DEFB $10
 $C14C DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C14D DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C14F DEFB $5F,$05                         ;
 $C151 DEFB $04,$03                         ; }
 $C153 DEFW $0000                           ; Help Message (none).
 $C155 DEFB $01                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C156 DEFB $04                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C157 DEFB $0B,$ED,$92,$0C,$38,$91
 $C15D DEFB $10,$0E,$91,$18,$EC,$8E
 $C163 DEFB $1E,$3B,$8F,$25,$58,$A3
 $C169 DEFB $26,$58,$A3,$2C,$A4,$94
 $C16F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $01 - "#TEXTTOKEN(#PC + $08, 1)"
 $C170 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C171 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C172 DEFB $FF                             ; Volume (?)
 $C173 DEFB $FF                             ; Mass (?)
 $C174 DEFB $00
 $C175 DEFB $00                             ; Strength (?)
 $C176 DEFB $90
 $C177 DEFB %10000001                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C178 DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C17A DEFB $27,$03                         ;
 $C17C DEFB $53,$05                         ; }
 $C17E DEFW $0000                           ; Help Message (none).
 $C180 DEFB $07                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C181 DEFB $06                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C182 DEFB $0B,$ED,$92,$0C,$38,$91
 $C188 DEFB $10,$0E,$91,$18,$EC,$8E
 $C18E DEFB $1E,$3B,$8F,$25,$38,$A3
 $C194 DEFB $26,$38,$A3,$2C,$A4,$94
 $C19A DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $2B - "#TEXTTOKEN(#PC + $08, 1)"
 $C19B DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C19C DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C19D DEFB $00                             ; Volume (?)
 $C19E DEFB $00                             ; Mass (?)
 $C19F DEFB $00
 $C1A0 DEFB $00                             ; Strength (?)
 $C1A1 DEFB $00
 $C1A2 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C1A3 DEFB $A5,$03                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C1A5 DEFB $F3,$02                         ;
 $C1A7 DEFB $00,$00                         ; }
 $C1A9 DEFW $0000                           ; Help Message (none).
 $C1AB DEFB $4F                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C1AC DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $02 - "#TEXTTOKEN(#PC + $08, 1)"
 $C1AD DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C1AE DEFB $1F                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C1AF DEFB $00                             ; Volume (?)
 $C1B0 DEFB $00                             ; Mass (?)
 $C1B1 DEFB $00
 $C1B2 DEFB $00                             ; Strength (?)
 $C1B3 DEFB $00
 $C1B4 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C1B5 DEFB $A5,$03                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C1B7 DEFB $E1,$05                         ;
 $C1B9 DEFB $63,$01                         ; }
 $C1BB DEFW $0000                           ; Help Message (none).
 $C1BD DEFB $0D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C1BE DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $04 - "#TEXTTOKEN(#PC + $08, 1)"
 $C1BF DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C1C0 DEFB $47                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C1C1 DEFB $01                             ; Volume (?)
 $C1C2 DEFB $01                             ; Mass (?)
 $C1C3 DEFB $00
 $C1C4 DEFB $00                             ; Strength (?)
 $C1C5 DEFB $00
 $C1C6 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C1C7 DEFB $A5,$03                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C1C9 DEFB $BF,$03                         ;
 $C1CB DEFB $00,$00                         ; }
 $C1CD DEFW $0000                           ; Help Message (none).
 $C1CF DEFB $05                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C1D0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $03 - "#TEXTTOKEN(#PC + $08, 1)"
 $C1D1 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C1D2 DEFB $3E                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C1D3 DEFB $02                             ; Volume (?)
 $C1D4 DEFB $00                             ; Mass (?)
 $C1D5 DEFB $00
 $C1D6 DEFB $00                             ; Strength (?)
 $C1D7 DEFB $02
 $C1D8 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C1D9 DEFB $2C,$14                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C1DB DEFB $63,$01                         ;
 $C1DD DEFB $00,$00                         ; }
 $C1DF DEFW $B552                           ; Help Message
                                            ; (#R(#EVAL(#PEEK(#PC)+#PEEK(#PC+1)*256))).
 $C1E1 DEFB $01                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C1E2 DEFB $1C,$C4,$A7
 $C1E5 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $06 - "#TEXTTOKEN(#PC + $08, 1)"
 $C1E6 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C1E7 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C1E8 DEFB $FF                             ; Volume (?)
 $C1E9 DEFB $FF                             ; Mass (?)
 $C1EA DEFB $00
 $C1EB DEFB $FF                             ; Strength (?)
 $C1EC DEFB $00
 $C1ED DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C1EE DEFB $51,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C1F0 DEFB $E1,$05                         ;
 $C1F2 DEFB $81,$03                         ; }
 $C1F4 DEFW $0000                           ; Help Message (none).
 $C1F6 DEFB $0E                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C1F7 DEFB $0F                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C1F8 DEFB $10,$68,$A3,$0C,$38,$91,$1E,$3B
 $C200 DEFB $8F,$18,$EC,$8E
 $C204 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $07 - "#TEXTTOKEN(#PC + $08, 1)"
 $C205 DEFB $05                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C206 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C207 DEFB $A0                             ; Volume (?)
 $C208 DEFB $50                             ; Mass (?)
 $C209 DEFB $00
 $C20A DEFB $40                             ; Strength (?)
 $C20B DEFB $40
 $C20C DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C20D DEFB $76,$07                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C20F DEFB $23,$06                         ;
 $C211 DEFB $00,$00                         ; }
 $C213 DEFW $0000                           ; Help Message (none).
 $C215 DEFB $1A                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C216 DEFB $1C                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C217 DEFB $1B                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C218 DEFB $1D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C219 DEFB $32                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C21A DEFB $0B,$ED,$92,$00,$77,$A3,$1E,$3B
 $C222 DEFB $8F
 $C223 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $08 - "#TEXTTOKEN(#PC + $08, 1)"
 $C224 DEFB $03                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C225 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C226 DEFB $FF                             ; Volume (?)
 $C227 DEFB $FF                             ; Mass (?)
 $C228 DEFB $00
 $C229 DEFB $00                             ; Strength (?)
 $C22A DEFB $00
 $C22B DEFB %10000001                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C22C DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C22E DEFB $36,$05                         ;
 $C230 DEFB $00,$00                         ; }
 $C232 DEFW $0000                           ; Help Message (none).
 $C234 DEFB $1F                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C235 DEFB $1E                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C236 DEFB $20                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C237 DEFB $10,$0E,$91,$0C,$38,$91,$18,$EC
 $C23F DEFB $8E,$1E,$3B,$8F,$25,$34,$A3,$26
 $C247 DEFB $34,$A3,$2C,$A4,$94
 $C24C DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $09 - "#TEXTTOKEN(#PC + $08, 1)"
 $C24D DEFB $03                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C24E DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C24F DEFB $FF                             ; Volume (?)
 $C250 DEFB $FF                             ; Mass (?)
 $C251 DEFB $00
 $C252 DEFB $00                             ; Strength (?)
 $C253 DEFB $00
 $C254 DEFB %10000110                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C255 DEFB $4A,$05                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C257 DEFB $53,$02                         ;
 $C259 DEFB $A5,$00                         ; }
 $C25B DEFW $B563                           ; Help Message (#R(#EVAL(#PEEK(#PC)
                                            ; + #PEEK(#PC + 1) * 256))).
 $C25D DEFB $42                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C25E DEFB $43                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C25F DEFB $19                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C260 DEFB $11,$28,$94,$0E,$28,$94,$19,$F8
 $C268 DEFB $8E,$32,$10,$A3
 $C26C DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $2A - "#TEXTTOKEN(#PC + $08, 1)"
 $C26D DEFB $03                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C26E DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C26F DEFB $FF                             ; Volume (?)
 $C270 DEFB $FF                             ; Mass (?)
 $C271 DEFB $00
 $C272 DEFB $00                             ; Strength (?)
 $C273 DEFB $00
 $C274 DEFB %10000110                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C275 DEFB $4A,$05                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C277 DEFB $53,$02                         ;
 $C279 DEFB $00,$00                         ; }
 $C27B DEFW $0000                           ; Help Message (none).
 $C27D DEFB $17                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C27E DEFB $21                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C27F DEFB $22                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C280 DEFB $11,$28,$94,$0E,$28,$94,$19,$F8
 $C288 DEFB $8E,$32,$CD,$A2
 $C28C DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $0A - "#TEXTTOKEN(#PC + $08, 1)"
 $C28D DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C28E DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C28F DEFB $40                             ; Volume (?)
 $C290 DEFB $FF                             ; Mass (?)
 $C291 DEFB $00
 $C292 DEFB $50                             ; Strength (?)
 $C293 DEFB $50
 $C294 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C295 DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C297 DEFB $E8,$02                         ;
 $C299 DEFB $7C,$00                         ; }
 $C29B DEFW $0000                           ; Help Message (none).
 $C29D DEFB $13                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C29E DEFB $14                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C29F DEFB $10,$0E,$91,$0C,$38,$91,$0B,$ED
 $C2A7 DEFB $92,$18,$EC,$8E,$1E,$3B,$8F,$2C
 $C2AF DEFB $A4,$94,$0B,$ED,$92
 $C2B4 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $0B - "#TEXTTOKEN(#PC + $08, 1)"
 $C2B5 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C2B6 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C2B7 DEFB $FF                             ; Volume (?)
 $C2B8 DEFB $FF                             ; Mass (?)
 $C2B9 DEFB $00
 $C2BA DEFB $00                             ; Strength (?)
 $C2BB DEFB $00
 $C2BC DEFB %00000001                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C2BD DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C2BF DEFB $56,$04                         ;
 $C2C1 DEFB $A6,$05                         ; }
 $C2C3 DEFW $0000                           ; Help Message (none).
 $C2C5 DEFB $2A                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C2C6 DEFB $2B                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C2C7 DEFB $0C,$38,$91,$00,$A2,$AA,$26,$30
 $C2CF DEFB $A3,$00,$5E,$A3,$1E,$3B,$8F,$18
 $C2D7 DEFB $EC,$8E,$2C,$A4,$94
 $C2DC DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $0C - "#TEXTTOKEN(#PC + $08, 1)"
 $C2DD DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C2DE DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C2DF DEFB $FF                             ; Volume (?)
 $C2E0 DEFB $FF                             ; Mass (?)
 $C2E1 DEFB $00
 $C2E2 DEFB $00                             ; Strength (?)
 $C2E3 DEFB $30
 $C2E4 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C2E5 DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C2E7 DEFB $BF,$03                         ;
 $C2E9 DEFB $E0,$06                         ; }
 $C2EB DEFW $0000                           ; Help Message (none).
 $C2ED DEFB $20                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C2EE DEFB $21                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C2EF DEFB $10,$7E,$A6,$0C,$7E,$A6,$0B,$ED
 $C2F7 DEFB $92,$18,$EC,$8E,$1E,$3B,$8F,$2C
 $C2FF DEFB $A4,$94,$00,$E2,$A5
 $C304 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $0E - "#TEXTTOKEN(#PC + $08, 1)"
 $C305 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C306 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C307 DEFB $03                             ; Volume (?)
 $C308 DEFB $04                             ; Mass (?)
 $C309 DEFB $00
 $C30A DEFB $40                             ; Strength (?)
 $C30B DEFB $80
 $C30C DEFB %10010100                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C30D DEFB $80,$06                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C30F DEFB $99,$05                         ;
 $C311 DEFB $64,$06                         ; }
 $C313 DEFW $0000                           ; Help Message (none).
 $C315 DEFB $07                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C316 DEFB $0B,$ED,$92
 $C319 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $10 - "#TEXTTOKEN(#PC + $08, 1)"
 $C31A DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C31B DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C31C DEFB $00                             ; Volume (?)
 $C31D DEFB $00                             ; Mass (?)
 $C31E DEFB $00
 $C31F DEFB $FF                             ; Strength (?)
 $C320 DEFB $00
 $C321 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C322 DEFB $3D,$05                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C324 DEFB $35,$07                         ;
 $C326 DEFB $F3,$02                         ; }
 $C328 DEFW $0000                           ; Help Message (none).
 $C32A DEFB $3D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C32B DEFB $28,$90,$A3,$16,$BC,$A3
 $C331 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $0F - "#TEXTTOKEN(#PC + $08, 1)"
 $C332 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C333 DEFB $42                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C334 DEFB $02                             ; Volume (?)
 $C335 DEFB $02                             ; Mass (?)
 $C336 DEFB $00
 $C337 DEFB $02                             ; Strength (?)
 $C338 DEFB $02
 $C339 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C33A DEFB $A5,$03                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C33C DEFB $36,$05                         ;
 $C33E DEFB $00,$00                         ; }
 $C340 DEFW $0000                           ; Help Message (none).
 $C342 DEFB $20                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C343 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $11 - "#TEXTTOKEN(#PC + $08, 1)"
 $C344 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C345 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C346 DEFB $FF                             ; Volume (?)
 $C347 DEFB $FF                             ; Mass (?)
 $C348 DEFB $00
 $C349 DEFB $FF                             ; Strength (?)
 $C34A DEFB $FF
 $C34B DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C34C DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C34E DEFB $E8,$02                         ;
 $C350 DEFB $00,$00                         ; }
 $C352 DEFW $0000                           ; Help Message (none).
 $C354 DEFB $10                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C355 DEFB $0D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C356 DEFB $10,$C0,$A4,$0C,$38,$91,$1E,$3B
 $C35E DEFB $8F,$18,$EC,$8E,$2C,$A4,$94
 $C365 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $12 - "#TEXTTOKEN(#PC + $08, 1)"
 $C366 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C367 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C368 DEFB $02                             ; Volume (?)
 $C369 DEFB $02                             ; Mass (?)
 $C36A DEFB $04
 $C36B DEFB $20                             ; Strength (?)
 $C36C DEFB $05
 $C36D DEFB %10100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C36E DEFB $5B,$05                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C370 DEFB $00,$00                         ;
 $C372 DEFB $00,$00                         ; }
 $C374 DEFW $0000                           ; Help Message (none).
 $C376 DEFB $07                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C377 DEFB $2B,$14,$A8,$2E,$48,$A2,$31,$76
 $C37F DEFB $A8
 $C380 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $0D - "#TEXTTOKEN(#PC + $08, 1)"
 $C381 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C382 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C383 DEFB $FF                             ; Volume (?)
 $C384 DEFB $FF                             ; Mass (?)
 $C385 DEFB $00
 $C386 DEFB $FF                             ; Strength (?)
 $C387 DEFB $FF
 $C388 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C389 DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C38B DEFB $24,$04                         ;
 $C38D DEFB $00,$00                         ; }
 $C38F DEFW $0000                           ; Help Message (none).
 $C391 DEFB $1E                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C392 DEFB $1C                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C393 DEFB $1E,$3B,$8F,$18,$EC,$8E,$2C,$A4
 $C39B DEFB $94,$1C,$1E,$A7
 $C39F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $3E - "#TEXTTOKEN(#PC + $08, 1)"
 $C3A0 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C3A1 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C3A2 DEFB $15                             ; Volume (?)
 $C3A3 DEFB $60                             ; Mass (?)
 $C3A4 DEFB $10
 $C3A5 DEFB $70                             ; Strength (?)
 $C3A6 DEFB $88
 $C3A7 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C3A8 DEFB $BD,$82                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C3AA DEFB $00,$00                         ;
 $C3AC DEFB $00,$00                         ; }
 $C3AE DEFW $0000                           ; Help Message (none).
 $C3B0 DEFB $01                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C3B1 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $3F - "#TEXTTOKEN(#PC + $08, 1)"
 $C3B2 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C3B3 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C3B4 DEFB $1D                             ; Volume (?)
 $C3B5 DEFB $50                             ; Mass (?)
 $C3B6 DEFB $10
 $C3B7 DEFB $68                             ; Strength (?)
 $C3B8 DEFB $78
 $C3B9 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C3BA DEFB $B4,$86                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C3BC DEFB $00,$00                         ;
 $C3BE DEFB $00,$00                         ; }
 $C3C0 DEFW $0000                           ; Help Message (none).
 $C3C2 DEFB $01                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C3C3 DEFB $0F,$71,$91,$00,$3B,$A7
 $C3C9 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $40 - "#TEXTTOKEN(#PC + $08, 1)"
 $C3CA DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C3CB DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C3CC DEFB $70                             ; Volume (?)
 $C3CD DEFB $FF                             ; Mass (?)
 $C3CE DEFB $40
 $C3CF DEFB $40                             ; Strength (?)
 $C3D0 DEFB $30
 $C3D1 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C3D2 DEFB $0A,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C3D4 DEFB $9E,$07                         ;
 $C3D6 DEFB $00,$00                         ; }
 $C3D8 DEFW $0000                           ; Help Message (none).
 $C3DA DEFB $1C                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C3DB DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $41 - "#TEXTTOKEN(#PC + $08, 1)"
 $C3DC DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C3DD DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C3DE DEFB $20                             ; Volume (?)
 $C3DF DEFB $30                             ; Mass (?)
 $C3E0 DEFB $50
 $C3E1 DEFB $40                             ; Strength (?)
 $C3E2 DEFB $40
 $C3E3 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C3E4 DEFB $0D,$82                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C3E6 DEFB $00,$00                         ;
 $C3E8 DEFB $00,$00                         ; }
 $C3EA DEFW $0000                           ; Help Message (none).
 $C3EC DEFB $09                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C3ED DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $13 - "#TEXTTOKEN(#PC + $08, 1)"
 $C3EE DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C3EF DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C3F0 DEFB $20                             ; Volume (?)
 $C3F1 DEFB $03                             ; Mass (?)
 $C3F2 DEFB $00
 $C3F3 DEFB $20                             ; Strength (?)
 $C3F4 DEFB $20
 $C3F5 DEFB %10000100                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C3F6 DEFB $84,$10                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C3F8 DEFB $00,$00                         ;
 $C3FA DEFB $00,$00                         ; }
 $C3FC DEFW $0000                           ; Help Message (none).
 $C3FE DEFB $20                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C3FF DEFB $10,$0E,$91,$0C,$38,$91,$11,$4F
 $C407 DEFB $92,$23,$69,$8F,$22,$04,$94,$38
 $C40F DEFB $27,$AA,$36,$5F,$A5,$0B,$ED,$92
 $C417 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $14 - "#TEXTTOKEN(#PC + $08, 1)"
 $C418 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C419 DEFB $13                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C41A DEFB $1F                             ; Volume (?)
 $C41B DEFB $05                             ; Mass (?)
 $C41C DEFB $00
 $C41D DEFB $00                             ; Strength (?)
 $C41E DEFB $00
 $C41F DEFB %10000010                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C420 DEFB $92,$37                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C422 DEFB $00,$00                         ;
 $C424 DEFB $00,$00                         ; }
 $C426 DEFW $0000                           ; Help Message (none).
 $C428 DEFB $20                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C429 DEFB $21,$9C,$92,$00,$F9,$AA
 $C42F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $42 - "#TEXTTOKEN(#PC + $08, 1)"
 $C430 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C431 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C432 DEFB $30                             ; Volume (?)
 $C433 DEFB $30                             ; Mass (?)
 $C434 DEFB $40
 $C435 DEFB $20                             ; Strength (?)
 $C436 DEFB $70
 $C437 DEFB %01100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C438 DEFB $DC,$00                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C43A DEFB $00,$00                         ;
 $C43C DEFB $00,$00                         ; }
 $C43E DEFW $0000                           ; Help Message (none).
 $C440 DEFB $20                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C441 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $43 - "#TEXTTOKEN(#PC + $08, 1)"
 $C442 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C443 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C444 DEFB $30                             ; Volume (?)
 $C445 DEFB $30                             ; Mass (?)
 $C446 DEFB $00
 $C447 DEFB $37                             ; Strength (?)
 $C448 DEFB $37
 $C449 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C44A DEFB $9A,$07                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C44C DEFB $41,$07                         ;
 $C44E DEFB $00,$00                         ; }
 $C450 DEFW $0000                           ; Help Message (none).
 $C452 DEFB $15                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C453 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $15 - "#TEXTTOKEN(#PC + $08, 1)"
 $C454 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C455 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C456 DEFB $1F                             ; Volume (?)
 $C457 DEFB $05                             ; Mass (?)
 $C458 DEFB $00
 $C459 DEFB $00                             ; Strength (?)
 $C45A DEFB $00
 $C45B DEFB %10000010                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C45C DEFB $5E,$37                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C45E DEFB $00,$00                         ;
 $C460 DEFB $00,$00                         ; }
 $C462 DEFW $0000                           ; Help Message (none).
 $C464 DEFB $00                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C465 DEFB $21,$9C,$92
 $C468 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $16 - "#TEXTTOKEN(#PC + $08, 1)"
 $C469 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C46A DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C46B DEFB $1F                             ; Volume (?)
 $C46C DEFB $05                             ; Mass (?)
 $C46D DEFB $00
 $C46E DEFB $00                             ; Strength (?)
 $C46F DEFB $00
 $C470 DEFB %10000010                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C471 DEFB $5E,$07                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C473 DEFB $A5,$00                         ;
 $C475 DEFB $00,$00                         ; }
 $C477 DEFW $0000                           ; Help Message (none).
 $C479 DEFB $00                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C47A DEFB $21,$28,$A3
 $C47D DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $17 - "#TEXTTOKEN(#PC + $08, 1)"
 $C47E DEFB $08                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C47F DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C480 DEFB $00                             ; Volume (?)
 $C481 DEFB $05                             ; Mass (?)
 $C482 DEFB $00
 $C483 DEFB $00                             ; Strength (?)
 $C484 DEFB $00
 $C485 DEFB %10000010                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C486 DEFB $5E,$07                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C488 DEFB $00,$00                         ;
 $C48A DEFB $00,$00                         ; }
 $C48C DEFW $0000                           ; Help Message (none).
 $C48E DEFB $08                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C48F DEFB $21                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C490 DEFB $22                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C491 DEFB $24                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C492 DEFB $31                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C493 DEFB $2D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C494 DEFB $11                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C495 DEFB $17                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C496 DEFB $21,$44,$A2
 $C499 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $18 - "#TEXTTOKEN(#PC + $08, 1)"
 $C49A DEFB $03                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C49B DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C49C DEFB $1F                             ; Volume (?)
 $C49D DEFB $05                             ; Mass (?)
 $C49E DEFB $00
 $C49F DEFB $00                             ; Strength (?)
 $C4A0 DEFB $00
 $C4A1 DEFB %10000010                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C4A2 DEFB $5E,$07                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C4A4 DEFB $A5,$00                         ;
 $C4A6 DEFB $00,$00                         ; }
 $C4A8 DEFW $0000                           ; Help Message (none).
 $C4AA DEFB $19                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4AB DEFB $42                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4AC DEFB $43                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4AD DEFB $21,$28,$A3
 $C4B0 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $44 - "#TEXTTOKEN(#PC + $08, 1)"
 $C4B1 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C4B2 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C4B3 DEFB $05                             ; Volume (?)
 $C4B4 DEFB $05                             ; Mass (?)
 $C4B5 DEFB $20
 $C4B6 DEFB $20                             ; Strength (?)
 $C4B7 DEFB $40
 $C4B8 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C4B9 DEFB $F9,$82                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C4BB DEFB $00,$00                         ;
 $C4BD DEFB $00,$00                         ; }
 $C4BF DEFW $0000                           ; Help Message (none).
 $C4C1 DEFB $11                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4C2 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $46 - "#TEXTTOKEN(#PC + $08, 1)"
 $C4C3 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C4C4 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C4C5 DEFB $30                             ; Volume (?)
 $C4C6 DEFB $10                             ; Mass (?)
 $C4C7 DEFB $10
 $C4C8 DEFB $60                             ; Strength (?)
 $C4C9 DEFB $60
 $C4CA DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C4CB DEFB $80,$80                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C4CD DEFB $00,$00                         ;
 $C4CF DEFB $00,$00                         ; }
 $C4D1 DEFW $0000                           ; Help Message (none).
 $C4D3 DEFB $23                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4D4 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $19 - "#TEXTTOKEN(#PC + $08, 1)"
 $C4D5 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C4D6 DEFB $46                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C4D7 DEFB $05                             ; Volume (?)
 $C4D8 DEFB $03                             ; Mass (?)
 $C4D9 DEFB $00
 $C4DA DEFB $10                             ; Strength (?)
 $C4DB DEFB $10
 $C4DC DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C4DD DEFB $C3,$10                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C4DF DEFB $00,$00                         ;
 $C4E1 DEFB $00,$00                         ; }
 $C4E3 DEFW $0000                           ; Help Message (none).
 $C4E5 DEFB $23                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4E6 DEFB $0B,$ED,$92
 $C4E9 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $1A - "#TEXTTOKEN(#PC + $08, 1)"
 $C4EA DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C4EB DEFB $46                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C4EC DEFB $02                             ; Volume (?)
 $C4ED DEFB $01                             ; Mass (?)
 $C4EE DEFB $00
 $C4EF DEFB $10                             ; Strength (?)
 $C4F0 DEFB $10
 $C4F1 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C4F2 DEFB $6B,$10                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C4F4 DEFB $64,$06                         ;
 $C4F6 DEFB $00,$00                         ; }
 $C4F8 DEFW $0000                           ; Help Message (none).
 $C4FA DEFB $23                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C4FB DEFB $0B,$ED,$92
 $C4FE DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $1B - "#TEXTTOKEN(#PC + $08, 1)"
 $C4FF DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C500 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C501 DEFB $60                             ; Volume (?)
 $C502 DEFB $FF                             ; Mass (?)
 $C503 DEFB $80
 $C504 DEFB $70                             ; Strength (?)
 $C505 DEFB $70
 $C506 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C507 DEFB $8C,$07                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C509 DEFB $00,$00                         ;
 $C50B DEFB $00,$00                         ; }
 $C50D DEFW $0000                           ; Help Message (none).
 $C50F DEFB $0D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C510 DEFB $12                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C511 DEFB $1E,$84,$A7,$0B,$84,$A7,$10,$61
 $C519 DEFB $A7,$0C,$61,$A7,$18,$84,$A7
 $C520 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $1C - "#TEXTTOKEN(#PC + $08, 1)"
 $C521 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C522 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C523 DEFB $05                             ; Volume (?)
 $C524 DEFB $05                             ; Mass (?)
 $C525 DEFB $00
 $C526 DEFB $80                             ; Strength (?)
 $C527 DEFB $80
 $C528 DEFB %10010100                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C529 DEFB $D7,$16                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C52B DEFB $00,$00                         ;
 $C52D DEFB $00,$00                         ; }
 $C52F DEFW $0000                           ; Help Message (none).
 $C531 DEFB $10                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C532 DEFB $1E                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C533 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $1D - "#TEXTTOKEN(#PC + $08, 1)"
 $C534 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C535 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C536 DEFB $65                             ; Volume (?)
 $C537 DEFB $65                             ; Mass (?)
 $C538 DEFB $00
 $C539 DEFB $00                             ; Strength (?)
 $C53A DEFB $00
 $C53B DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C53C DEFB $7C,$35                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C53E DEFB $00,$00                         ;
 $C540 DEFB $00,$00                         ; }
 $C542 DEFW $0000                           ; Help Message (none).
 $C544 DEFB $0D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C545 DEFB $39,$65,$90,$11,$4F,$92
 $C54B DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $1E - "#TEXTTOKEN(#PC + $08, 1)"
 $C54C DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C54D DEFB $1D                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C54E DEFB $FF                             ; Volume (?)
 $C54F DEFB $FF                             ; Mass (?)
 $C550 DEFB $03
 $C551 DEFB $80                             ; Strength (?)
 $C552 DEFB $80
 $C553 DEFB %10000001                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C554 DEFB $C0,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C556 DEFB $E0,$06                         ;
 $C558 DEFB $00,$00                         ; }
 $C55A DEFW $0000                           ; Help Message (none).
 $C55C DEFB $0D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C55D DEFB $0B,$ED,$92,$26,$58,$A3,$10,$0E
 $C565 DEFB $91
 $C566 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $1F - "#TEXTTOKEN(#PC + $08, 1)"
 $C567 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C568 DEFB $1E                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C569 DEFB $FF                             ; Volume (?)
 $C56A DEFB $FF                             ; Mass (?)
 $C56B DEFB $00
 $C56C DEFB $00                             ; Strength (?)
 $C56D DEFB $00
 $C56E DEFB %10100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C56F DEFB $E2,$00                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C571 DEFB $E8,$02                         ;
 $C573 DEFB $00,$00                         ; }
 $C575 DEFW $0000                           ; Help Message (none).
 $C577 DEFB $0D                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C578 DEFB $11,$4F,$92,$14,$E0,$8C
 $C57E DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $20 - "#TEXTTOKEN(#PC + $08, 1)"
 $C57F DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C580 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C581 DEFB $FF                             ; Volume (?)
 $C582 DEFB $FF                             ; Mass (?)
 $C583 DEFB $02
 $C584 DEFB $00                             ; Strength (?)
 $C585 DEFB $00
 $C586 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C587 DEFB $6A,$11                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C589 DEFB $27,$03                         ;
 $C58B DEFB $00,$00                         ; }
 $C58D DEFW $0000                           ; Help Message (none).
 $C58F DEFB $16                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C590 DEFB $10,$0E,$91,$0C,$38,$91
 $C596 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $21 - "#TEXTTOKEN(#PC + $08, 1)"
 $C597 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C598 DEFB $24                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C599 DEFB $FF                             ; Volume (?)
 $C59A DEFB $FF                             ; Mass (?)
 $C59B DEFB $00
 $C59C DEFB $00                             ; Strength (?)
 $C59D DEFB $00
 $C59E DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C59F DEFB $5B,$11                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C5A1 DEFB $BF,$03                         ;
 $C5A3 DEFB $00,$00                         ; }
 $C5A5 DEFW $0000                           ; Help Message (none).
 $C5A7 DEFB $16                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C5A8 DEFB $10,$0E,$91,$0C,$38,$91,$11,$4F
 $C5B0 DEFB $92,$14,$E0,$8C,$0B,$ED,$92
 $C5B7 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $22 - "#TEXTTOKEN(#PC + $08, 1)"
 $C5B8 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C5B9 DEFB $21                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C5BA DEFB $05                             ; Volume (?)
 $C5BB DEFB $05                             ; Mass (?)
 $C5BC DEFB $00
 $C5BD DEFB $01                             ; Strength (?)
 $C5BE DEFB $00
 $C5BF DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C5C0 DEFB $8B,$32                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C5C2 DEFB $00,$00                         ;
 $C5C4 DEFB $00,$00                         ; }
 $C5C6 DEFW $0000                           ; Help Message (none).
 $C5C8 DEFB $16                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C5C9 DEFB $1B,$B5,$92
 $C5CC DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $23 - "#TEXTTOKEN(#PC + $08, 1)"
 $C5CD DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C5CE DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C5CF DEFB $20                             ; Volume (?)
 $C5D0 DEFB $20                             ; Mass (?)
 $C5D1 DEFB $00
 $C5D2 DEFB $05                             ; Strength (?)
 $C5D3 DEFB $05
 $C5D4 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C5D5 DEFB $E4,$06                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C5D7 DEFB $35,$07                         ;
 $C5D9 DEFB $00,$00                         ; }
 $C5DB DEFW $0000                           ; Help Message (none).
 $C5DD DEFB $29                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C5DE DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $24 - "#TEXTTOKEN(#PC + $08, 1)"
 $C5DF DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C5E0 DEFB $20                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C5E1 DEFB $FF                             ; Volume (?)
 $C5E2 DEFB $FF                             ; Mass (?)
 $C5E3 DEFB $00
 $C5E4 DEFB $00                             ; Strength (?)
 $C5E5 DEFB $00
 $C5E6 DEFB %10100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C5E7 DEFB $5A,$17                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C5E9 DEFB $00,$00                         ;
 $C5EB DEFB $00,$00                         ; }
 $C5ED DEFW $0000                           ; Help Message (none).
 $C5EF DEFB $16                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C5F0 DEFB $11,$00,$00
 $C5F3 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $25 - "#TEXTTOKEN(#PC + $08, 1)"
 $C5F4 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C5F5 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C5F6 DEFB $40                             ; Volume (?)
 $C5F7 DEFB $FF                             ; Mass (?)
 $C5F8 DEFB $00
 $C5F9 DEFB $00                             ; Strength (?)
 $C5FA DEFB $00
 $C5FB DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C5FC DEFB $22,$01                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C5FE DEFB $A2,$07                         ;
 $C600 DEFB $00,$00                         ; }
 $C602 DEFW $0000                           ; Help Message (none).
 $C604 DEFB $01                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C605 DEFB $10,$0E,$91,$0C,$38,$91,$11,$4F
 $C60D DEFB $92,$0E,$4F,$92,$14,$E0,$8C,$0B
 $C615 DEFB $ED,$92,$36,$5F,$A5
 $C61A DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $29 - "#TEXTTOKEN(#PC + $08, 1)"
 $C61B DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C61C DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C61D DEFB $40                             ; Volume (?)
 $C61E DEFB $FF                             ; Mass (?)
 $C61F DEFB $00
 $C620 DEFB $00                             ; Strength (?)
 $C621 DEFB $00
 $C622 DEFB %10100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C623 DEFB $B8,$00                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C625 DEFB $A2,$07                         ;
 $C627 DEFB $00,$00                         ; }
 $C629 DEFW $0000                           ; Help Message (none).
 $C62B DEFB $43                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C62C DEFB $11,$4F,$92,$0E,$4F,$92,$14,$E0
 $C634 DEFB $8C,$0B,$ED,$92,$36,$5F,$A5,$00
 $C63C DEFB $9E,$A8
 $C63E DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $47 - "#TEXTTOKEN(#PC + $08, 1)"
 $C63F DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C640 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C641 DEFB $90                             ; Volume (?)
 $C642 DEFB $90                             ; Mass (?)
 $C643 DEFB $00
 $C644 DEFB $A0                             ; Strength (?)
 $C645 DEFB $A0
 $C646 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C647 DEFB $F8,$06                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C649 DEFB $37,$03                         ;
 $C64B DEFB $00,$00                         ; }
 $C64D DEFW $0000                           ; Help Message (none).
 $C64F DEFB $05                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C650 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $48 - "#TEXTTOKEN(#PC + $08, 1)"
 $C651 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C652 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C653 DEFB $90                             ; Volume (?)
 $C654 DEFB $90                             ; Mass (?)
 $C655 DEFB $00
 $C656 DEFB $A0                             ; Strength (?)
 $C657 DEFB $A0
 $C658 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C659 DEFB $F8,$06                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C65B DEFB $41,$07                         ;
 $C65D DEFB $00,$00                         ; }
 $C65F DEFW $0000                           ; Help Message (none).
 $C661 DEFB $05                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C662 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $26 - "#TEXTTOKEN(#PC + $08, 1)"
 $C663 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C664 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C665 DEFB $05                             ; Volume (?)
 $C666 DEFB $05                             ; Mass (?)
 $C667 DEFB $00
 $C668 DEFB $01                             ; Strength (?)
 $C669 DEFB $00
 $C66A DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C66B DEFB $1F,$34                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C66D DEFB $00,$00                         ;
 $C66F DEFB $00,$00                         ; }
 $C671 DEFW $0000                           ; Help Message (none).
 $C673 DEFB $00                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C674 DEFB $1B,$B5,$92
 $C677 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $27 - "#TEXTTOKEN(#PC + $08, 1)"
 $C678 DEFB $02                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C679 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C67A DEFB $90                             ; Volume (?)
 $C67B DEFB $FF                             ; Mass (?)
 $C67C DEFB $00
 $C67D DEFB $00                             ; Strength (?)
 $C67E DEFB $00
 $C67F DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C680 DEFB $F1,$04                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C682 DEFB $64,$06                         ;
 $C684 DEFB $00,$00                         ; }
 $C686 DEFW $0000                           ; Help Message (none).
 $C688 DEFB $21                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C689 DEFB $22                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C68A DEFB $1E,$3B,$8F
 $C68D DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $28 - "#TEXTTOKEN(#PC + $08, 1)"
 $C68E DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C68F DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C690 DEFB $FE                             ; Volume (?)
 $C691 DEFB $FE                             ; Mass (?)
 $C692 DEFB $00
 $C693 DEFB $FF                             ; Strength (?)
 $C694 DEFB $FF
 $C695 DEFB %10000000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C696 DEFB $41,$36                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C698 DEFB $00,$00                         ;
 $C69A DEFB $00,$00                         ; }
 $C69C DEFW $0000                           ; Help Message (none).
 $C69E DEFB $2F                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C69F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $3D - "#TEXTTOKEN(#PC + $08, 1)"
 $C6A0 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C6A1 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C6A2 DEFB $40                             ; Volume (?)
 $C6A3 DEFB $30                             ; Mass (?)
 $C6A4 DEFB $20
 $C6A5 DEFB $48                             ; Strength (?)
 $C6A6 DEFB $60
 $C6A7 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C6A8 DEFB $E2,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C6AA DEFB $6A,$04                         ;
 $C6AC DEFB $00,$00                         ; }
 $C6AE DEFW $0000                           ; Help Message (none).
 $C6B0 DEFB $0F                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C6B1 DEFB $0F,$71,$91,$00,$48,$A4
 $C6B7 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $45 - "#TEXTTOKEN(#PC + $08, 1)"
 $C6B8 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C6B9 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C6BA DEFB $40                             ; Volume (?)
 $C6BB DEFB $30                             ; Mass (?)
 $C6BC DEFB $20
 $C6BD DEFB $48                             ; Strength (?)
 $C6BE DEFB $60
 $C6BF DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C6C0 DEFB $E2,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C6C2 DEFB $37,$03                         ;
 $C6C4 DEFB $00,$00                         ; }
 $C6C6 DEFW $0000                           ; Help Message (none).
 $C6C8 DEFB $3A                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C6C9 DEFB $0F,$71,$91,$00,$48,$A4
 $C6CF DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $49 - "#TEXTTOKEN(#PC + $08, 1)"
 $C6D0 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C6D1 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C6D2 DEFB $40                             ; Volume (?)
 $C6D3 DEFB $30                             ; Mass (?)
 $C6D4 DEFB $20
 $C6D5 DEFB $48                             ; Strength (?)
 $C6D6 DEFB $60
 $C6D7 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C6D8 DEFB $E2,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C6DA DEFB $61,$03                         ;
 $C6DC DEFB $00,$00                         ; }
 $C6DE DEFW $0000                           ; Help Message (none).
 $C6E0 DEFB $12                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C6E1 DEFB $0F,$71,$91,$00,$48,$A4
 $C6E7 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $4A - "#TEXTTOKEN(#PC + $08, 1)"
 $C6E8 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C6E9 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C6EA DEFB $40                             ; Volume (?)
 $C6EB DEFB $30                             ; Mass (?)
 $C6EC DEFB $20
 $C6ED DEFB $48                             ; Strength (?)
 $C6EE DEFB $60
 $C6EF DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C6F0 DEFB $E2,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C6F2 DEFB $34,$04                         ;
 $C6F4 DEFB $00,$00                         ; }
 $C6F6 DEFW $0000                           ; Help Message (none).
 $C6F8 DEFB $38                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C6F9 DEFB $0F,$71,$91,$00,$48,$A4
 $C6FF DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $4B - "#TEXTTOKEN(#PC + $08, 1)"
 $C700 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C701 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C702 DEFB $40                             ; Volume (?)
 $C703 DEFB $30                             ; Mass (?)
 $C704 DEFB $20
 $C705 DEFB $48                             ; Strength (?)
 $C706 DEFB $60
 $C707 DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C708 DEFB $E2,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C70A DEFB $41,$07                         ;
 $C70C DEFB $00,$00                         ; }
 $C70E DEFW $0000                           ; Help Message (none).
 $C710 DEFB $40                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C711 DEFB $0F,$71,$91,$00,$48,$A4
 $C717 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Object $4C - "#TEXTTOKEN(#PC + $08, 1)"
 $C718 DEFB $01                             ; Appears in the game #PEEK(#PC)
                                            ; #IF(#PEEK(#PC)>1)(times,time).
 $C719 DEFB $FF                             ; Mother object
                                            ; (#OBJECT(#PEEK(#PC), 1, 1)($)).
 $C71A DEFB $40                             ; Volume (?)
 $C71B DEFB $30                             ; Mass (?)
 $C71C DEFB $20
 $C71D DEFB $48                             ; Strength (?)
 $C71E DEFB $60
 $C71F DEFB %11100000                       ; Attributes:
                                            ; #TABLE(default,centre,centre,centre,centre,centre,centre,centre,centre)
                                            ; { =h Visible | =h Animal | =h Open | =h Gives Light | =h Broken | =h Full | =h Fluid | =h Locked }
                                            ; { #IF(#PEEK(#PC) & 1 << 7)(yes,no) | #IF(#PEEK(#PC) & 1 << 6)(yes,no) | #IF(#PEEK(#PC) & 1 << 5)(yes,no) | #IF(#PEEK(#PC) & 1 << 4)(yes,no) | #IF(#PEEK(#PC) & 1 << 3)(yes,no) | #IF(#PEEK(#PC) & 1 << 2)(yes,no) | #IF(#PEEK(#PC) & 1 << 1)(yes,no) | #IF(#PEEK(#PC) & 1 << 0)(yes,no) }
                                            ; TABLE#
 $C720 DEFB $E2,$02                         ; {Object Name: "#TEXTTOKEN(#PC)".
 $C722 DEFB $B6,$01                         ;
 $C724 DEFB $00,$00                         ; }
 $C726 DEFW $0000                           ; Help Message (none).
 $C728 DEFB $10                             ; Location #LOCATION(#PEEK(#PC),
                                            ; 1)($) -
                                            ; "#LOCATIONNAME(#PEEK(#PC))".
 $C729 DEFB $0F,$71,$91,$00,$48,$A4
 $C72F DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Action Table
;
; .
;
; .
;
; Action: "#ACTION".
@label=ActionTable
b$C730 DEFB $01      ; Action ID.
 $C731 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C733 DEFB $02      ; Action ID.
 $C734 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C736 DEFB $03      ; Action ID.
 $C737 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C739 DEFB $04      ; Action ID.
 $C73A DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C73C DEFB $05      ; Action ID.
 $C73D DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C73F DEFB $06      ; Action ID.
 $C740 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C742 DEFB $07      ; Action ID.
 $C743 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C745 DEFB $08      ; Action ID.
 $C746 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C748 DEFB $09      ; Action ID.
 $C749 DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C74B DEFB $0A      ; Action ID.
 $C74C DEFW $8D9D    ; Action routine.
; Action: "#ACTION".
 $C74E DEFB $13      ; Action ID.
 $C74F DEFW $8D33    ; Action routine.
; Action: "#ACTION".
 $C751 DEFB $0D      ; Action ID.
 $C752 DEFW $8CA6    ; Action routine.
; Action: "#ACTION".
 $C754 DEFB $0F      ; Action ID.
 $C755 DEFW $9171    ; Action routine.
; Action: "#ACTION".
 $C757 DEFB $17      ; Action ID.
 $C758 DEFW $8C4B    ; Action routine.
; Action: "#ACTION".
 $C75A DEFB $1A      ; Action ID.
 $C75B DEFW $90EB    ; Action routine.
; Action: "#ACTION".
 $C75D DEFB $1C      ; Action ID.
 $C75E DEFW $93DA    ; Action routine.
; Action: "#ACTION".
 $C760 DEFB $1D      ; Action ID.
 $C761 DEFW $939E    ; Action routine.
; Action: "#ACTION".
 $C763 DEFB $1F      ; Action ID.
 $C764 DEFW $8FCD    ; Action routine.
; Action: "#ACTION".
 $C766 DEFB $20      ; Action ID.
 $C767 DEFW $8FCD    ; Action routine.
; Action: "#ACTION".
 $C769 DEFB $24      ; Action ID.
 $C76A DEFW $8FAD    ; Action routine.
; Action: "#ACTION".
 $C76C DEFB $27      ; Action ID.
 $C76D DEFW $8FD6    ; Action routine.
; Action: "#ACTION".
 $C76F DEFB $2A      ; Action ID.
 $C770 DEFW $8FF5    ; Action routine.
; Action: "#ACTION".
 $C772 DEFB $30      ; Action ID.
 $C773 DEFW $A3E6    ; Action routine.
; Action: "#ACTION".
 $C775 DEFB $00      ; Action ID.
 $C776 DEFW $9B02    ; Action routine.
; Action: "#ACTION".
 $C778 DEFB $33      ; Action ID.
 $C779 DEFW $A2B4    ; Action routine.
; Action: "#ACTION".
 $C77B DEFB $2E      ; Action ID.
 $C77C DEFW $A248    ; Action routine.
; Action: "#ACTION".
 $C77E DEFB $2D      ; Action ID.
 $C77F DEFW $A302    ; Action routine.
; Action: "#ACTION".
 $C781 DEFB $35      ; Action ID.
 $C782 DEFW $9034    ; Action routine.
; Action: "#ACTION".
 $C784 DEFB $3A      ; Action ID.
 $C785 DEFW $9076    ; Action routine.
; Action: "#ACTION".
 $C787 DEFB $3B      ; Action ID.
 $C788 DEFW $8D33    ; Action routine.
; Action: "#ACTION".
 $C78A DEFB $37      ; Action ID.
 $C78B DEFW $A541    ; Action routine.
; End of table.
 $C78D DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Event Jump Table
;
; .
;
; .
;
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
b$C78E DEFB $16      ; Location ID.
 $C78F DEFW $C7A4    ; Event address.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $C791 DEFB $1A      ; Location ID.
 $C792 DEFW $C7B2    ; Event address.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $C794 DEFB $1D      ; Location ID.
 $C795 DEFW $C7B9    ; Event address.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $C797 DEFB $21      ; Location ID.
 $C798 DEFW $C7EA    ; Event address.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $C79A DEFB $02      ; Location ID.
 $C79B DEFW $C7DD    ; Event address.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $C79D DEFB $03      ; Location ID.
 $C79E DEFW $C7DD    ; Event address.
; #LOCATION(#PEEK(#PC), 1)($) - "#LOCATIONNAME(#PEEK(#PC))".
 $C7A0 DEFB $20      ; Location ID.
 $C7A1 DEFW $C7C0    ; Event address.
; End of table.
 $C7A3 DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Event: #LOCATIONNAME($16)
;
; .
;
; .
;
; At the start of the game, the #TEXTTOKEN($C430 + $08, 1) is invisible (!) and only becomes visible after
;       entering #LOCATIONNAME($16).
@label=EventBeornsHouse
c$C7A4 LD HL,$C437   ; #REGhl=#R$C437(attributes) of object $42 -
                     ; "#TEXTTOKEN($C430 + $08, 1)".
 $C7A7 BIT 3,(HL)    ; {Return if the "#TEXTTOKEN($C430 + $08, 1)" is "broken"
 $C7A9 RET NZ        ; (bit 3 is set).}
 $C7AA LD A,$42      ; {Write $42 to #R$CAE7.
 $C7AC LD ($CAE7),A  ; }
 $C7AF SET 7,(HL)    ; Set "visible" bit for "#TEXTTOKEN($C430 + $08, 1)".
 $C7B1 RET           ; Return.

; Event: #LOCATIONNAME($1A)
@label=EventSpiderThreadsPlace
c$C7B2 LD A,($CA92)  ; {Copy #R$CA92 to #R$CA93.
 $C7B5 LD ($CA93),A  ; }
 $C7B8 RET           ; Return.

; Event: #LOCATIONNAME($1D)
@label=EventDeepBog
c$C7B9 LD A,($CAA0)  ; {Copy #R$CAA0 to #R$CAA1.
 $C7BC LD ($CAA1),A  ; }
 $C7BF RET           ; Return.

; Event: #LOCATIONNAME($20)
@label=EventElvenkingsCellar
c$C7C0 LD A,$03      ; {Write $03 to #R$CAC4.
 $C7C2 LD ($CAC4),A  ; }
 $C7C5 LD HL,$C13A   ; #REGhl=#R$C13A(attributes) of object $3C -
                     ; "#TEXTTOKEN($C133 + $08, 1)".
 $C7C8 BIT 3,(HL)    ; {Jump to #R$C7D1 if "#TEXTTOKEN($C133 + $08, 1)" is
 $C7CA JR NZ,$C7D1   ; "broken" (bit 3 is set).}
 $C7CC LD A,$3C      ; {Write $3C to #R$CB03.
 $C7CE LD ($CB03),A  ; }
@label=EventElvenkingsCellar_Skip
*$C7D1 LD HL,$C4CA   ; #REGhl=#R$C4CA(attributes) of object $46 -
                     ; "#TEXTTOKEN($C4C3 + $08, 1)".
 $C7D4 BIT 3,(HL)    ; {Return if the "#TEXTTOKEN($C4C3 + $08, 1)" is "broken"
 $C7D6 RET NZ        ; (bit 3 is set).}
 $C7D7 LD A,$46      ; {Write $46 to #R$CAFC.
 $C7D9 LD ($CAFC),A  ; }
 $C7DC RET           ; Return.

; Event: #LOCATIONNAME($03)
@label=EventForest
c$C7DD LD A,($8D9B)  ; {Copy #R$8D9B to #R$B6F3.
 $C7E0 LD ($B6F3),A  ; }
 $C7E3 LD A,($CABC)  ; {Copy #R$CABC to #R$CABD.
 $C7E6 LD ($CABD),A  ; }
 $C7E9 RET           ; Return.

; Event: #LOCATIONNAME($21)
;
; .
;
; .
;
; Is Player Protected in "#TEXTTOKEN($C3EE + $08, 1)"
@label=EventForestriver
c$C7EA LD A,($C11C)  ; {If #R$C11C(player mother object) is object $13 -
 $C7ED CP $13        ; "#TEXTTOKEN($C3EE + $08, 1)" then return.
 $C7EF RET Z         ; }
; Uh oh ... you dead.
 $C7F0 CALL $8E39    ; Call #R$8E39.
 $C7F3 LD HL,$B26D   ; #REGhl=#R$B26D("You are swept forcefully against the
                     ; portcullis")
 $C7F6 CALL $72DD    ; Call #R$72DD.
 $C7F9 JP $90D2      ; Jump to #R$90D2.

; Gollums Riddles
b$C7FC DEFB $74
 $C7FD DEFB $04
 $C7FE DEFW $B1EE
 $C800 DEFB $29
 $C801 DEFB $04
 $C802 DEFW $B2B7
 $C804 DEFB $74
 $C805 DEFB $04
 $C806 DEFW $B1EE
 $C808 DEFB $29
 $C809 DEFB $04
 $C80A DEFW $B2B7
 $C80C DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C80D DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Data block at C80E
;
; See #R$9C9F.
;
; .
;
; "#LOCATIONNAME(#PEEK(#PC))".
b$C80E DEFB $16         ; Location #LOCATION(#PEEK(#PC), 1, 1)($).
 $C80F DEFW $BD12       ; The direction for #R(#PEEK(#PC + 1) * $100 +
                        ; #PEEK(#PC))(#LOCATIONNAME(#PEEK(#PC - 1))).
 $C811 DEFB $01,$00,$31 ; #MOVEMENT(#PC)
; "#LOCATIONNAME(#PEEK(#PC))".
 $C814 DEFB $18         ; Location #LOCATION(#PEEK(#PC), 1, 1)($).
 $C815 DEFW $BD26       ; The direction for #R(#PEEK(#PC + 1) * $100 +
                        ; #PEEK(#PC))(#LOCATIONNAME(#PEEK(#PC - 1))).
 $C817 DEFB $03,$00,$19 ; #MOVEMENT(#PC)
; "#LOCATIONNAME(#PEEK(#PC))".
 $C81A DEFB $15         ; Location #LOCATION(#PEEK(#PC), 1, 1)($).
 $C81B DEFW $BCF8       ; The direction for #R(#PEEK(#PC + 1) * $100 +
                        ; #PEEK(#PC))(#LOCATIONNAME(#PEEK(#PC - 1))).
 $C81D DEFB $04,$00,$14 ; #MOVEMENT(#PC)
; "#LOCATIONNAME(#PEEK(#PC))".
 $C820 DEFB $22         ; Location #LOCATION(#PEEK(#PC), 1, 1)($).
 $C821 DEFW $BDE2       ; The direction for #R(#PEEK(#PC + 1) * $100 +
                        ; #PEEK(#PC))(#LOCATIONNAME(#PEEK(#PC - 1))).
 $C823 DEFB $03,$00,$23 ; #MOVEMENT(#PC)
; "#LOCATIONNAME(#PEEK(#PC))".
 $C826 DEFB $0A         ; Location #LOCATION(#PEEK(#PC), 1, 1)($).
 $C827 DEFW $BB0A       ; The direction for #R(#PEEK(#PC + 1) * $100 +
                        ; #PEEK(#PC))(#LOCATIONNAME(#PEEK(#PC - 1))).
 $C829 DEFB $03,$00,$0B ; #MOVEMENT(#PC)
 $C82C DEFB $FF         ; Termination character (#N(#PEEK(#PC), 2, 3, 1,
                        ; 1)($)).

; Data block at C82D
b$C82D DEFB $00
 $C82E DEFW $C842
 $C830 DEFB $0F
 $C831 DEFW $C89E
 $C833 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C834 DEFB $00
 $C835 DEFW $C871
 $C837 DEFB $0F
 $C838 DEFW $C89E
 $C83A DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C83B DEFB $00
 $C83C DEFW $C895
 $C83E DEFB $0F
 $C83F DEFW $C89E
 $C841 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C842 DEFB $02
 $C843 DEFB $10
 $C844 DEFB $06                             ; #OBJECT(#PEEK(#PC), 1, 1)($)
 $C845 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C846 DEFB $14
 $C847 DEFB $30
 $C848 DEFW $C84D
 $C84A DEFB $0E
 $C84B DEFW $C846
 $C84D DEFB $04
 $C84E DEFB $09
 $C84F DEFB $14
 $C850 DEFB $30
 $C851 DEFW $C856
 $C853 DEFB $0E
 $C854 DEFW $C84F
 $C856 DEFB $04
 $C857 DEFB $0A
 $C858 DEFB $14
 $C859 DEFB $30
 $C85A DEFW $C85F
 $C85C DEFB $0E
 $C85D DEFW $C858
 $C85F DEFB $02
 $C860 DEFB $0C
 $C861 DEFB $06                             ; #OBJECT(#PEEK(#PC), 1, 1)($)
 $C862 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C863 DEFB $04
 $C864 DEFB $02
 $C865 DEFB $14
 $C866 DEFB $30
 $C867 DEFW $C86C
 $C869 DEFB $0E
 $C86A DEFW $C865
 $C86C DEFB $04
 $C86D DEFB $01
 $C86E DEFB $0E
 $C86F DEFW $C842
 $C871 DEFB $04
 $C872 DEFB $06
 $C873 DEFB $14
 $C874 DEFB $30
 $C875 DEFW $C87A
 $C877 DEFB $0E
 $C878 DEFW $C873
 $C87A DEFB $04
 $C87B DEFB $01
 $C87C DEFB $14
 $C87D DEFB $30
 $C87E DEFW $C883
 $C880 DEFB $0E
 $C881 DEFW $C87C
 $C883 DEFB $04
 $C884 DEFB $08
 $C885 DEFB $14
 $C886 DEFB $30
 $C887 DEFW $C88C
 $C889 DEFB $0E
 $C88A DEFW $C885
 $C88C DEFB $04
 $C88D DEFB $09
 $C88E DEFB $14
 $C88F DEFB $30
 $C890 DEFW $C871
 $C892 DEFB $0E
 $C893 DEFW $C88E
 $C895 DEFB $04
 $C896 DEFB $24
 $C897 DEFB $04
 $C898 DEFB $0F
 $C899 DEFB $04
 $C89A DEFB $30
 $C89B DEFB $0E
 $C89C DEFW $C895
 $C89E DEFB $04,$30,$07
; Gandalf.
 $C8A1 DEFB $00
 $C8A2 DEFW $C8C2
 $C8A4 DEFB $00
 $C8A5 DEFW $C8D0
 $C8A7 DEFB $00
 $C8A8 DEFW $C8D4
 $C8AA DEFB $00
 $C8AB DEFW $C8DA
 $C8AD DEFB $00
 $C8AE DEFW $C8DE
 $C8B0 DEFB $1D
 $C8B1 DEFW $CA7F
 $C8B3 DEFB $30
 $C8B4 DEFW $CA73
 $C8B6 DEFB $0F
 $C8B7 DEFW $CA5E
 $C8B9 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
; Gandalfs initial actions.
 $C8BA DEFB $02
 $C8BB DEFB $1D                             ; #ACTION
 $C8BC DEFB $03                             ; #OBJECT(#PEEK(#PC), 1, 1)($)
 $C8BD DEFB $00                             ; #OBJECT(#PEEK(#PC), 1, 1)($)
 $C8BE DEFB $02
 $C8BF DEFB $10                             ; #ACTION
 $C8C0 DEFB $05                             ; #OBJECT(#PEEK(#PC), 1, 1)($)
 $C8C1 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $C8C2 DEFB $04,$24,$14,$13,$D0,$C8,$03,$F5
 $C8CA DEFB $A4,$00,$04,$0C,$04,$1D,$04,$24
 $C8D2 DEFB $04,$0D,$04,$24,$03,$FE,$A4,$00
 $C8DA DEFB $04,$24,$04,$1D,$04,$10,$0F,$04
 $C8E2 DEFB $00,$EC,$C8,$1D,$7F,$CA,$0F,$5E
 $C8EA DEFB $CA,$FF,$12,$27,$00,$FF,$F5,$C8
 $C8F2 DEFB $0E,$EC,$C8,$12,$13,$02,$FF,$FF
 $C8FA DEFB $C8,$23,$1C,$A5,$00,$13,$40,$A6
 $C902 DEFB $00,$0C,$C9,$04,$FF,$04,$24,$0E
 $C90A DEFB $EC,$C8,$03,$57,$A6,$00,$0E,$EC
 $C912 DEFB $C8,$00,$1D,$C9,$0F,$1D,$C9,$1D
 $C91A DEFB $7F,$CA,$FF,$04,$30,$04,$24,$0E
 $C922 DEFB $1D,$C9,$00,$28,$C9,$FF,$14,$0F
 $C92A DEFB $2F,$C9,$0E,$28,$C9,$14,$27,$3A
 $C932 DEFB $C9,$03,$D1,$A5,$00,$0E,$28,$C9
 $C93A DEFB $14,$24,$41,$C9,$0E,$28,$C9,$04
 $C942 DEFB $FF,$0E,$28,$C9,$00,$50,$C9,$0F
 $C94A DEFB $60,$C9,$1D,$7F,$CA,$FF,$02,$26
 $C952 DEFB $08,$0F,$02,$10,$08,$FF,$02,$0C
 $C95A DEFB $08,$FF,$02,$25,$08,$0F,$14,$30
 $C962 DEFB $67,$C9,$0E,$60,$C9,$02,$10,$13
 $C96A DEFB $FF,$02,$21,$14,$FF,$04,$30,$02
 $C972 DEFB $0C,$13,$FF,$02,$10,$0C,$FF,$04
 $C97A DEFB $30,$02,$13,$13,$FF,$02,$2C,$13
 $C982 DEFB $0C,$04,$30,$02,$0C,$0C,$FF,$14
 $C98A DEFB $30,$50,$C9,$0E,$50,$C9,$00,$A0
 $C992 DEFB $C9,$0F,$AA,$C9,$1D,$7F,$CA,$FF
 $C99A DEFB $13,$25,$A5,$00,$A4,$C9,$03,$E5
 $C9A2 DEFB $A9,$00,$04,$FF,$14,$FF,$9A,$C9
 $C9AA DEFB $14,$0F,$9A,$C9,$0E,$AA,$C9,$00
 $C9B2 DEFB $B8,$C9,$0F,$CD,$C9,$FF,$13,$DC
 $C9BA DEFB $A6,$00,$C1,$C9,$0E,$B8,$C9,$13
 $C9C2 DEFB $98,$A6,$00,$D2,$C9,$13,$C2,$A6
 $C9CA DEFB $00,$D2,$C9,$04,$2D,$0E,$B8,$C9
 $C9D2 DEFB $04,$24,$0E,$B8,$C9,$00,$DE,$C9
 $C9DA DEFB $0F,$E9,$C9,$FF,$43,$AB,$A8,$00
 $C9E2 DEFB $42,$13,$25,$FF,$0E,$DE,$C9,$54
 $C9EA DEFB $3A,$5E,$CA,$0E,$E9,$C9,$00,$F7
 $C9F2 DEFB $C9,$0F,$2B,$CA,$FF,$13,$D2,$A8
 $C9FA DEFB $00,$10,$CA,$43,$F6,$A8,$00,$02
 $CA02 DEFB $0D,$10,$FF,$14,$01,$21,$CA,$02
 $CA0A DEFB $13,$10,$FF,$0E,$F7,$C9,$14,$01
 $CA12 DEFB $26,$CA,$13,$26,$A9,$00,$F7,$C9
 $CA1A DEFB $02,$13,$10,$FF,$0E,$F7,$C9,$04
 $CA22 DEFB $08,$0E,$09,$CA,$04,$08,$0E,$14
 $CA2A DEFB $CA,$02,$28,$10,$FF,$04,$24,$0E
 $CA32 DEFB $F7,$C9,$00,$41,$CA,$0F,$5E,$CA
 $CA3A DEFB $FF,$13,$BD,$A9,$00,$3B,$CA,$03
 $CA42 DEFB $4E,$A9,$00,$04,$FF,$03,$4E,$A9
 $CA4A DEFB $00,$04,$FF,$03,$4E,$A9,$00,$04
 $CA52 DEFB $FF
 $CA53 DEFB $03,$4E,$A9,$00,$03,$71,$A9,$00
 $CA5B DEFB $0E,$41,$CA,$54,$0F,$6B,$CA,$54
 $CA63 DEFB $0F,$72,$CA,$44,$24,$0E,$5E,$CA
 $CA6B DEFB $54,$27,$72,$CA,$0E,$5E,$CA,$07
 $CA73 DEFB $14,$1E,$7A,$CA,$04,$24,$07,$04
 $CA7B DEFB $FF
 $CA7C DEFB $0E,$73,$CA,$03,$DF,$A4,$00,$07
; Barrel.
 $CA84 DEFB $02
 $CA85 DEFB $00
 $CA86 DEFW $A5FB
 $CA88 DEFB $00
 $CA89 DEFW $0000
; Spider Web.
 $CA8B DEFB $02
 $CA8C DEFB $00
 $CA8D DEFW $AA5C
 $CA8F DEFB $00
 $CA90 DEFW $0000
; Spider Web.
 $CA92 DEFB $05
 $CA93 DEFB $00
 $CA94 DEFW $AB10
 $CA96 DEFB $00
 $CA97 DEFW $0000
; Goblins Door.
 $CA99 DEFB $02
 $CA9A DEFB $00
 $CA9B DEFW $A4D9
 $CA9D DEFB $00
 $CA9E DEFW $0000
; Deep Bog.
 $CAA0 DEFB $02
 $CAA1 DEFB $00
 $CAA2 DEFW $A7AA
 $CAA4 DEFB $02
 $CAA5 DEFW $A7AA
; Magic Door.
 $CAA7 DEFB $04
 $CAA8 DEFB $00
 $CAA9 DEFW $AAD5
 $CAAB DEFB $01
 $CAAC DEFW $AAB3
; Ring.
 $CAAE DEFB $00
 $CAAF DEFB $00
 $CAB0 DEFW $AAE0
 $CAB2 DEFB $00
 $CAB3 DEFW $0000
; ???
 $CAB5 DEFB $05
 $CAB6 DEFB $00
 $CAB7 DEFW $AB0B
 $CAB9 DEFB $00
 $CABA DEFW $0000
; Forest.
 $CABC DEFB $04
 $CABD DEFB $00
 $CABE DEFW $AB3A
 $CAC0 DEFB $03
 $CAC1 DEFW $AB1F
; Hole.
 $CAC3 DEFB $05
 $CAC4 DEFB $00
 $CAC5 DEFW $AA74
 $CAC7 DEFB $01
 $CAC8 DEFW $AA91
 $CACA DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Data block at CACB
b$CACB DEFB $3E,$07,$BA,$C8,$A1,$C8,$05
 $CAD2 DEFB $3F,$02,$EC,$C8,$E2,$C8,$06
 $CAD9 DEFB $40,$02,$1D,$C9,$13,$C9,$01
 $CAE0 DEFB $43,$00,$28,$C9,$24,$C9,$00
 $CAE7 DEFB $00,$02,$50,$C9,$46,$C9,$01
 $CAEE DEFB $41,$02,$9A,$C9,$90,$C9,$05
 $CAF5 DEFB $44,$01,$F7,$C9,$F0,$C9,$03
 $CAFC DEFB $00,$01,$DE,$C9,$D7,$C9,$03
 $CB03 DEFB $00,$01,$B8,$C9,$B1,$C9,$00
 $CB0A DEFB $47,$01,$3B,$CA,$34,$CA,$01
 $CB11 DEFB $48,$01,$3B,$CA,$34,$CA,$01
 $CB18 DEFB $3D,$01,$42,$C8,$2D,$C8,$00
 $CB1F DEFB $45,$01,$42,$C8,$2D,$C8,$00
 $CB26 DEFB $4B,$01,$71,$C8,$34,$C8,$00
 $CB2D DEFB $49,$01,$95,$C8,$3B,$C8,$00
 $CB34 DEFB $4A,$01,$95,$C8,$3B,$C8,$00
 $CB3B DEFB $4C,$01,$95,$C8,$3B,$C8,$00
 $CB42 DEFB $FF                             ; Termination character
                                            ; (#N(#PEEK(#PC), 2, 3, 1, 1)($)).
 $CB43 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB4B DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB53 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB5B DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB63 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB6B DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB73 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB7B DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB83 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB8B DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB93 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CB9B DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBA3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBAB DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBB3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBBB DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBC3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBCB DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBD3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBDB DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBE3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBEB DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBF3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CBFB DEFB $00,$00,$00,$00,$00

; Location Graphics Table
@label=LocGFXTable
b$CC00 DEFB $01      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC01 DEFW $CC43    ; Location graphics data address.
 $CC03 DEFB $31      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC04 DEFW $CE77    ; Location graphics data address.
 $CC06 DEFB $06      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC07 DEFW $CFB2    ; Location graphics data address.
 $CC09 DEFB $0B      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC0A DEFW $D24E    ; Location graphics data address.
 $CC0C DEFB $25      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC0D DEFW $D367    ; Location graphics data address.
 $CC0F DEFB $2B      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC10 DEFW $D5B5    ; Location graphics data address.
 $CC12 DEFB $26      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC13 DEFW $D713    ; Location graphics data address.
 $CC15 DEFB $07      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC16 DEFW $D92A    ; Location graphics data address.
 $CC18 DEFB $18      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC19 DEFW $DBA8    ; Location graphics data address.
 $CC1B DEFB $23      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC1C DEFW $DD79    ; Location graphics data address.
 $CC1E DEFB $0D      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC1F DEFW $E02C    ; Location graphics data address.
 $CC21 DEFB $1F      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC22 DEFW $E049    ; Location graphics data address.
 $CC24 DEFB $05      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC25 DEFW $E142    ; Location graphics data address.
 $CC27 DEFB $1C      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC28 DEFW $E19F    ; Location graphics data address.
 $CC2A DEFB $04      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC2B DEFW $E3FE    ; Location graphics data address.
 $CC2D DEFB $20      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC2E DEFW $E47A    ; Location graphics data address.
 $CC30 DEFB $10      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC31 DEFW $E6E4    ; Location graphics data address.
 $CC33 DEFB $19      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC34 DEFW $E9EE    ; Location graphics data address.
 $CC36 DEFB $08      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC37 DEFW $EC3E    ; Location graphics data address.
 $CC39 DEFB $29      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC3A DEFW $EE43    ; Location graphics data address.
 $CC3C DEFB $1A      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC3D DEFW $F001    ; Location graphics data address.
 $CC3F DEFB $27      ; Location #LOCATION(#PEEK(#PC), 1, 1)($) -
                     ; "#LOCATIONNAME(#PEEK(#PC))".
 $CC40 DEFW $F1E6    ; Location graphics data address.
 $CC42 DEFB $FF      ; Termination character (#N(#PEEK(#PC), 2, 3, 1, 1)($)).

; Start of location graphics
;
; .
;
; .
;
; #LOCATION($01, 1, 1)($) - "#LOCATIONNAME$01".
@label=LocGFX
b$CC43 DEFB $07,$38,$08,$9E,$46,$89,$44,$81
 $CC4B DEFB $C4,$81,$44,$81,$04,$80,$44,$80
 $CC53 DEFB $C4,$88,$44,$08,$C6,$46,$89,$44
 $CC5B DEFB $85,$C4,$85,$44,$84,$04,$84,$44
 $CC63 DEFB $8C,$04,$08,$9F,$45,$83,$C4,$83
 $CC6B DEFB $44,$83,$04,$82,$44,$82,$82,$8A
 $CC73 DEFB $04,$08,$C5,$45,$87,$C4,$87,$44
 $CC7B DEFB $87,$04,$86,$44,$86,$C4,$08,$91
 $CC83 DEFB $4E,$D6,$27,$8C,$E7,$8C,$E7,$8C
 $CC8B DEFB $E7,$08,$91,$37,$D4,$27,$8E,$E7
 $CC93 DEFB $8E,$E7,$8E,$E7,$08,$91,$59,$DC
 $CC9B DEFB $AE,$8C,$27,$8C,$27,$8C,$27,$08
 $CCA3 DEFB $6A,$18,$9E,$CE,$85,$4D,$98,$8D
 $CCAB DEFB $98,$CE,$87,$4E,$08,$55,$26,$81
 $CCB3 DEFB $42,$81,$02,$80,$42,$80,$42,$80
 $CCBB DEFB $82,$82,$82,$82,$82,$82,$82,$82
 $CCC3 DEFB $42,$82,$42,$83,$42,$80,$42,$81
 $CCCB DEFB $04,$08,$6C,$18,$80,$09,$81,$8A
 $CCD3 DEFB $85,$02,$84,$42,$84,$42,$84,$82
 $CCDB DEFB $86,$82,$86,$82,$86,$82,$86,$82
 $CCE3 DEFB $86,$82,$08,$5C,$18,$A9,$55,$08
 $CCEB DEFB $63,$18,$A9,$D7,$08,$6B,$19,$A9
 $CCF3 DEFB $14,$08,$55,$25,$BA,$1C,$08,$6C
 $CCFB DEFB $2C,$80,$49,$08,$66,$2F,$80,$48
 $CD03 DEFB $08,$93,$2C,$B6,$99,$08,$55,$28
 $CD0B DEFB $8E,$19,$8E,$19,$8E,$19,$8E,$19
 $CD13 DEFB $08,$93,$37,$C1,$A2,$81,$45,$80
 $CD1B DEFB $05,$80,$45,$80,$85,$80,$C5,$88
 $CD23 DEFB $85,$08,$D0,$59,$85,$45,$85,$05
 $CD2B DEFB $84,$45,$84,$85,$84,$86,$08,$D0
 $CD33 DEFB $58,$C3,$A1,$86,$06,$D4,$AA,$85
 $CD3B DEFB $4C,$B9,$A5,$08,$98,$3A,$86,$45
 $CD43 DEFB $08,$9D,$31,$86,$4A,$08,$60,$36
 $CD4B DEFB $83,$02,$08,$63,$34,$E2,$30,$08
 $CD53 DEFB $94,$34,$85,$43,$08,$94,$35,$80
 $CD5B DEFB $46,$08,$94,$2D,$89,$C7,$08,$CD
 $CD63 DEFB $33,$C1,$60,$8D,$4D,$08,$9B,$2F
 $CD6B DEFB $90,$07,$08,$9D,$30,$81,$00,$08
 $CD73 DEFB $9C,$30,$81,$00,$08,$62,$34,$8E
 $CD7B DEFB $7E,$8E,$7E,$08,$93,$4E,$80,$C5
 $CD83 DEFB $08,$93,$59,$82,$C4,$08,$A7,$37
 $CD8B DEFB $C1,$E3,$08,$B0,$34,$D5,$28,$08
 $CD93 DEFB $BA,$35,$CD,$E7,$08,$C3,$3D,$AD
 $CD9B DEFB $D7,$08,$C2,$53,$86,$87,$08,$BA
 $CDA3 DEFB $4F,$82,$CC,$08,$C3,$3F,$84,$89
 $CDAB DEFB $08,$BA,$44,$80,$CC,$08,$A2,$49
 $CDB3 DEFB $83,$C3,$08,$A3,$46,$89,$03,$08
 $CDBB DEFB $A1,$47,$81,$81,$08,$CB,$2D,$92
 $CDC3 DEFB $89,$82,$6A,$08,$D7,$34,$82,$AA
 $CDCB DEFB $08,$DB,$37,$8A,$2A,$08,$D9,$37
 $CDD3 DEFB $86,$02,$08,$D7,$34,$8B,$C7,$08
 $CDDB DEFB $D8,$37,$96,$07,$08,$D6,$34,$96
 $CDE3 DEFB $09,$08,$CE,$33,$8F,$C6,$08,$CA
 $CDEB DEFB $30,$83,$03,$08,$62,$4D,$AB,$D7
 $CDF3 DEFB $08,$62,$4D,$89,$0C,$08,$D2,$4D
 $CDFB DEFB $88,$86,$88,$2C,$08,$D1,$59,$8A
 $CE03 DEFB $45,$08,$D7,$5A,$80,$A9,$08,$D8
 $CE0B DEFB $4E,$AB,$D7,$08,$D8,$4E,$8D,$0C
 $CE13 DEFB $08,$D6,$59,$85,$C6,$85,$46,$85
 $CE1B DEFB $06,$84,$46,$84,$86,$84,$C6,$8C
 $CE23 DEFB $46,$8C,$86,$8C,$C6,$8C,$C6,$8C
 $CE2B DEFB $C6,$84,$C2,$8C,$44,$08,$63,$59
 $CE33 DEFB $81,$86,$81,$46,$81,$06,$80,$46
 $CE3B DEFB $80,$86,$80,$C6,$80,$C7,$08,$CF
 $CE43 DEFB $37,$84,$02,$08,$D1,$4D,$84,$43
 $CE4B DEFB $08,$D0,$59,$86,$82,$08,$60,$34
 $CE53 DEFB $8F,$04,$40,$BF,$51,$40,$BF,$43
 $CE5B DEFB $40,$C4,$50,$40,$C4,$44,$40,$9C
 $CE63 DEFB $44,$24,$58,$F3,$08,$11,$12,$0F
 $CE6B DEFB $0C,$09,$0A,$07,$04,$01,$06,$FF
 $CE73 DEFB $43,$7F,$18,$00
; #LOCATION($31, 1, 1)($) - "#LOCATIONNAME$31".
 $CE77 DEFB $04,$20,$08,$A4,$00,$85,$86,$8D
 $CE7F DEFB $C6,$81,$89,$89,$04,$85,$47,$84
 $CE87 DEFB $8F,$94,$48,$8E,$3E,$96,$CB,$8C
 $CE8F DEFB $FE,$08,$00,$4F,$80,$CD,$90,$23
 $CE97 DEFB $92,$8F,$80,$89,$81,$C4,$84,$8B
 $CE9F DEFB $8C,$4B,$8C,$57,$80,$02,$88,$66
 $CEA7 DEFB $92,$E6,$8A,$66,$8A,$5F,$88,$97
 $CEAF DEFB $81,$C3,$8C,$69,$94,$E9,$81,$42
 $CEB7 DEFB $88,$2D,$08,$E9,$00,$84,$53,$85
 $CEBF DEFB $88,$BD,$5E,$84,$54,$9E,$14,$8E
 $CEC7 DEFB $29,$8E,$56,$8C,$D6,$8C,$0D,$8E
 $CECF DEFB $4D,$84,$8D,$81,$45,$88,$15,$88
 $CED7 DEFB $E6,$88,$26,$81,$46,$85,$86,$8C
 $CEDF DEFB $78,$80,$48,$88,$48,$8A,$88,$8A
 $CEE7 DEFB $A5,$8A,$25,$90,$25,$81,$8F,$8C
 $CEEF DEFB $51,$94,$A7,$84,$46,$89,$46,$08
 $CEF7 DEFB $DF,$5D,$80,$4D,$88,$12,$08,$8C
 $CEFF DEFB $4A,$88,$D2,$80,$51,$80,$D1,$08
 $CF07 DEFB $B1,$55,$83,$44,$82,$56,$8A,$96
 $CF0F DEFB $9A,$5E,$08,$54,$7F,$82,$A5,$08
 $CF17 DEFB $17,$2E,$8C,$50,$85,$86,$82,$D4
 $CF1F DEFB $87,$C4,$08,$0E,$36,$95,$8A,$08
 $CF27 DEFB $0F,$35,$95,$8A,$08,$13,$34,$95
 $CF2F DEFB $08,$08,$14,$33,$95,$09,$40,$14
 $CF37 DEFB $31,$25,$59,$40,$08,$01,$0A,$01
 $CF3F DEFB $08,$01,$0E,$FF,$08,$00,$48,$C2
 $CF47 DEFB $1F,$C7,$20,$C6,$21,$45,$48,$28
 $CF4F DEFB $08,$41,$71,$84,$D3,$94,$53,$86
 $CF57 DEFB $D3,$86,$93,$08,$E2,$1C,$91,$CB
 $CF5F DEFB $81,$44,$83,$48,$97,$8A,$08,$E9
 $CF67 DEFB $1A,$84,$87,$08,$EA,$24,$80,$CC
 $CF6F DEFB $85,$48,$86,$CD,$08,$E9,$1A,$80
 $CF77 DEFB $CD,$91,$49,$42,$EF,$28,$08,$F0
 $CF7F DEFB $30,$89,$0D,$08,$F3,$3E,$8B,$17
 $CF87 DEFB $42,$F2,$34,$42,$F2,$20,$08,$ED
 $CF8F DEFB $10,$8F,$C7,$08,$EE,$08,$82,$8A
 $CF97 DEFB $89,$C7,$08,$F9,$0D,$84,$8B,$80
 $CF9F DEFB $03,$82,$8A,$87,$44,$08,$FD,$11
 $CFA7 DEFB $82,$04,$08,$FA,$05,$80,$46,$42
 $CFAF DEFB $F6,$11,$00
; #LOCATION($06, 1, 1)($) - "#LOCATIONNAME$06".
 $CFB2 DEFB $00,$20,$08,$2F,$19,$81,$64,$88
 $CFBA DEFB $86,$83,$C6,$82,$D3,$83,$07,$81
 $CFC2 DEFB $C4,$85,$48,$08,$62,$38,$84,$08
 $CFCA DEFB $84,$88,$90,$CB,$85,$07,$86,$47
 $CFD2 DEFB $84,$C5,$81,$5E,$98,$54,$80,$91
 $CFDA DEFB $83,$46,$81,$CA,$80,$D6,$82,$06
 $CFE2 DEFB $8C,$45,$86,$4A,$87,$8A,$80,$49
 $CFEA DEFB $87,$4C,$80,$D4,$80,$82,$87,$86
 $CFF2 DEFB $82,$02,$81,$45,$93,$CA,$86,$4A
 $CFFA DEFB $8A,$8A,$93,$CA,$86,$8A,$83,$C4
 $D002 DEFB $88,$09,$9F,$70,$85,$4D,$87,$48
 $D00A DEFB $8F,$0B,$94,$A1,$81,$C6,$89,$45
 $D012 DEFB $81,$85,$86,$09,$9D,$0C,$87,$4C
 $D01A DEFB $8B,$08,$84,$D3,$85,$07,$86,$47
 $D022 DEFB $81,$47,$81,$07,$85,$84,$86,$CA
 $D02A DEFB $87,$4F,$94,$52,$81,$89,$08,$37
 $D032 DEFB $72,$84,$CB,$89,$05,$80,$CA,$8B
 $D03A DEFB $4A,$08,$3E,$72,$83,$4B,$89,$0D
 $D042 DEFB $83,$49,$87,$C5,$82,$82,$81,$50
 $D04A DEFB $85,$D0,$08,$3E,$73,$9D,$90,$08
 $D052 DEFB $46,$7F,$83,$47,$81,$88,$08,$B9
 $D05A DEFB $04,$81,$B7,$83,$4A,$8B,$45,$81
 $D062 DEFB $45,$81,$CF,$85,$C8,$8A,$08,$85
 $D06A DEFB $C4,$82,$C4,$83,$C8,$8B,$45,$81
 $D072 DEFB $46,$93,$49,$80,$4D,$8F,$0A,$8E
 $D07A DEFB $11,$86,$45,$87,$48,$82,$43,$88
 $D082 DEFB $0E,$87,$C6,$83,$89,$83,$C5,$81
 $D08A DEFB $4F,$83,$96,$08,$B2,$25,$A1,$1E
 $D092 DEFB $88,$4A,$08,$BD,$45,$87,$A1,$08
 $D09A DEFB $B9,$04,$90,$A1,$82,$A1,$08,$B2
 $D0A2 DEFB $61,$80,$49,$8B,$CD,$86,$89,$8D
 $D0AA DEFB $4B,$08,$82,$7B,$87,$C3,$80,$85
 $D0B2 DEFB $84,$45,$08,$78,$76,$85,$05,$84
 $D0BA DEFB $85,$8C,$45,$86,$05,$87,$05,$87
 $D0C2 DEFB $45,$88,$45,$88,$05,$88,$45,$88
 $D0CA DEFB $05,$80,$49,$08,$6B,$06,$85,$54
 $D0D2 DEFB $85,$89,$81,$89,$08,$65,$35,$80
 $D0DA DEFB $49,$80,$09,$81,$89,$8D,$09,$85
 $D0E2 DEFB $09,$8C,$09,$8C,$89,$8C,$89,$08
 $D0EA DEFB $4E,$67,$84,$C3,$08,$D1,$07,$84
 $D0F2 DEFB $D5,$08,$A9,$15,$84,$55,$85,$4E
 $D0FA DEFB $95,$09,$81,$C9,$81,$89,$95,$09
 $D102 DEFB $85,$C9,$84,$49,$84,$49,$8C,$C9
 $D10A DEFB $08,$51,$6C,$8C,$C7,$08,$44,$6D
 $D112 DEFB $84,$C3,$40,$00,$00,$40,$48,$7F
 $D11A DEFB $08,$7A,$65,$82,$41,$83,$41,$84
 $D122 DEFB $83,$08,$7F,$5B,$84,$83,$80,$43
 $D12A DEFB $83,$C3,$08,$86,$5E,$83,$C3,$81
 $D132 DEFB $83,$84,$C3,$08,$82,$55,$86,$03
 $D13A DEFB $88,$03,$81,$43,$08,$88,$4F,$81
 $D142 DEFB $43,$82,$03,$86,$83,$84,$43,$08
 $D14A DEFB $7D,$45,$81,$83,$83,$03,$8E,$05
 $D152 DEFB $08,$79,$3A,$8E,$03,$81,$43,$80
 $D15A DEFB $83,$87,$C4,$08,$6B,$2C,$81,$44
 $D162 DEFB $80,$42,$83,$42,$82,$C2,$87,$42
 $D16A DEFB $86,$42,$86,$82,$84,$43,$08,$75
 $D172 DEFB $1A,$85,$02,$85,$42,$85,$C2,$80
 $D17A DEFB $82,$82,$42,$81,$42,$83,$02,$87
 $D182 DEFB $42,$87,$82,$87,$42,$86,$C2,$08
 $D18A DEFB $89,$09,$86,$C2,$84,$42,$85,$42
 $D192 DEFB $81,$82,$81,$82,$80,$82,$83,$42
 $D19A DEFB $81,$42,$81,$42,$83,$42,$83,$82
 $D1A2 DEFB $83,$C2,$87,$42,$87,$02,$42,$85
 $D1AA DEFB $0D,$42,$75,$1F,$42,$70,$2E,$42
 $D1B2 DEFB $77,$3C,$42,$7E,$46,$42,$81,$52
 $D1BA DEFB $42,$8B,$51,$08,$87,$43,$87,$02
 $D1C2 DEFB $82,$42,$80,$42,$85,$02,$08,$7E
 $D1CA DEFB $31,$85,$82,$81,$42,$80,$82,$82
 $D1D2 DEFB $42,$83,$C2,$87,$02,$86,$82,$08
 $D1DA DEFB $84,$23,$86,$82,$85,$42,$85,$82
 $D1E2 DEFB $81,$42,$82,$42,$80,$02,$83,$C2
 $D1EA DEFB $83,$C2,$87,$82,$87,$82,$08,$93
 $D1F2 DEFB $15,$87,$82,$83,$02,$82,$C2,$81
 $D1FA DEFB $02,$81,$82,$85,$02,$84,$42,$86
 $D202 DEFB $82,$83,$42,$42,$97,$15,$42,$83
 $D20A DEFB $27,$42,$82,$34,$42,$87,$41,$08
 $D212 DEFB $75,$67,$80,$01,$08,$76,$67,$80
 $D21A DEFB $01,$08,$74,$67,$80,$01,$08,$6F
 $D222 DEFB $67,$80,$01,$08,$6E,$67,$80,$01
 $D22A DEFB $08,$70,$64,$81,$41,$08,$71,$64
 $D232 DEFB $81,$41,$08,$76,$62,$81,$41,$08
 $D23A DEFB $77,$62,$81,$41,$08,$78,$61,$81
 $D242 DEFB $41,$08,$6A,$67,$81,$41,$08,$66
 $D24A DEFB $67,$81,$41,$00
; #LOCATION($0B, 1, 1)($) - "#LOCATIONNAME$0B".
 $D24E DEFB $07,$38,$08,$A1,$00,$80,$0B,$81
 $D256 DEFB $4B,$81,$8B,$85,$50,$84,$D0,$8C
 $D25E DEFB $50,$84,$90,$8C,$50,$84,$50,$8D
 $D266 DEFB $0D,$95,$8D,$81,$46,$80,$85,$08
 $D26E DEFB $60,$6E,$87,$45,$8B,$D2,$83,$87
 $D276 DEFB $82,$4A,$8A,$4F,$82,$8F,$8A,$23
 $D27E DEFB $82,$63,$8A,$23,$8A,$23,$08,$61
 $D286 DEFB $6F,$81,$51,$08,$3E,$7F,$87,$87
 $D28E DEFB $8E,$04,$97,$BE,$97,$BE,$08,$38
 $D296 DEFB $76,$92,$29,$08,$38,$75,$92,$29
 $D29E DEFB $08,$56,$65,$8F,$BE,$8F,$97,$08
 $D2A6 DEFB $5A,$4B,$97,$BD,$08,$6A,$42,$A7
 $D2AE DEFB $39,$08,$89,$3B,$8F,$B4,$08,$9B
 $D2B6 DEFB $38,$87,$F3,$08,$AD,$34,$87,$72
 $D2BE DEFB $08,$B5,$1F,$87,$3E,$08,$44,$73
 $D2C6 DEFB $8F,$BE,$97,$17,$08,$57,$65,$8F
 $D2CE DEFB $BE,$8F,$97,$08,$33,$4E,$84,$8D
 $D2D6 DEFB $84,$0D,$85,$4D,$85,$12,$08,$1B
 $D2DE DEFB $75,$81,$02,$80,$42,$82,$82,$82
 $D2E6 DEFB $42,$83,$42,$86,$82,$86,$42,$87
 $D2EE DEFB $42,$87,$42,$83,$82,$83,$42,$83
 $D2F6 DEFB $02,$86,$C2,$84,$82,$84,$42,$85
 $D2FE DEFB $02,$85,$42,$85,$82,$81,$82,$81
 $D306 DEFB $42,$80,$02,$41,$18,$78,$20,$58
 $D30E DEFB $00,$16,$11,$00,$0F,$0C,$01,$0A
 $D316 DEFB $05,$FF,$08,$00,$47,$E2,$F3,$40
 $D31E DEFB $0B,$45,$08,$30,$48,$8D,$07,$40
 $D326 DEFB $32,$49,$08,$60,$58,$81,$78,$08
 $D32E DEFB $7F,$46,$81,$F8,$08,$A1,$3E,$89
 $D336 DEFB $38,$89,$38,$08,$CA,$2F,$81,$B8
 $D33E DEFB $81,$78,$08,$46,$76,$81,$CA,$08
 $D346 DEFB $53,$75,$89,$0A,$08,$31,$20,$82
 $D34E DEFB $46,$82,$D3,$08,$4C,$10,$82,$C8
 $D356 DEFB $82,$D0,$8A,$5B,$88,$8C,$82,$46
 $D35E DEFB $83,$47,$40,$33,$0D,$42,$B5,$00
 $D366 DEFB $00
; #LOCATION($25, 1, 1)($) - "#LOCATIONNAME$25".
 $D367 DEFB $07,$38,$08,$5B,$2B,$8D,$14,$85
 $D36F DEFB $8B,$A1,$51,$81,$06,$91,$07,$88
 $D377 DEFB $03,$97,$8B,$86,$05,$9B,$8E,$83
 $D37F DEFB $A1,$96,$49,$40,$5F,$2E,$08,$52
 $D387 DEFB $56,$84,$89,$85,$4C,$87,$43,$83
 $D38F DEFB $4F,$82,$CA,$40,$50,$52,$08,$60
 $D397 DEFB $39,$80,$09,$85,$86,$82,$82,$83
 $D39F DEFB $86,$87,$0C,$40,$61,$38,$08,$C3
 $D3A7 DEFB $4B,$91,$CB,$80,$46,$8D,$4E,$84
 $D3AF DEFB $46,$80,$01,$82,$47,$8B,$D2,$86
 $D3B7 DEFB $47,$97,$8A,$84,$02,$08,$C2,$55
 $D3BF DEFB $84,$4E,$08,$B3,$5D,$82,$91,$08
 $D3C7 DEFB $BC,$57,$86,$C9,$08,$BC,$56,$86
 $D3CF DEFB $C9,$08,$C9,$62,$84,$49,$08,$C9
 $D3D7 DEFB $61,$84,$49,$40,$C9,$57,$40,$C1
 $D3DF DEFB $57,$40,$B7,$5B,$08,$B5,$5C,$84
 $D3E7 DEFB $00,$08,$CD,$65,$80,$05,$08,$C9
 $D3EF DEFB $6C,$81,$43,$08,$BD,$5A,$81,$C4
 $D3F7 DEFB $85,$46,$08,$7E,$30,$8C,$0A,$81
 $D3FF DEFB $02,$82,$89,$87,$42,$40,$77,$33
 $D407 DEFB $08,$76,$1A,$8C,$C6,$84,$44,$84
 $D40F DEFB $02,$83,$86,$82,$C6,$8A,$86,$82
 $D417 DEFB $02,$80,$84,$82,$47,$81,$03,$85
 $D41F DEFB $04,$85,$C3,$84,$03,$8C,$03,$87
 $D427 DEFB $03,$87,$03,$08,$7E,$22,$85,$C3
 $D42F DEFB $85,$83,$85,$03,$82,$82,$82,$43
 $D437 DEFB $83,$43,$8F,$03,$83,$82,$08,$74
 $D43F DEFB $16,$87,$82,$83,$03,$82,$C3,$8A
 $D447 DEFB $03,$80,$C3,$80,$C3,$80,$82,$84
 $D44F DEFB $41,$40,$80,$11,$08,$73,$12,$94
 $D457 DEFB $4C,$08,$73,$13,$94,$4C,$08,$82
 $D45F DEFB $1C,$84,$83,$08,$81,$1B,$84,$43
 $D467 DEFB $08,$81,$1A,$84,$43,$08,$7B,$16
 $D46F DEFB $84,$42,$08,$7C,$17,$84,$42,$08
 $D477 DEFB $7A,$17,$84,$00,$08,$76,$1A,$87
 $D47F DEFB $C3,$08,$00,$6C,$8A,$8B,$82,$4B
 $D487 DEFB $8A,$5B,$9A,$1B,$82,$5B,$82,$4B
 $D48F DEFB $08,$6C,$51,$88,$17,$81,$88,$88
 $D497 DEFB $17,$80,$4C,$88,$4C,$8A,$33,$82
 $D49F DEFB $B3,$08,$00,$43,$A2,$B3,$90,$73
 $D4A7 DEFB $98,$33,$A8,$73,$92,$73,$08,$82
 $D4AF DEFB $00,$88,$EF,$C8,$64,$80,$D3,$90
 $D4B7 DEFB $95,$08,$41,$00,$88,$BE,$88,$7E
 $D4BF DEFB $90,$7E,$90,$7E,$08,$68,$00,$88
 $D4C7 DEFB $FE,$90,$3E,$90,$3E,$40,$DB,$09
 $D4CF DEFB $08,$EE,$0F,$85,$87,$84,$49,$81
 $D4D7 DEFB $45,$84,$9D,$8C,$5D,$80,$83,$92
 $D4DF DEFB $18,$82,$E6,$87,$87,$82,$4D,$83
 $D4E7 DEFB $87,$08,$AA,$31,$8C,$56,$92,$18
 $D4EF DEFB $08,$BB,$0A,$85,$88,$84,$D8,$8D
 $D4F7 DEFB $08,$80,$8D,$91,$09,$93,$49,$86
 $D4FF DEFB $4B,$83,$84,$8A,$24,$83,$C9,$08
 $D507 DEFB $AA,$25,$83,$00,$08,$A2,$23,$84
 $D50F DEFB $4A,$08,$9B,$08,$85,$84,$08,$7D
 $D517 DEFB $02,$85,$85,$08,$9A,$0C,$84,$49
 $D51F DEFB $8D,$09,$85,$89,$84,$89,$08,$8B
 $D527 DEFB $25,$8D,$C9,$08,$91,$18,$81,$09
 $D52F DEFB $08,$7D,$08,$80,$49,$80,$09,$08
 $D537 DEFB $7F,$09,$89,$89,$08,$69,$06,$84
 $D53F DEFB $49,$85,$09,$8D,$89,$84,$C9,$08
 $D547 DEFB $54,$16,$94,$89,$08,$5F,$16,$81
 $D54F DEFB $89,$80,$89,$81,$89,$80,$C9,$08
 $D557 DEFB $6D,$24,$8A,$09,$08,$5C,$0C,$86
 $D55F DEFB $49,$85,$09,$8C,$09,$08,$71,$71
 $D567 DEFB $89,$04,$81,$42,$80,$02,$80,$42
 $D56F DEFB $80,$42,$08,$72,$70,$83,$82,$83
 $D577 DEFB $42,$82,$42,$82,$82,$82,$82,$08
 $D57F DEFB $7C,$7E,$82,$82,$08,$88,$72,$85
 $D587 DEFB $C3,$85,$82,$85,$02,$84,$42,$84
 $D58F DEFB $42,$08,$88,$71,$87,$42,$87,$42
 $D597 DEFB $86,$42,$86,$82,$86,$83,$46,$7B
 $D59F DEFB $6E,$42,$D9,$29,$42,$F2,$12,$40
 $D5A7 DEFB $A8,$24,$08,$A8,$24,$86,$42,$40
 $D5AF DEFB $A8,$19,$40,$C0,$0D,$00
; #LOCATION($2B, 1, 1)($) - "#LOCATIONNAME$2B".
 $D5B5 DEFB $01,$20,$08,$70,$37,$81,$82,$81
 $D5BD DEFB $42,$81,$02,$80,$42,$80,$82,$80
 $D5C5 DEFB $C2,$08,$8B,$37,$85,$82,$85,$42
 $D5CD DEFB $85,$02,$84,$42,$84,$82,$84,$C2
 $D5D5 DEFB $08,$70,$36,$83,$82,$83,$42,$83
 $D5DD DEFB $02,$82,$42,$82,$82,$82,$C2,$08
 $D5E5 DEFB $8B,$36,$87,$82,$87,$42,$87,$02
 $D5ED DEFB $86,$42,$86,$82,$86,$C2,$08,$65
 $D5F5 DEFB $41,$89,$C7,$81,$87,$81,$04,$80
 $D5FD DEFB $44,$80,$84,$80,$84,$80,$C4,$88
 $D605 DEFB $04,$08,$A0,$41,$8D,$C7,$85,$87
 $D60D DEFB $85,$04,$84,$44,$84,$84,$84,$84
 $D615 DEFB $84,$84,$08,$65,$40,$93,$08,$83
 $D61D DEFB $88,$82,$05,$82,$43,$08,$A0,$40
 $D625 DEFB $97,$49,$87,$88,$87,$05,$86,$46
 $D62D DEFB $8E,$4A,$08,$42,$40,$91,$CB,$81
 $D635 DEFB $C9,$81,$49,$80,$09,$80,$49,$80
 $D63D DEFB $89,$80,$C9,$88,$09,$90,$89,$08
 $D645 DEFB $C3,$3F,$9D,$0C,$85,$CB,$85,$49
 $D64D DEFB $85,$08,$84,$48,$84,$88,$84,$C8
 $D655 DEFB $8C,$08,$8C,$08,$08,$42,$3F,$93
 $D65D DEFB $08,$83,$C8,$83,$48,$83,$08,$82
 $D665 DEFB $43,$08,$C3,$3E,$97,$08,$87,$88
 $D66D DEFB $87,$48,$87,$08,$86,$48,$86,$88
 $D675 DEFB $86,$C5,$08,$13,$41,$95,$48,$81
 $D67D DEFB $C8,$81,$48,$81,$48,$81,$08,$80
 $D685 DEFB $48,$80,$48,$80,$88,$80,$C8,$80
 $D68D DEFB $C8,$88,$08,$88,$08,$08,$F0,$41
 $D695 DEFB $95,$48,$85,$C8,$85,$48,$85,$48
 $D69D DEFB $85,$08,$84,$48,$84,$48,$84,$88
 $D6A5 DEFB $84,$C8,$8C,$08,$8C,$48,$8C,$48
 $D6AD DEFB $8C,$48,$08,$13,$40,$8B,$C8,$8B
 $D6B5 DEFB $08,$83,$88,$83,$48,$83,$10,$08
 $D6BD DEFB $F0,$40,$8F,$48,$8F,$08,$87,$88
 $D6C5 DEFB $87,$48,$87,$08,$86,$48,$86,$48
 $D6CD DEFB $86,$88,$86,$88,$8E,$04,$08,$71
 $D6D5 DEFB $37,$81,$02,$80,$42,$80,$82,$82
 $D6DD DEFB $42,$82,$02,$83,$42,$83,$82,$87
 $D6E5 DEFB $42,$87,$02,$08,$07,$00,$80,$BE
 $D6ED DEFB $80,$90,$80,$5B,$81,$03,$08,$C1
 $D6F5 DEFB $00,$84,$64,$84,$4D,$84,$09,$85
 $D6FD DEFB $07,$08,$72,$31,$81,$43,$80,$41
 $D705 DEFB $82,$41,$83,$01,$87,$81,$83,$81
 $D70D DEFB $87,$02,$40,$74,$33,$00
; #LOCATION($26, 1, 1)($) - "#LOCATIONNAME$26".
 $D713 DEFB $05,$28,$08,$FF,$0E,$84,$D2,$8C
 $D71B DEFB $0E,$8C,$0E,$8C,$4E,$8C,$4C,$8D
 $D723 DEFB $60,$8C,$46,$87,$C7,$85,$02,$8E
 $D72B DEFB $09,$86,$88,$8F,$90,$84,$CA,$95
 $D733 DEFB $5D,$86,$83,$87,$D2,$94,$98,$87
 $D73B DEFB $C3,$84,$8A,$91,$89,$8C,$85,$9B
 $D743 DEFB $0C,$8B,$C7,$08,$4C,$26,$BC,$9E
 $D74B DEFB $9D,$19,$84,$83,$A1,$92,$08,$27
 $D753 DEFB $55,$86,$45,$97,$5A,$8E,$1A,$87
 $D75B DEFB $5A,$08,$00,$13,$88,$1A,$88,$4C
 $D763 DEFB $86,$4C,$86,$8C,$86,$8C,$08,$01
 $D76B DEFB $0B,$80,$8C,$83,$C3,$80,$EF,$82
 $D773 DEFB $89,$90,$15,$88,$C7,$81,$87,$8B
 $D77B DEFB $93,$8B,$93,$08,$71,$09,$8A,$13
 $D783 DEFB $92,$53,$98,$13,$88,$13,$82,$93
 $D78B DEFB $92,$53,$92,$53,$08,$72,$09,$80
 $D793 DEFB $D3,$80,$D3,$88,$53,$A2,$53,$8A
 $D79B DEFB $93,$8A,$13,$8A,$13,$8A,$13,$40
 $D7A3 DEFB $A0,$21,$21,$59,$D7,$02,$23,$00
 $D7AB DEFB $41,$02,$1B,$04,$1B,$2D,$FF,$08
 $D7B3 DEFB $67,$15,$8F,$CE,$8A,$4E,$08,$5A
 $D7BB DEFB $14,$86,$56,$95,$8D,$9F,$4D,$08
 $D7C3 DEFB $41,$11,$8E,$0D,$86,$CD,$86,$8D
 $D7CB DEFB $86,$8D,$86,$8D,$08,$29,$04,$86
 $D7D3 DEFB $8D,$08,$3A,$00,$84,$D1,$40,$3C
 $D7DB DEFB $04,$21,$59,$A0,$31,$00,$27,$06
 $D7E3 DEFB $0F,$35,$02,$37,$FF,$08,$DF,$5D
 $D7EB DEFB $84,$03,$86,$44,$88,$05,$08,$DB
 $D7F3 DEFB $60,$82,$03,$80,$45,$83,$03,$08
 $D7FB DEFB $E8,$5B,$84,$03,$08,$C1,$66,$84
 $D803 DEFB $03,$80,$83,$80,$C3,$08,$C4,$6B
 $D80B DEFB $82,$47,$83,$05,$83,$85,$8B,$85
 $D813 DEFB $87,$C5,$87,$05,$86,$45,$86,$85
 $D81B DEFB $08,$C1,$45,$81,$05,$81,$45,$89
 $D823 DEFB $45,$08,$CA,$57,$85,$85,$85,$45
 $D82B DEFB $85,$03,$46,$C5,$67,$08,$C0,$1B
 $D833 DEFB $85,$0F,$08,$C1,$1B,$85,$10,$08
 $D83B DEFB $C3,$1A,$85,$13,$08,$94,$37,$AD
 $D843 DEFB $13,$08,$8B,$23,$84,$09,$08,$8B
 $D84B DEFB $24,$84,$09,$08,$8F,$0E,$90,$BE
 $D853 DEFB $08,$46,$26,$B5,$18,$84,$83,$8F
 $D85B DEFB $D1,$85,$4C,$08,$39,$3A,$86,$02
 $D863 DEFB $83,$90,$40,$3F,$2A,$08,$2D,$31
 $D86B DEFB $9A,$DF,$08,$31,$27,$89,$C7,$08
 $D873 DEFB $31,$2F,$80,$C3,$08,$35,$2F,$83
 $D87B DEFB $C8,$40,$33,$2C,$08,$34,$2F,$A1
 $D883 DEFB $55,$82,$55,$08,$35,$44,$82,$55
 $D88B DEFB $08,$35,$44,$AB,$15,$08,$53,$3A
 $D893 DEFB $83,$0A,$08,$53,$3B,$83,$0A,$08
 $D89B DEFB $53,$3B,$80,$13,$08,$54,$3B,$80
 $D8A3 DEFB $13,$08,$67,$4E,$82,$55,$08,$67
 $D8AB DEFB $4D,$82,$55,$08,$67,$4D,$8B,$95
 $D8B3 DEFB $08,$68,$42,$82,$50,$08,$68,$41
 $D8BB DEFB $82,$50,$08,$6A,$39,$82,$4D,$08
 $D8C3 DEFB $6A,$38,$82,$4D,$08,$69,$39,$86
 $D8CB DEFB $4D,$08,$69,$38,$86,$4D,$08,$68
 $D8D3 DEFB $41,$86,$52,$08,$68,$40,$86,$52
 $D8DB DEFB $08,$57,$3A,$8F,$CB,$08,$58,$3A
 $D8E3 DEFB $8F,$CB,$08,$52,$3A,$8F,$CB,$08
 $D8EB DEFB $1F,$4F,$81,$59,$08,$1E,$4F,$81
 $D8F3 DEFB $59,$08,$1E,$4F,$81,$59,$83,$57
 $D8FB DEFB $84,$C8,$8E,$08,$08,$2D,$53,$8D
 $D903 DEFB $D3,$08,$2C,$53,$8D,$D3,$08,$2F
 $D90B DEFB $26,$99,$2C,$08,$30,$26,$99,$2C
 $D913 DEFB $08,$27,$45,$81,$4E,$08,$28,$45
 $D91B DEFB $81,$4E,$08,$D4,$15,$80,$4E,$80
 $D923 DEFB $0E,$82,$4E,$40,$FF,$1D,$00
; #LOCATION($07, 1, 1)($) - "#LOCATIONNAME$07".
 $D92A DEFB $07,$38,$08,$34,$00,$8D,$7E,$B0
 $D932 DEFB $DB,$8C,$9D,$85,$D5,$08,$22,$5A
 $D93A DEFB $AB,$D6,$8C,$0E,$8C,$C6,$8E,$46
 $D942 DEFB $8B,$06,$83,$46,$83,$06,$80,$46
 $D94A DEFB $80,$46,$89,$04,$80,$C5,$8B,$7E
 $D952 DEFB $08,$0C,$45,$83,$48,$82,$45,$82
 $D95A DEFB $05,$08,$18,$34,$8C,$0D,$42,$0C
 $D962 DEFB $3A,$08,$27,$33,$88,$04,$40,$2A
 $D96A DEFB $2E,$08,$D1,$07,$8C,$9F,$87,$83
 $D972 DEFB $84,$03,$81,$02,$85,$02,$80,$42
 $D97A DEFB $82,$44,$8A,$57,$83,$02,$80,$42
 $D982 DEFB $81,$42,$80,$42,$80,$C2,$83,$42
 $D98A DEFB $83,$82,$87,$42,$86,$42,$86,$82
 $D992 DEFB $85,$03,$08,$CA,$0D,$84,$47,$8C
 $D99A DEFB $45,$85,$86,$82,$83,$08,$BD,$19
 $D9A2 DEFB $81,$45,$80,$45,$82,$C5,$82,$03
 $D9AA DEFB $87,$43,$83,$83,$83,$03,$83,$83
 $D9B2 DEFB $08,$CD,$18,$84,$02,$08,$CA,$1A
 $D9BA DEFB $87,$82,$08,$CA,$17,$82,$82,$40
 $D9C2 DEFB $CB,$18,$08,$C3,$15,$83,$82,$80
 $D9CA DEFB $42,$85,$42,$86,$82,$40,$C5,$14
 $D9D2 DEFB $08,$BB,$14,$84,$92,$86,$82,$85
 $D9DA DEFB $42,$85,$C2,$81,$02,$85,$42,$80
 $D9E2 DEFB $82,$82,$02,$83,$82,$83,$C2,$82
 $D9EA DEFB $8C,$08,$FF,$2C,$8C,$0A,$84,$0A
 $D9F2 DEFB $8C,$8A,$94,$0A,$96,$8A,$84,$4A
 $D9FA DEFB $85,$8A,$8C,$4A,$84,$8D,$84,$CA
 $DA02 DEFB $94,$0A,$96,$8A,$84,$CA,$96,$8A
 $DA0A DEFB $84,$47,$8C,$CA,$87,$04,$8E,$4A
 $DA12 DEFB $8E,$CA,$8E,$CA,$8C,$8B,$08,$21
 $DA1A DEFB $52,$8C,$0F,$86,$52,$08,$5D,$21
 $DA22 DEFB $84,$44,$84,$04,$85,$44,$8D,$44
 $DA2A DEFB $81,$44,$81,$04,$82,$44,$82,$84
 $DA32 DEFB $8A,$04,$88,$04,$08,$67,$38,$80
 $DA3A DEFB $C4,$80,$C4,$80,$C4,$80,$44,$82
 $DA42 DEFB $44,$83,$44,$8F,$04,$87,$C4,$87
 $DA4A DEFB $84,$87,$04,$86,$84,$8E,$04,$8E
 $DA52 DEFB $04,$8E,$44,$8C,$04,$84,$C4,$08
 $DA5A DEFB $59,$3D,$80,$44,$88,$04,$88,$04
 $DA62 DEFB $88,$44,$82,$C4,$82,$C4,$82,$84
 $DA6A DEFB $08,$53,$28,$84,$84,$84,$44,$87
 $DA72 DEFB $03,$8A,$50,$86,$4A,$8B,$04,$80
 $DA7A DEFB $42,$85,$82,$84,$C2,$08,$4F,$1D
 $DA82 DEFB $80,$4A,$08,$5C,$20,$8F,$8A,$82
 $DA8A DEFB $03,$80,$02,$85,$02,$86,$43,$08
 $DA92 DEFB $62,$15,$89,$49,$08,$6A,$1F,$83
 $DA9A DEFB $49,$82,$83,$81,$83,$84,$83,$87
 $DAA2 DEFB $83,$08,$74,$18,$85,$48,$08,$7B
 $DAAA DEFB $22,$82,$88,$82,$88,$87,$83,$8E
 $DAB2 DEFB $03,$85,$C3,$80,$83,$08,$88,$18
 $DABA DEFB $84,$51,$08,$7E,$25,$80,$8E,$8C
 $DAC2 DEFB $06,$86,$C6,$08,$5B,$3A,$83,$44
 $DACA DEFB $80,$04,$08,$6E,$38,$82,$C4,$80
 $DAD2 DEFB $04,$42,$6B,$3D,$42,$5E,$38,$42
 $DADA DEFB $73,$39,$08,$73,$53,$85,$90,$85
 $DAE2 DEFB $D0,$85,$D0,$08,$32,$50,$81,$DA
 $DAEA DEFB $81,$5A,$08,$10,$56,$89,$DA,$8D
 $DAF2 DEFB $9A,$08,$9B,$51,$95,$5A,$81,$D9
 $DAFA DEFB $08,$57,$58,$81,$D3,$83,$96,$40
 $DB02 DEFB $5F,$5B,$08,$BA,$4B,$89,$E0,$89
 $DB0A DEFB $2B,$08,$E9,$3A,$91,$7E,$91,$7E
 $DB12 DEFB $08,$A5,$1F,$88,$48,$21,$58,$00
 $DB1A DEFB $F9,$F9,$89,$FF,$21,$58,$A5,$09
 $DB22 DEFB $FF,$21,$58,$B2,$31,$02,$1B,$02
 $DB2A DEFB $19,$02,$0B,$FF,$08,$00,$4F,$8A
 $DB32 DEFB $C6,$41,$00,$4E,$08,$08,$51,$89
 $DB3A DEFB $86,$08,$09,$57,$B2,$58,$41,$0B
 $DB42 DEFB $55,$41,$1A,$55,$08,$25,$57,$82
 $DB4A DEFB $82,$08,$27,$57,$8B,$C7,$41,$25
 $DB52 DEFB $54,$08,$40,$51,$89,$C6,$08,$40
 $DB5A DEFB $57,$AA,$D7,$41,$45,$55,$08,$64
 $DB62 DEFB $57,$D2,$EB,$08,$8F,$57,$8B,$C7
 $DB6A DEFB $41,$86,$54,$41,$6C,$54,$08,$A4
 $DB72 DEFB $4F,$B2,$DC,$08,$BF,$4E,$9B,$8E
 $DB7A DEFB $08,$BF,$3F,$D2,$28,$08,$E7,$3E
 $DB82 DEFB $8B,$86,$AA,$D8,$41,$F4,$32,$41
 $DB8A DEFB $DD,$3C,$41,$BD,$47,$41,$AB,$4D
 $DB92 DEFB $42,$A9,$22,$40,$83,$28,$40,$83
 $DB9A DEFB $1D,$40,$6F,$1D,$40,$60,$1D,$40
 $DBA2 DEFB $53,$20,$40,$4E,$27,$00
; #LOCATION($18, 1, 1)($) - "#LOCATIONNAME$18".
 $DBA8 DEFB $07,$38,$08,$00,$77,$82,$45,$80
 $DBB0 DEFB $45,$80,$85,$82,$45,$8B,$85,$87
 $DBB8 DEFB $45,$8F,$85,$82,$05,$82,$85,$82
 $DBC0 DEFB $45,$85,$45,$85,$45,$81,$45,$80
 $DBC8 DEFB $45,$80,$05,$80,$45,$81,$C5,$80
 $DBD0 DEFB $45,$45,$2E,$79,$08,$B8,$7F,$83
 $DBD8 DEFB $05,$83,$45,$8A,$45,$82,$05,$82
 $DBE0 DEFB $C5,$82,$85,$88,$45,$80,$C5,$80
 $DBE8 DEFB $85,$80,$C5,$80,$85,$80,$85,$80
 $DBF0 DEFB $85,$45,$F0,$71,$08,$19,$30,$98
 $DBF8 DEFB $7E,$90,$08,$F3,$BD,$08,$23,$2A
 $DC00 DEFB $A0,$3D,$08,$1E,$20,$A0,$3D,$80
 $DC08 DEFB $C3,$08,$18,$2F,$82,$4A,$8F,$46
 $DC10 DEFB $86,$44,$08,$61,$35,$85,$04,$89
 $DC18 DEFB $44,$86,$04,$84,$84,$85,$C4,$80
 $DC20 DEFB $2D,$82,$28,$83,$C8,$84,$83,$85
 $DC28 DEFB $43,$81,$43,$80,$82,$08,$A7,$3C
 $DC30 DEFB $85,$26,$87,$24,$08,$80,$63,$85
 $DC38 DEFB $85,$81,$84,$08,$60,$42,$98,$FE
 $DC40 DEFB $08,$9D,$3D,$9E,$FE,$86,$00,$08
 $DC48 DEFB $9E,$3D,$8D,$86,$08,$9E,$3C,$83
 $DC50 DEFB $03,$A6,$3E,$86,$C3,$08,$A3,$38
 $DC58 DEFB $89,$86,$08,$A3,$37,$FB,$3E,$08
 $DC60 DEFB $68,$34,$FB,$3E,$08,$6B,$34,$FB
 $DC68 DEFB $3E,$08,$99,$37,$FB,$3E,$08,$A0
 $DC70 DEFB $37,$FB,$3E,$08,$21,$1F,$A3,$10
 $DC78 DEFB $08,$29,$1F,$B7,$59,$08,$32,$20
 $DC80 DEFB $B7,$59,$08,$3B,$20,$A7,$D3,$08
 $DC88 DEFB $44,$21,$C7,$E2,$08,$4D,$21,$C7
 $DC90 DEFB $E2,$08,$57,$22,$C7,$A3,$08,$A4
 $DC98 DEFB $37,$A0,$3E,$A0,$3E,$08,$A4,$30
 $DCA0 DEFB $A0,$3E,$A0,$3E,$08,$A4,$25,$A0
 $DCA8 DEFB $3E,$A0,$3E,$08,$AD,$24,$CB,$AD
 $DCB0 DEFB $08,$B7,$25,$CB,$AD,$08,$C1,$25
 $DCB8 DEFB $CB,$AD,$08,$CC,$26,$C3,$A2,$08
 $DCC0 DEFB $D5,$26,$CB,$24,$08,$DE,$27,$D7
 $DCC8 DEFB $69,$08,$E8,$27,$D7,$69,$08,$F1
 $DCD0 DEFB $27,$D7,$69,$08,$FA,$28,$D7,$69
 $DCD8 DEFB $08,$81,$5C,$86,$19,$08,$81,$5C
 $DCE0 DEFB $83,$16,$40,$81,$5E,$40,$69,$2D
 $DCE8 DEFB $40,$A2,$2D,$40,$A2,$3C,$40,$A7
 $DCF0 DEFB $40,$08,$21,$0E,$83,$08,$88,$48
 $DCF8 DEFB $88,$48,$85,$85,$08,$3C,$07,$83
 $DD00 DEFB $08,$42,$7D,$4A,$08,$21,$0E,$84
 $DD08 DEFB $CB,$8C,$8B,$85,$0B,$08,$C2,$00
 $DD10 DEFB $80,$49,$82,$49,$8A,$C9,$08,$1D
 $DD18 DEFB $20,$87,$88,$87,$88,$08,$17,$30
 $DD20 DEFB $85,$C8,$85,$08,$85,$48,$85,$08
 $DD28 DEFB $08,$29,$57,$82,$48,$83,$C8,$83
 $DD30 DEFB $48,$83,$08,$82,$48,$08,$A8,$47
 $DD38 DEFB $81,$C8,$81,$08,$81,$48,$80,$C8
 $DD40 DEFB $80,$88,$90,$48,$90,$48,$08,$C5
 $DD48 DEFB $49,$81,$08,$80,$88,$80,$48,$88
 $DD50 DEFB $48,$80,$08,$80,$C8,$80,$C8,$08
 $DD58 DEFB $46,$7E,$8A,$88,$82,$48,$83,$C8
 $DD60 DEFB $83,$88,$08,$5A,$70,$8F,$C8,$8F
 $DD68 DEFB $88,$8B,$C8,$83,$48,$08,$88,$66
 $DD70 DEFB $81,$88,$81,$08,$80,$48,$80,$48
 $DD78 DEFB $00
; #LOCATION($23, 1, 1)($) - "#LOCATIONNAME$23".
 $DD79 DEFB $07,$38,$08,$23,$34,$95,$CA,$81
 $DD81 DEFB $04,$8A,$C6,$08,$2E,$41,$81,$4C
 $DD89 DEFB $A0,$51,$08,$2E,$40,$A8,$D7,$A9
 $DD91 DEFB $D7,$08,$44,$57,$81,$52,$93,$92
 $DD99 DEFB $08,$4D,$6A,$83,$91,$08,$4D,$6A
 $DDA1 DEFB $8D,$04,$08,$47,$59,$88,$86,$08
 $DDA9 DEFB $4E,$59,$80,$84,$08,$4E,$58,$A3
 $DDB1 DEFB $D2,$08,$52,$59,$A3,$92,$08,$46
 $DDB9 DEFB $40,$8B,$45,$08,$46,$3D,$81,$0A
 $DDC1 DEFB $08,$51,$47,$B0,$18,$08,$6A,$47
 $DDC9 DEFB $82,$08,$8E,$08,$95,$49,$08,$6A
 $DDD1 DEFB $3D,$C4,$E3,$08,$6A,$3D,$97,$CB
 $DDD9 DEFB $08,$72,$3E,$97,$CB,$08,$79,$36
 $DDE1 DEFB $89,$86,$80,$04,$95,$08,$80,$08
 $DDE9 DEFB $A0,$10,$83,$08,$8E,$CA,$81,$CA
 $DDF1 DEFB $08,$95,$4B,$AC,$96,$08,$95,$4B
 $DDF9 DEFB $AF,$D7,$08,$A0,$4B,$AF,$D7,$08
 $DE01 DEFB $80,$42,$90,$08,$08,$8A,$42,$9B
 $DE09 DEFB $CF,$08,$8A,$42,$86,$06,$97,$49
 $DE11 DEFB $08,$83,$3B,$96,$89,$08,$82,$35
 $DE19 DEFB $9E,$0C,$86,$45,$8F,$85,$08,$1D
 $DE21 DEFB $32,$80,$C4,$88,$04,$80,$84,$88
 $DE29 DEFB $44,$83,$44,$8A,$04,$08,$33,$30
 $DE31 DEFB $8A,$04,$8A,$44,$88,$04,$88,$44
 $DE39 DEFB $82,$C4,$82,$84,$08,$4C,$2F,$82
 $DE41 DEFB $84,$82,$C4,$8A,$04,$80,$84,$80
 $DE49 DEFB $04,$88,$04,$83,$84,$82,$44,$82
 $DE51 DEFB $C4,$80,$84,$80,$04,$80,$84,$80
 $DE59 DEFB $C4,$88,$04,$88,$44,$8A,$04,$82
 $DE61 DEFB $C4,$80,$84,$88,$04,$08,$05,$31
 $DE69 DEFB $82,$91,$82,$D1,$8A,$D1,$8A,$91
 $DE71 DEFB $8A,$51,$88,$11,$88,$D1,$90,$51
 $DE79 DEFB $90,$51,$80,$51,$80,$91,$8C,$51
 $DE81 DEFB $08,$CB,$36,$8C,$91,$8C,$91,$84
 $DE89 DEFB $46,$08,$31,$49,$8C,$4E,$8E,$8E
 $DE91 DEFB $8E,$8E,$8E,$8E,$08,$05,$31,$8E
 $DE99 DEFB $8E,$08,$5D,$47,$A9,$96,$80,$49
 $DEA1 DEFB $B8,$9D,$9B,$CF,$08,$86,$63,$86
 $DEA9 DEFB $4C,$B4,$9A,$08,$79,$5D,$C3,$A1
 $DEB1 DEFB $08,$46,$47,$B3,$17,$08,$2E,$40
 $DEB9 DEFB $9B,$0B,$08,$53,$4C,$80,$49,$08
 $DEC1 DEFB $A6,$33,$82,$C9,$82,$C9,$08,$A1
 $DEC9 DEFB $35,$92,$49,$8A,$49,$8A,$09,$08
 $DED1 DEFB $FF,$39,$8C,$23,$84,$E3,$84,$D8
 $DED9 DEFB $08,$5C,$5A,$8C,$49,$08,$47,$61
 $DEE1 DEFB $94,$F9,$9C,$39,$08,$FF,$7A,$8E
 $DEE9 DEFB $2F,$8E,$E3,$8E,$D3,$84,$93,$86
 $DEF1 DEFB $4C,$8E,$4C,$86,$CC,$86,$CC,$08
 $DEF9 DEFB $AA,$6E,$84,$4C,$8C,$0C,$8C,$4C
 $DF01 DEFB $84,$4E,$08,$A1,$73,$80,$8C,$80
 $DF09 DEFB $44,$83,$04,$80,$84,$82,$8B,$08
 $DF11 DEFB $48,$55,$83,$C3,$08,$49,$55,$83
 $DF19 DEFB $C3,$08,$4B,$55,$83,$C3,$08,$4C
 $DF21 DEFB $55,$83,$C3,$08,$48,$4E,$83,$C3
 $DF29 DEFB $08,$49,$4E,$83,$C3,$08,$4B,$4E
 $DF31 DEFB $83,$C3,$08,$4C,$4E,$83,$C3,$08
 $DF39 DEFB $4C,$47,$83,$C3,$08,$4B,$47,$83
 $DF41 DEFB $C3,$08,$49,$47,$83,$C3,$08,$48
 $DF49 DEFB $47,$83,$C3,$08,$32,$3C,$83,$C3
 $DF51 DEFB $08,$33,$3C,$83,$C3,$08,$34,$3C
 $DF59 DEFB $83,$C3,$08,$39,$3C,$83,$C3,$08
 $DF61 DEFB $3A,$3C,$83,$C3,$08,$3B,$3C,$83
 $DF69 DEFB $C3,$08,$40,$3C,$83,$C3,$08,$41
 $DF71 DEFB $3C,$83,$C3,$08,$42,$3C,$83,$C3
 $DF79 DEFB $08,$4A,$38,$83,$C3,$08,$4B,$39
 $DF81 DEFB $83,$C3,$08,$4C,$38,$83,$C3,$08
 $DF89 DEFB $51,$38,$83,$C3,$08,$52,$39,$83
 $DF91 DEFB $C3,$08,$53,$38,$83,$C3,$08,$58
 $DF99 DEFB $38,$83,$C3,$08,$59,$39,$83,$C3
 $DFA1 DEFB $08,$5A,$38,$83,$C3,$08,$60,$38
 $DFA9 DEFB $83,$C3,$08,$61,$39,$83,$C3,$08
 $DFB1 DEFB $62,$38,$83,$C3,$08,$8E,$46,$83
 $DFB9 DEFB $C3,$08,$8F,$46,$83,$C3,$08,$90
 $DFC1 DEFB $46,$83,$C3,$08,$90,$3E,$83,$C3
 $DFC9 DEFB $08,$8F,$3E,$83,$C3,$08,$8E,$3E
 $DFD1 DEFB $83,$C3,$08,$99,$3E,$83,$C3,$08
 $DFD9 DEFB $9A,$3E,$83,$C3,$08,$9B,$3F,$83
 $DFE1 DEFB $C3,$08,$9C,$3F,$83,$C3,$08,$99
 $DFE9 DEFB $45,$83,$C3,$08,$9A,$45,$83,$C3
 $DFF1 DEFB $08,$9A,$45,$83,$C3,$08,$9B,$46
 $DFF9 DEFB $83,$C3,$08,$9C,$46,$83,$C3,$08
 $E001 DEFB $84,$48,$83,$C3,$08,$85,$48,$83
 $E009 DEFB $C3,$08,$86,$48,$83,$C3,$08,$50
 $E011 DEFB $56,$83,$C3,$08,$50,$4F,$83,$C3
 $E019 DEFB $42,$86,$4D,$42,$82,$3F,$42,$49
 $E021 DEFB $5B,$42,$50,$5B,$45,$8C,$7F,$41
 $E029 DEFB $59,$15,$00
; #LOCATION($0D, 1, 1)($) - "#LOCATIONNAME$0D".
 $E02C DEFB $00,$30,$08,$84,$55,$85,$CF,$85
 $E034 DEFB $05,$81,$C3,$80,$43,$82,$83,$82
 $E03C DEFB $43,$82,$03,$82,$01,$83,$8F,$86
 $E044 DEFB $CE,$40,$84,$6B,$08
; #LOCATION($1F, 1, 1)($) - "#LOCATIONNAME$1F".
 $E049 DEFB $00,$10,$08,$41,$1D,$C9,$65,$89
 $E051 DEFB $09,$81,$CA,$81,$49,$81,$0A,$80
 $E059 DEFB $CB,$08,$6A,$1D,$91,$CA,$81,$83
 $E061 DEFB $81,$42,$81,$03,$88,$04,$08,$7B
 $E069 DEFB $1D,$9D,$0C,$85,$84,$85,$04,$08
 $E071 DEFB $40,$1D,$8E,$7E,$08,$40,$35,$8C
 $E079 DEFB $7E,$08,$42,$4C,$84,$BE,$08,$4A
 $E081 DEFB $62,$84,$7E,$08,$55,$6E,$84,$3E
 $E089 DEFB $08,$61,$6F,$89,$BE,$08,$6D,$6D
 $E091 DEFB $80,$7E,$08,$79,$62,$80,$BE,$80
 $E099 DEFB $BE,$08,$80,$4C,$88,$BE,$88,$BE
 $E0A1 DEFB $08,$82,$34,$A0,$BE,$A0,$BC,$08
 $E0A9 DEFB $82,$1D,$8A,$BE,$8A,$BC,$08,$33
 $E0B1 DEFB $38,$89,$97,$08,$41,$67,$80,$0D
 $E0B9 DEFB $08,$62,$75,$8A,$14,$08,$85,$64
 $E0C1 DEFB $83,$96,$08,$8E,$33,$AB,$96,$08
 $E0C9 DEFB $B2,$35,$BB,$DE,$08,$DD,$37,$CF
 $E0D1 DEFB $65,$08,$F0,$3A,$8D,$A0,$08,$C8
 $E0D9 DEFB $38,$8D,$5D,$08,$9F,$36,$8D,$9A
 $E0E1 DEFB $08,$B1,$53,$85,$9D,$08,$D7,$59
 $E0E9 DEFB $85,$A3,$08,$94,$6C,$84,$0D,$08
 $E0F1 DEFB $B8,$78,$84,$0D,$08,$22,$19,$C1
 $E0F9 DEFB $20,$08,$12,$3D,$89,$5D,$08,$26
 $E101 DEFB $56,$81,$57,$08,$04,$61,$81,$5C
 $E109 DEFB $08,$22,$76,$80,$1C,$08,$47,$7D
 $E111 DEFB $88,$1C,$08,$81,$1D,$CD,$65,$8D
 $E119 DEFB $13,$85,$8A,$84,$0B,$8C,$4B,$08
 $E121 DEFB $42,$1D,$F8,$BE,$08,$FC,$5E,$85
 $E129 DEFB $FE,$40,$FC,$7F,$08,$72,$2F,$8B
 $E131 DEFB $45,$08,$75,$2F,$8B,$45,$08,$71
 $E139 DEFB $2E,$8A,$45,$08,$71,$2B,$8A,$45
 $E141 DEFB $00
; #LOCATION($05, 1, 1)($) - "#LOCATIONNAME$05".
 $E142 DEFB $00,$00,$08,$5E,$36,$B2,$59,$87
 $E14A DEFB $02,$82,$02,$83,$42,$83,$82,$83
 $E152 DEFB $C2,$87,$82,$87,$42,$87,$02,$86
 $E15A DEFB $42,$86,$82,$86,$C2,$86,$C2,$08
 $E162 DEFB $5D,$35,$82,$03,$86,$02,$87,$42
 $E16A DEFB $87,$82,$83,$82,$83,$82,$83,$42
 $E172 DEFB $83,$02,$82,$82,$82,$82,$82,$82
 $E17A DEFB $40,$6B,$21,$40,$6B,$29,$40,$65
 $E182 DEFB $2F,$08,$61,$1C,$86,$04,$80,$C4
 $E18A DEFB $80,$04,$08,$75,$1C,$82,$04,$08
 $E192 DEFB $79,$17,$84,$84,$84,$04,$40,$74
 $E19A DEFB $19,$40,$60,$19,$08
; #LOCATION($1C, 1, 1)($) - "#LOCATIONNAME$1C".
 $E19F DEFB $04,$20,$08,$0C,$25,$81,$43,$81
 $E1A7 DEFB $03,$88,$03,$82,$03,$8F,$03,$87
 $E1AF DEFB $C3,$86,$43,$86,$C3,$84,$43,$8D
 $E1B7 DEFB $03,$8D,$44,$08,$15,$2D,$92,$38
 $E1BF DEFB $83,$43,$87,$82,$87,$42,$BC,$BC
 $E1C7 DEFB $08,$B6,$25,$9C,$2B,$86,$42,$87
 $E1CF DEFB $42,$83,$42,$82,$42,$8A,$ED,$80
 $E1D7 DEFB $C4,$81,$44,$85,$02,$84,$42,$86
 $E1DF DEFB $83,$87,$83,$83,$82,$82,$43,$08
 $E1E7 DEFB $4A,$00,$85,$83,$81,$83,$81,$43
 $E1EF DEFB $80,$C3,$83,$03,$83,$C3,$8B,$03
 $E1F7 DEFB $87,$C3,$08,$52,$0C,$F8,$BE,$F8
 $E1FF DEFB $BE,$82,$03,$83,$83,$83,$C3,$8B
 $E207 DEFB $03,$08,$E2,$09,$83,$03,$82,$83
 $E20F DEFB $80,$83,$80,$03,$81,$83,$08,$F2
 $E217 DEFB $09,$81,$83,$81,$83,$81,$C3,$85
 $E21F DEFB $43,$85,$03,$84,$C3,$86,$C3,$86
 $E227 DEFB $83,$87,$03,$87,$43,$8F,$03,$83
 $E22F DEFB $83,$82,$03,$08,$E3,$07,$84,$D0
 $E237 DEFB $08,$CB,$0E,$84,$87,$81,$C3,$81
 $E23F DEFB $C3,$81,$43,$81,$43,$80,$43,$88
 $E247 DEFB $03,$8A,$59,$08,$11,$2E,$8D,$48
 $E24F DEFB $89,$88,$81,$48,$91,$08,$8D,$08
 $E257 DEFB $85,$C8,$8D,$08,$84,$88,$84,$88
 $E25F DEFB $08,$00,$79,$82,$88,$82,$88,$91
 $E267 DEFB $48,$91,$48,$08,$0C,$23,$86,$D0
 $E26F DEFB $08,$24,$2D,$8D,$08,$91,$08,$80
 $E277 DEFB $48,$80,$08,$81,$48,$83,$48,$83
 $E27F DEFB $88,$8B,$48,$93,$48,$93,$48,$08
 $E287 DEFB $25,$47,$81,$88,$8D,$48,$85,$48
 $E28F DEFB $8D,$08,$85,$C8,$8D,$4F,$8D,$48
 $E297 DEFB $08,$26,$48,$80,$45,$80,$06,$81
 $E29F DEFB $86,$08,$3A,$56,$84,$46,$85,$C6
 $E2A7 DEFB $85,$86,$85,$46,$84,$C6,$84,$06
 $E2AF DEFB $08,$4F,$26,$8D,$C6,$8D,$C6,$8D
 $E2B7 DEFB $C7,$8D,$C8,$9D,$0C,$81,$4C,$81
 $E2BF DEFB $4C,$81,$8C,$81,$8C,$08,$57,$7F
 $E2C7 DEFB $87,$CC,$86,$0C,$87,$85,$84,$45
 $E2CF DEFB $85,$85,$85,$45,$85,$05,$84,$85
 $E2D7 DEFB $84,$45,$84,$07,$08,$50,$27,$C0
 $E2DF DEFB $61,$92,$56,$08,$C0,$1F,$82,$46
 $E2E7 DEFB $08,$F5,$12,$8A,$CD,$08,$89,$29
 $E2EF DEFB $95,$8D,$8D,$CD,$85,$CD,$85,$8D
 $E2F7 DEFB $85,$CD,$8D,$0D,$8D,$0D,$08,$7E
 $E2FF DEFB $7F,$8B,$0D,$83,$8D,$89,$0D,$89
 $E307 DEFB $0D,$08,$96,$7F,$8F,$0D,$8F,$CD
 $E30F DEFB $80,$85,$81,$4E,$08,$A2,$73,$87
 $E317 DEFB $8E,$87,$C7,$80,$47,$81,$87,$81
 $E31F DEFB $90,$81,$90,$08,$9D,$27,$89,$D0
 $E327 DEFB $99,$10,$8D,$8B,$81,$06,$81,$C6
 $E32F DEFB $81,$86,$81,$C6,$81,$86,$81,$86
 $E337 DEFB $08,$EC,$1F,$85,$D6,$85,$96,$8D
 $E33F DEFB $4F,$8D,$0F,$85,$CF,$85,$CF,$08
 $E347 DEFB $E4,$7F,$83,$CF,$83,$8F,$83,$8F
 $E34F DEFB $81,$0F,$08,$FF,$50,$87,$4B,$83
 $E357 DEFB $CB,$83,$4B,$08,$5F,$2D,$85,$D3
 $E35F DEFB $8D,$13,$A1,$D3,$08,$53,$71,$85
 $E367 DEFB $53,$08,$6A,$2C,$8D,$D3,$9D,$53
 $E36F DEFB $89,$D3,$81,$11,$08,$65,$70,$80
 $E377 DEFB $11,$08,$64,$70,$84,$07,$08,$56
 $E37F DEFB $7C,$84,$07,$08,$64,$70,$87,$86
 $E387 DEFB $08,$45,$5F,$87,$86,$08,$25,$46
 $E38F DEFB $87,$87,$08,$13,$73,$82,$42,$87
 $E397 DEFB $42,$87,$02,$08,$84,$65,$83,$89
 $E39F DEFB $08,$93,$62,$83,$86,$88,$06,$08
 $E3A7 DEFB $F3,$4D,$83,$86,$08,$5F,$2C,$8A
 $E3AF DEFB $06,$8A,$04,$08,$B9,$2A,$82,$C4
 $E3B7 DEFB $82,$84,$82,$C4,$8A,$04,$91,$A2
 $E3BF DEFB $8D,$E2,$85,$A2,$08,$B9,$2B,$99
 $E3C7 DEFB $65,$85,$12,$08,$A4,$68,$8D,$12
 $E3CF DEFB $8D,$12,$08,$C1,$56,$85,$17,$08
 $E3D7 DEFB $A7,$70,$95,$71,$08,$BD,$5B,$8D
 $E3DF DEFB $9C,$85,$5C,$42,$DB,$06,$08,$4F
 $E3E7 DEFB $0F,$B1,$18,$08,$4F,$0F,$F0,$38
 $E3EF DEFB $A1,$10,$22,$59,$6A,$15,$06,$17
 $E3F7 DEFB $00,$15,$FF,$42,$90,$10,$00
; #LOCATION($04, 1, 1)($) - "#LOCATIONNAME$04".
 $E3FE DEFB $07,$30,$08,$00,$26,$98,$FE,$98
 $E406 DEFB $F2,$84,$07,$C8,$79,$92,$39,$A0
 $E40E DEFB $78,$08,$65,$2C,$81,$48,$08,$65
 $E416 DEFB $2B,$81,$48,$08,$00,$3F,$88,$FE
 $E41E DEFB $A8,$7E,$A8,$7E,$9A,$FE,$9A,$FE
 $E426 DEFB $08,$FF,$51,$84,$9A,$8C,$DA,$86
 $E42E DEFB $DA,$86,$DA,$08,$A8,$57,$94,$DA
 $E436 DEFB $84,$9A,$8C,$DA,$8E,$5A,$8E,$5A
 $E43E DEFB $96,$5A,$96,$5A,$08,$16,$5D,$84
 $E446 DEFB $9A,$08,$B8,$5A,$84,$9A,$94,$5A
 $E44E DEFB $8E,$9A,$08,$E6,$5A,$88,$DA,$08
 $E456 DEFB $C5,$39,$89,$9A,$08,$C5,$44,$85
 $E45E DEFB $CE,$08,$C8,$4A,$81,$4A,$08,$CB
 $E466 DEFB $4E,$80,$83,$08,$C4,$4E,$81,$83
 $E46E DEFB $08,$C3,$48,$84,$43,$41,$B7,$62
 $E476 DEFB $44,$95,$21,$00
; #LOCATION($20, 1, 1)($) - "#LOCATIONNAME$20".
 $E47A DEFB $01,$08,$08,$26,$00,$80,$04,$80
 $E482 DEFB $44,$80,$84,$80,$84,$80,$C4,$80
 $E48A DEFB $C4,$88,$04,$88,$04,$88,$44,$88
 $E492 DEFB $44,$8A,$04,$8A,$04,$82,$C4,$82
 $E49A DEFB $C4,$82,$84,$82,$85,$82,$45,$83
 $E4A2 DEFB $04,$08,$73,$09,$89,$14,$81,$03
 $E4AA DEFB $80,$85,$88,$04,$88,$04,$88,$44
 $E4B2 DEFB $88,$44,$82,$C3,$88,$03,$82,$C3
 $E4BA DEFB $8A,$04,$8A,$04,$8A,$04,$82,$84
 $E4C2 DEFB $83,$43,$87,$43,$86,$84,$86,$C4
 $E4CA DEFB $8E,$04,$8E,$04,$8E,$44,$8E,$44
 $E4D2 DEFB $84,$C4,$84,$C4,$84,$C4,$84,$C4
 $E4DA DEFB $84,$C4,$84,$44,$84,$02,$08,$B7
 $E4E2 DEFB $1B,$93,$1D,$08,$CD,$28,$82,$C8
 $E4EA DEFB $8A,$08,$8A,$89,$90,$49,$88,$CC
 $E4F2 DEFB $08,$CD,$28,$85,$48,$85,$C8,$8D
 $E4FA DEFB $08,$95,$48,$89,$08,$81,$C8,$81
 $E502 DEFB $88,$88,$C7,$90,$08,$90,$48,$92
 $E50A DEFB $08,$92,$08,$92,$08,$08,$CC,$66
 $E512 DEFB $8A,$C8,$92,$08,$92,$48,$92,$48
 $E51A DEFB $90,$08,$90,$08,$08,$C8,$34,$8E
 $E522 DEFB $48,$96,$48,$84,$C8,$85,$48,$8D
 $E52A DEFB $09,$95,$48,$89,$08,$81,$C8,$81
 $E532 DEFB $87,$80,$C8,$88,$45,$8A,$86,$8A
 $E53A DEFB $48,$82,$44,$83,$42,$08,$AD,$6B
 $E542 DEFB $82,$C4,$8A,$04,$8A,$44,$88,$04
 $E54A DEFB $88,$44,$88,$44,$88,$44,$08,$2E
 $E552 DEFB $00,$80,$02,$80,$C4,$88,$04,$88
 $E55A DEFB $04,$88,$04,$88,$04,$88,$44,$88
 $E562 DEFB $44,$8A,$04,$82,$C4,$82,$C4,$8A
 $E56A DEFB $04,$82,$C4,$82,$84,$82,$44,$40
 $E572 DEFB $7A,$00,$08,$3A,$00,$81,$04,$08
 $E57A DEFB $44,$00,$81,$07,$08,$4F,$00,$81
 $E582 DEFB $07,$08,$5A,$00,$81,$07,$08,$66
 $E58A DEFB $00,$81,$07,$08,$7D,$1A,$81,$83
 $E592 DEFB $80,$43,$80,$83,$80,$C3,$88,$03
 $E59A DEFB $88,$03,$88,$03,$82,$C3,$82,$C3
 $E5A2 DEFB $8A,$03,$82,$C3,$82,$C3,$82,$C3
 $E5AA DEFB $82,$43,$87,$83,$40,$B4,$1B,$08
 $E5B2 DEFB $87,$18,$85,$07,$08,$92,$16,$85
 $E5BA DEFB $0A,$08,$9C,$15,$85,$0D,$08,$A6
 $E5C2 DEFB $17,$85,$0D,$08,$AF,$17,$85,$0D
 $E5CA DEFB $40,$B6,$6B,$40,$EA,$68,$08,$7C
 $E5D2 DEFB $05,$89,$94,$08,$86,$00,$89,$D6
 $E5DA DEFB $08,$94,$00,$99,$D4,$08,$A3,$00
 $E5E2 DEFB $9D,$D4,$08,$AF,$00,$95,$15,$08
 $E5EA DEFB $B1,$35,$85,$88,$8D,$08,$95,$08
 $E5F2 DEFB $89,$48,$81,$C8,$81,$C8,$08,$B8
 $E5FA DEFB $34,$8D,$08,$8D,$48,$95,$08,$95
 $E602 DEFB $48,$89,$48,$81,$C7,$08,$C0,$34
 $E60A DEFB $B5,$18,$B5,$DB,$08,$C8,$60,$8D
 $E612 DEFB $C9,$08,$CD,$68,$85,$02,$08,$D3
 $E61A DEFB $28,$85,$46,$85,$86,$85,$C6,$8D
 $E622 DEFB $06,$8D,$86,$89,$46,$89,$06,$81
 $E62A DEFB $86,$81,$86,$08,$DC,$26,$85,$86
 $E632 DEFB $85,$C6,$85,$C6,$8D,$46,$8D,$C6
 $E63A DEFB $89,$86,$89,$86,$89,$46,$81,$C6
 $E642 DEFB $08,$EC,$25,$BD,$FE,$08,$FC,$27
 $E64A DEFB $91,$0F,$A1,$0F,$95,$0F,$8D,$4E
 $E652 DEFB $08,$00,$23,$8A,$BE,$80,$B5,$08
 $E65A DEFB $00,$24,$80,$B4,$8A,$7E,$08,$37
 $E662 DEFB $35,$93,$CB,$86,$9D,$08,$37,$29
 $E66A DEFB $8A,$62,$08,$00,$25,$80,$B5,$81
 $E672 DEFB $9F,$86,$F3,$87,$A4,$08,$0D,$4A
 $E67A DEFB $85,$06,$87,$9B,$08,$07,$52,$80
 $E682 DEFB $F2,$83,$07,$08,$1E,$30,$81,$A0
 $E68A DEFB $08,$29,$52,$84,$06,$08,$0F,$2B
 $E692 DEFB $81,$A3,$84,$05,$08,$2B,$34,$81
 $E69A DEFB $A0,$85,$07,$08,$2A,$5B,$8D,$0C
 $E6A2 DEFB $08,$3A,$40,$80,$F6,$E1,$B6,$08
 $E6AA DEFB $71,$4D,$92,$76,$08,$27,$68,$8E
 $E6B2 DEFB $36,$40,$22,$5D,$45,$42,$23,$08
 $E6BA DEFB $CE,$28,$8C,$12,$84,$CC,$84,$4C
 $E6C2 DEFB $84,$48,$80,$88,$80,$C8,$40,$C5
 $E6CA DEFB $2F,$08,$A5,$3D,$84,$48,$84,$48
 $E6D2 DEFB $80,$89,$40,$A5,$45,$08,$74,$17
 $E6DA DEFB $86,$88,$86,$48,$86,$48,$40,$6C
 $E6E2 DEFB $0C,$00
; #LOCATION($10, 1, 1)($) - "#LOCATIONNAME$10".
 $E6E4 DEFB $06,$30,$08,$70,$37,$81,$82,$81
 $E6EC DEFB $42,$81,$02,$80,$42,$80,$82,$80
 $E6F4 DEFB $C2,$08,$8B,$37,$85,$82,$85,$42
 $E6FC DEFB $85,$02,$84,$42,$84,$82,$84,$C2
 $E704 DEFB $08,$70,$36,$83,$82,$83,$42,$83
 $E70C DEFB $02,$82,$42,$82,$82,$82,$C2,$08
 $E714 DEFB $8B,$36,$87,$82,$87,$42,$87,$02
 $E71C DEFB $86,$42,$86,$82,$86,$C2,$08,$65
 $E724 DEFB $41,$89,$C7,$81,$87,$81,$04,$80
 $E72C DEFB $44,$80,$84,$80,$84,$80,$C4,$88
 $E734 DEFB $04,$08,$A0,$41,$8D,$C7,$85,$87
 $E73C DEFB $85,$04,$84,$44,$84,$84,$84,$84
 $E744 DEFB $84,$84,$08,$65,$40,$93,$08,$83
 $E74C DEFB $88,$82,$05,$82,$43,$08,$A0,$40
 $E754 DEFB $97,$49,$87,$88,$87,$05,$86,$46
 $E75C DEFB $8E,$4A,$08,$42,$40,$91,$CB,$81
 $E764 DEFB $C9,$81,$49,$80,$09,$80,$49,$80
 $E76C DEFB $89,$80,$C9,$88,$09,$90,$89,$08
 $E774 DEFB $C3,$3F,$9D,$0C,$85,$CB,$85,$49
 $E77C DEFB $85,$08,$84,$48,$84,$88,$84,$C8
 $E784 DEFB $8C,$08,$8C,$08,$08,$42,$3F,$93
 $E78C DEFB $08,$83,$C8,$83,$48,$83,$08,$82
 $E794 DEFB $43,$08,$C3,$3E,$97,$08,$87,$88
 $E79C DEFB $87,$48,$87,$08,$86,$48,$86,$88
 $E7A4 DEFB $86,$C5,$08,$13,$41,$95,$48,$81
 $E7AC DEFB $C8,$81,$48,$81,$48,$81,$08,$80
 $E7B4 DEFB $48,$80,$48,$80,$88,$80,$C8,$80
 $E7BC DEFB $C8,$88,$08,$88,$08,$08,$F0,$41
 $E7C4 DEFB $95,$48,$85,$C8,$85,$48,$85,$48
 $E7CC DEFB $85,$08,$84,$48,$84,$48,$84,$88
 $E7D4 DEFB $84,$C8,$8C,$08,$8C,$48,$8C,$48
 $E7DC DEFB $8C,$48,$08,$13,$40,$8B,$C8,$8B
 $E7E4 DEFB $08,$83,$88,$83,$48,$83,$10,$08
 $E7EC DEFB $F0,$40,$8F,$48,$8F,$08,$87,$88
 $E7F4 DEFB $87,$48,$87,$08,$86,$48,$86,$48
 $E7FC DEFB $86,$88,$86,$88,$8E,$04,$08,$71
 $E804 DEFB $37,$81,$02,$80,$42,$80,$82,$82
 $E80C DEFB $42,$82,$02,$83,$42,$83,$82,$87
 $E814 DEFB $42,$87,$02,$08,$07,$00,$80,$BE
 $E81C DEFB $80,$90,$80,$5B,$81,$03,$08,$C1
 $E824 DEFB $00,$84,$64,$84,$4D,$84,$09,$85
 $E82C DEFB $07,$08,$72,$31,$81,$43,$80,$41
 $E834 DEFB $82,$41,$83,$01,$87,$81,$83,$81
 $E83C DEFB $87,$02,$40,$74,$33,$08,$0C,$52
 $E844 DEFB $81,$D5,$82,$C8,$87,$57,$85,$44
 $E84C DEFB $40,$0F,$53,$08,$12,$69,$85,$43
 $E854 DEFB $81,$C3,$81,$43,$81,$03,$81,$43
 $E85C DEFB $83,$83,$83,$C3,$8B,$03,$83,$83
 $E864 DEFB $83,$83,$87,$03,$08,$11,$6A,$85
 $E86C DEFB $03,$8D,$03,$8D,$03,$81,$83,$81
 $E874 DEFB $03,$81,$03,$08,$1B,$66,$81,$03
 $E87C DEFB $81,$43,$81,$43,$81,$83,$81,$C3
 $E884 DEFB $85,$83,$85,$83,$08,$2C,$4F,$81
 $E88C DEFB $D2,$82,$C7,$87,$54,$85,$44,$40
 $E894 DEFB $2E,$4F,$08,$31,$62,$85,$43,$85
 $E89C DEFB $C3,$81,$83,$81,$43,$83,$43,$83
 $E8A4 DEFB $43,$83,$43,$82,$43,$87,$44,$08
 $E8AC DEFB $30,$63,$85,$03,$8D,$03,$8D,$03
 $E8B4 DEFB $81,$83,$81,$03,$82,$43,$08,$38
 $E8BC DEFB $60,$81,$43,$81,$43,$89,$03,$84
 $E8C4 DEFB $83,$85,$83,$85,$43,$08,$AB,$4B
 $E8CC DEFB $8D,$4D,$80,$C4,$8F,$11,$40,$AC
 $E8D4 DEFB $51,$08,$A9,$5A,$85,$43,$81,$83
 $E8DC DEFB $81,$43,$81,$43,$83,$C3,$83,$83
 $E8E4 DEFB $83,$43,$87,$43,$08,$A8,$58,$85
 $E8EC DEFB $03,$8D,$03,$81,$C3,$81,$43,$81
 $E8F4 DEFB $03,$81,$03,$08,$AF,$59,$81,$03
 $E8FC DEFB $81,$83,$81,$C3,$85,$43,$85,$83
 $E904 DEFB $84,$44,$08,$D6,$4B,$85,$51,$80
 $E90C DEFB $C6,$83,$D5,$84,$04,$40,$D3,$57
 $E914 DEFB $08,$CE,$5D,$8D,$03,$81,$83,$81
 $E91C DEFB $03,$81,$43,$83,$83,$87,$C3,$83
 $E924 DEFB $83,$87,$83,$08,$CD,$5D,$85,$03
 $E92C DEFB $81,$83,$81,$43,$81,$43,$81,$43
 $E934 DEFB $81,$03,$08,$D6,$5E,$81,$03,$81
 $E93C DEFB $83,$81,$83,$81,$C3,$85,$43,$84
 $E944 DEFB $03,$86,$43,$08,$58,$4F,$81,$CC
 $E94C DEFB $82,$C4,$87,$4E,$85,$83,$40,$5B
 $E954 DEFB $57,$08,$5C,$5D,$85,$43,$81,$C3
 $E95C DEFB $81,$03,$81,$43,$81,$C3,$83,$C3
 $E964 DEFB $83,$C3,$8B,$03,$83,$C3,$87,$83
 $E96C DEFB $86,$43,$08,$5C,$5D,$85,$03,$81
 $E974 DEFB $C3,$81,$C3,$81,$43,$81,$43,$81
 $E97C DEFB $43,$08,$62,$5C,$81,$03,$81,$43
 $E984 DEFB $81,$43,$85,$43,$85,$43,$85,$83
 $E98C DEFB $85,$03,$87,$43,$42,$D9,$6A,$42
 $E994 DEFB $B0,$61,$42,$67,$68,$42,$5D,$6B
 $E99C DEFB $08,$0E,$5F,$85,$05,$08,$0E,$60
 $E9A4 DEFB $85,$05,$08,$0F,$61,$84,$05,$08
 $E9AC DEFB $58,$56,$85,$05,$08,$58,$57,$85
 $E9B4 DEFB $03,$08,$59,$58,$85,$03,$08,$AD
 $E9BC DEFB $50,$80,$45,$08,$AE,$51,$80,$45
 $E9C4 DEFB $08,$D7,$56,$80,$05,$08,$D6,$57
 $E9CC DEFB $80,$05,$08,$2D,$5A,$84,$45,$08
 $E9D4 DEFB $2E,$5B,$84,$45,$42,$D6,$74,$42
 $E9DC DEFB $AF,$6D,$42,$63,$75,$42,$31,$75
 $E9E4 DEFB $42,$35,$71,$42,$2D,$70,$42,$21
 $E9EC DEFB $75,$00
; #LOCATION($19, 1, 1)($) - "#LOCATIONNAME$19".
 $E9EE DEFB $01,$08,$08,$32,$00,$85,$12,$84
 $E9F6 DEFB $CE,$85,$10,$08,$00,$2D,$82,$0F
 $E9FE DEFB $9D,$DF,$85,$1B,$08,$00,$50,$82
 $EA06 DEFB $08,$82,$55,$85,$DF,$84,$08,$85
 $EA0E DEFB $88,$82,$54,$83,$D6,$81,$CF,$81
 $EA16 DEFB $0D,$8B,$14,$82,$85,$82,$45,$83
 $EA1E DEFB $85,$83,$C5,$8F,$05,$87,$8B,$87
 $EA26 DEFB $4B,$83,$15,$81,$54,$81,$94,$81
 $EA2E DEFB $CB,$95,$0B,$84,$0B,$84,$4B,$84
 $EA36 DEFB $8B,$84,$CC,$08,$20,$1C,$8D,$D3
 $EA3E DEFB $84,$C4,$84,$04,$93,$19,$8A,$4A
 $EA46 DEFB $08,$33,$2A,$85,$4A,$85,$47,$89
 $EA4E DEFB $4E,$81,$CA,$81,$47,$83,$CA,$83
 $EA56 DEFB $4A,$82,$04,$8B,$44,$87,$C4,$87
 $EA5E DEFB $48,$87,$06,$08,$61,$00,$81,$9D
 $EA66 DEFB $81,$91,$80,$CB,$80,$8B,$88,$0A
 $EA6E DEFB $80,$48,$80,$08,$80,$08,$84,$C3
 $EA76 DEFB $86,$48,$86,$03,$86,$03,$86,$87
 $EA7E DEFB $86,$47,$86,$96,$89,$D6,$85,$C6
 $EA86 DEFB $81,$50,$81,$8E,$87,$06,$87,$46
 $EA8E DEFB $85,$D9,$08,$6F,$7F,$8B,$19,$87
 $EA96 DEFB $47,$84,$0A,$84,$92,$81,$92,$08
 $EA9E DEFB $55,$7F,$87,$50,$8C,$A4,$82,$50
 $EAA6 DEFB $40,$2F,$71,$08,$D3,$26,$95,$8E
 $EAAE DEFB $8C,$C8,$85,$46,$84,$4D,$8C,$8D
 $EAB6 DEFB $84,$47,$84,$07,$82,$C7,$82,$47
 $EABE DEFB $82,$87,$82,$C7,$84,$07,$84,$07
 $EAC6 DEFB $82,$47,$82,$07,$82,$47,$82,$87
 $EACE DEFB $83,$46,$8A,$04,$89,$0D,$85,$08
 $EAD6 DEFB $84,$88,$84,$88,$84,$C8,$88,$08
 $EADE DEFB $82,$88,$8A,$08,$81,$51,$85,$54
 $EAE6 DEFB $08,$CF,$7F,$83,$54,$87,$92,$82
 $EAEE DEFB $4E,$81,$53,$91,$49,$80,$C2,$93
 $EAF6 DEFB $4F,$82,$86,$83,$86,$8F,$86,$87
 $EAFE DEFB $49,$86,$0C,$8F,$D2,$86,$86,$86
 $EB06 DEFB $C6,$86,$46,$87,$03,$89,$03,$81
 $EB0E DEFB $83,$80,$45,$80,$00,$08,$E4,$3E
 $EB16 DEFB $89,$CB,$81,$47,$81,$04,$81,$43
 $EB1E DEFB $83,$03,$8B,$03,$87,$47,$87,$0D
 $EB26 DEFB $40,$D1,$21,$40,$A0,$4F,$08,$7F
 $EB2E DEFB $18,$81,$46,$8D,$09,$84,$90,$8C
 $EB36 DEFB $10,$8C,$47,$85,$C3,$8A,$0E,$08
 $EB3E DEFB $77,$31,$82,$8A,$81,$C6,$08,$7F
 $EB46 DEFB $17,$80,$C8,$82,$85,$89,$07,$8D
 $EB4E DEFB $47,$85,$44,$81,$86,$80,$86,$80
 $EB56 DEFB $46,$82,$8D,$8A,$07,$8B,$07,$8F
 $EB5E DEFB $87,$82,$C7,$81,$87,$81,$07,$81
 $EB66 DEFB $48,$08,$C6,$3B,$87,$48,$86,$46
 $EB6E DEFB $85,$86,$85,$C6,$8D,$86,$08,$B3
 $EB76 DEFB $44,$8F,$46,$8F,$06,$8C,$06,$8C
 $EB7E DEFB $06,$85,$46,$40,$9C,$3B,$40,$58
 $EB86 DEFB $34,$08,$58,$34,$85,$46,$08,$85
 $EB8E DEFB $3D,$84,$45,$8D,$4B,$86,$08,$08
 $EB96 DEFB $76,$4B,$81,$08,$83,$46,$83,$88
 $EB9E DEFB $82,$49,$08,$96,$44,$95,$09,$95
 $EBA6 DEFB $09,$82,$43,$08,$94,$58,$82,$43
 $EBAE DEFB $8B,$0A,$83,$4A,$40,$98,$4C,$40
 $EBB6 DEFB $80,$4C,$08,$B4,$4B,$81,$CA,$80
 $EBBE DEFB $47,$87,$47,$87,$C7,$40,$B5,$4A
 $EBC6 DEFB $40,$B8,$51,$08,$B1,$5D,$84,$52
 $EBCE DEFB $08,$96,$56,$84,$12,$08,$7B,$6F
 $EBD6 DEFB $80,$12,$08,$29,$73,$84,$92,$08
 $EBDE DEFB $18,$69,$84,$92,$08,$7E,$4F,$99
 $EBE6 DEFB $12,$08,$A9,$4F,$81,$83,$08,$AB
 $EBEE DEFB $58,$81,$83,$08,$ED,$6F,$81,$86
 $EBF6 DEFB $08,$00,$27,$88,$9F,$88,$9F,$AA
 $EBFE DEFB $63,$08,$8D,$2E,$AA,$63,$B2,$A3
 $EC06 DEFB $08,$E6,$2C,$B2,$A8,$08,$BE,$7F
 $EC0E DEFB $83,$45,$83,$05,$82,$47,$08,$CF
 $EC16 DEFB $70,$8D,$47,$08,$CD,$77,$8E,$45
 $EC1E DEFB $08,$C7,$77,$95,$4B,$42,$C3,$7B
 $EC26 DEFB $08,$D8,$71,$9D,$8F,$08,$E6,$7F
 $EC2E DEFB $87,$87,$87,$04,$86,$86,$42,$DE
 $EC36 DEFB $73,$22,$58,$19,$01,$06,$FF,$00
; #LOCATION($08, 1, 1)($) - "#LOCATIONNAME$08".
 $EC3E DEFB $04,$20,$08,$5F,$7F,$AB,$66,$92
 $EC46 DEFB $9F,$81,$43,$82,$C9,$8A,$49,$83
 $EC4E DEFB $43,$82,$C3,$83,$02,$87,$82,$86
 $EC56 DEFB $42,$8E,$32,$86,$85,$86,$02,$87
 $EC5E DEFB $8F,$8B,$07,$87,$87,$86,$07,$86
 $EC66 DEFB $47,$86,$13,$08,$76,$7F,$9B,$62
 $EC6E DEFB $B2,$E2,$8A,$59,$82,$47,$83,$44
 $EC76 DEFB $87,$44,$86,$44,$86,$51,$86,$03
 $EC7E DEFB $87,$43,$8F,$0A,$83,$44,$82,$44
 $EC86 DEFB $82,$44,$8B,$04,$87,$04,$87,$04
 $EC8E DEFB $83,$84,$83,$44,$82,$48,$82,$08
 $EC96 DEFB $08,$7F,$55,$86,$44,$87,$43,$82
 $EC9E DEFB $43,$8A,$4A,$90,$0A,$80,$C6,$85
 $ECA6 DEFB $86,$08,$5A,$15,$80,$04,$81,$43
 $ECAE DEFB $80,$43,$80,$C3,$82,$C3,$82,$C3
 $ECB6 DEFB $82,$43,$83,$03,$87,$83,$86,$83
 $ECBE DEFB $86,$C3,$86,$C3,$86,$C3,$8E,$03
 $ECC6 DEFB $8E,$03,$84,$83,$85,$02,$08,$90
 $ECCE DEFB $19,$84,$44,$80,$02,$80,$42,$80
 $ECD6 DEFB $82,$80,$82,$82,$82,$82,$02,$83
 $ECDE DEFB $42,$87,$02,$84,$82,$84,$C2,$84
 $ECE6 DEFB $C2,$84,$42,$08,$65,$7F,$8B,$8D
 $ECEE DEFB $89,$8E,$08,$6D,$77,$8B,$CE,$89
 $ECF6 DEFB $4F,$86,$C3,$08,$67,$68,$8B,$8D
 $ECFE DEFB $82,$41,$8D,$8F,$84,$82,$08,$5F
 $ED06 DEFB $3E,$8E,$8D,$8E,$4D,$8E,$0D,$87
 $ED0E DEFB $0D,$86,$4D,$86,$4D,$86,$4D,$08
 $ED16 DEFB $A4,$3A,$8A,$0D,$92,$0D,$8A,$CD
 $ED1E DEFB $82,$4D,$83,$0D,$82,$4D,$8A,$4D
 $ED26 DEFB $82,$8D,$08,$AA,$22,$82,$8D,$82
 $ED2E DEFB $4D,$82,$13,$82,$D7,$08,$56,$1B
 $ED36 DEFB $86,$CD,$86,$8D,$86,$4D,$86,$0D
 $ED3E DEFB $08,$2C,$0D,$8D,$1D,$08,$39,$15
 $ED46 DEFB $8D,$A2,$08,$A2,$5B,$98,$DB,$B8
 $ED4E DEFB $1B,$8A,$DB,$8A,$DB,$41,$92,$00
 $ED56 DEFB $08,$BA,$1E,$81,$16,$08,$C5,$19
 $ED5E DEFB $81,$16,$08,$DA,$05,$81,$5D,$08
 $ED66 DEFB $F3,$00,$89,$19,$08,$00,$29,$81
 $ED6E DEFB $53,$81,$0C,$80,$4C,$80,$4C,$80
 $ED76 DEFB $0C,$81,$06,$83,$86,$88,$04,$8D
 $ED7E DEFB $48,$83,$48,$83,$48,$89,$08,$8D
 $ED86 DEFB $88,$81,$88,$89,$4A,$08,$04,$3E
 $ED8E DEFB $85,$4A,$08,$00,$4B,$80,$4A,$80
 $ED96 DEFB $05,$8F,$4B,$86,$0B,$08,$1B,$52
 $ED9E DEFB $8D,$44,$88,$45,$89,$06,$82,$85
 $EDA6 DEFB $83,$C3,$86,$4E,$08,$39,$68,$91
 $EDAE DEFB $8F,$86,$C8,$8F,$04,$8E,$04,$89
 $EDB6 DEFB $85,$8C,$46,$8C,$86,$84,$86,$87
 $EDBE DEFB $85,$82,$85,$86,$45,$82,$48,$8E
 $EDC6 DEFB $C8,$82,$C8,$80,$C8,$90,$48,$82
 $EDCE DEFB $C9,$08,$31,$73,$82,$C8,$08,$21
 $EDD6 DEFB $76,$8B,$0D,$08,$40,$6B,$91,$4D
 $EDDE DEFB $83,$03,$87,$4A,$08,$30,$5F,$84
 $EDE6 DEFB $44,$80,$C9,$86,$04,$08,$3C,$61
 $EDEE DEFB $80,$C4,$8D,$04,$40,$40,$7F,$40
 $EDF6 DEFB $40,$63,$08,$26,$6B,$85,$CC,$40
 $EDFE DEFB $24,$6D,$26,$59,$8C,$19,$02,$23
 $EE06 DEFB $FF,$27,$58,$8D,$03,$08,$02,$04
 $EE0E DEFB $01,$0E,$FF,$08,$5F,$58,$94,$E9
 $EE16 DEFB $08,$B3,$5C,$85,$E9,$08,$E1,$5C
 $EE1E DEFB $AD,$29,$08,$C0,$45,$8A,$92,$92
 $EE26 DEFB $D2,$90,$0C,$85,$C8,$84,$44,$84
 $EE2E DEFB $84,$84,$C4,$86,$C4,$8E,$04,$86
 $EE36 DEFB $C4,$86,$84,$86,$44,$86,$C4,$87
 $EE3E DEFB $04,$46,$C8,$47,$00
; #LOCATION($29, 1, 1)($) - "#LOCATIONNAME$29".
 $EE43 DEFB $07,$38,$08,$FF,$7E,$8E,$7E,$8E
 $EE4B DEFB $7E,$08,$08,$00,$F9,$FE,$C1,$1F
 $EE53 DEFB $89,$07,$81,$87,$81,$47,$80,$47
 $EE5B DEFB $82,$87,$83,$47,$8B,$07,$8B,$C7
 $EE63 DEFB $FB,$FE,$BF,$DF,$08,$FF,$64,$96
 $EE6B DEFB $7E,$96,$3E,$08,$2D,$04,$F9,$FE
 $EE73 DEFB $B9,$1C,$89,$47,$81,$87,$81,$03
 $EE7B DEFB $80,$43,$83,$03,$83,$43,$83,$C3
 $EE83 DEFB $83,$C3,$8B,$03,$83,$C3,$FB,$FE
 $EE8B DEFB $B3,$58,$08,$49,$07,$F9,$FE,$B1
 $EE93 DEFB $17,$81,$84,$81,$44,$81,$44,$80
 $EE9B DEFB $03,$82,$03,$83,$43,$83,$83,$83
 $EEA3 DEFB $C3,$83,$C3,$FB,$FE,$AB,$55,$08
 $EEAB DEFB $25,$02,$82,$43,$08,$42,$06,$82
 $EEB3 DEFB $43,$08,$5B,$09,$88,$5C,$8A,$09
 $EEBB DEFB $08,$79,$0E,$F9,$FE,$E9,$33,$08
 $EEC3 DEFB $81,$57,$94,$08,$08,$81,$69,$8E
 $EECB DEFB $08,$08,$5A,$09,$84,$51,$08,$42
 $EED3 DEFB $06,$84,$55,$08,$25,$03,$84,$5D
 $EEDB DEFB $08,$6F,$00,$08,$66,$00,$80,$CE
 $EEE3 DEFB $80,$08,$80,$98,$8A,$C9,$81,$49
 $EEEB DEFB $8A,$0D,$80,$CD,$81,$4A,$8A,$56
 $EEF3 DEFB $83,$47,$82,$8E,$80,$CE,$08,$CD
 $EEFB DEFB $07,$80,$C8,$84,$CF,$86,$89,$08
 $EF03 DEFB $C7,$0D,$85,$89,$82,$D1,$8B,$0A
 $EF0B DEFB $81,$03,$8D,$08,$86,$45,$08,$DB
 $EF13 DEFB $15,$84,$D0,$86,$46,$08,$D6,$08
 $EF1B DEFB $8B,$04,$08,$DE,$26,$8D,$08,$83
 $EF23 DEFB $04,$81,$C7,$83,$49,$81,$45,$8B
 $EF2B DEFB $8B,$81,$8B,$8B,$97,$08,$DF,$22
 $EF33 DEFB $83,$4E,$8A,$22,$08,$84,$0C,$83
 $EF3B DEFB $5F,$08,$25,$09,$84,$49,$81,$42
 $EF43 DEFB $80,$42,$80,$82,$82,$42,$08,$41
 $EF4B DEFB $0D,$84,$46,$85,$42,$81,$41,$80
 $EF53 DEFB $42,$82,$42,$82,$02,$40,$15,$18
 $EF5B DEFB $40,$32,$18,$40,$54,$18,$08,$28
 $EF63 DEFB $01,$80,$44,$08,$46,$05,$80,$42
 $EF6B DEFB $41,$FF,$62,$41,$F8,$7F,$46,$FF
 $EF73 DEFB $18,$46,$82,$03,$26,$59,$79,$05
 $EF7B DEFB $02,$01,$02,$09,$06,$3B,$00,$35
 $EF83 DEFB $0B,$00,$27,$0D,$03,$00,$19,$0B
 $EF8B DEFB $04,$09,$FF,$08,$9D,$06,$80,$02
 $EF93 DEFB $83,$02,$86,$02,$85,$02,$42,$9F
 $EF9B DEFB $06,$08,$AB,$06,$81,$01,$82,$01
 $EFA3 DEFB $87,$02,$85,$43,$44,$AC,$05,$08
 $EFAB DEFB $AC,$11,$85,$43,$80,$83,$87,$83
 $EFB3 DEFB $45,$AD,$14,$08,$96,$0D,$87,$83
 $EFBB DEFB $85,$03,$80,$C3,$83,$83,$43,$94
 $EFC3 DEFB $0C,$08,$D3,$1F,$83,$83,$80,$03
 $EFCB DEFB $86,$C4,$47,$D5,$1E,$08,$C5,$08
 $EFD3 DEFB $86,$C4,$82,$44,$81,$83,$41,$C4
 $EFDB DEFB $07,$08,$E9,$08,$81,$83,$83,$43
 $EFE3 DEFB $8E,$03,$42,$E9,$09,$08,$F5,$0B
 $EFEB DEFB $8E,$04,$81,$44,$83,$04,$44,$F3
 $EFF3 DEFB $0C,$08,$E1,$01,$8A,$44,$85,$C4
 $EFFB DEFB $87,$04,$47,$E4,$03,$00
; #LOCATION($1A, 1, 1)($) - "#LOCATIONNAME$1A".
 $F001 DEFB $02,$10,$08,$5D,$00,$84,$59,$85
 $F009 DEFB $55,$83,$10,$82,$98,$B8,$AD,$80
 $F011 DEFB $1B,$84,$71,$86,$FE,$86,$D9,$86
 $F019 DEFB $4A,$86,$0A,$81,$4A,$80,$0A,$80
 $F021 DEFB $FE,$80,$E6,$82,$95,$85,$49,$9C
 $F029 DEFB $7A,$9E,$9E,$86,$4B,$8F,$8B,$8D
 $F031 DEFB $8C,$80,$0B,$88,$A3,$D0,$BC,$83
 $F039 DEFB $09,$85,$8F,$AC,$BA,$9C,$4D,$86
 $F041 DEFB $A0,$86,$13,$8F,$0E,$9D,$93,$81
 $F049 DEFB $18,$80,$A1,$E8,$7E,$A0,$92,$83
 $F051 DEFB $95,$99,$0E,$88,$76,$82,$53,$83
 $F059 DEFB $93,$87,$89,$8D,$49,$85,$4F,$84
 $F061 DEFB $8F,$86,$E8,$8F,$8D,$81,$03,$81
 $F069 DEFB $43,$81,$03,$80,$43,$80,$83,$80
 $F071 DEFB $C3,$88,$03,$82,$C3,$82,$83,$82
 $F079 DEFB $43,$82,$03,$83,$43,$83,$43,$83
 $F081 DEFB $83,$83,$C3,$87,$C3,$87,$83,$87
 $F089 DEFB $03,$86,$03,$86,$43,$86,$C3,$84
 $F091 DEFB $C3,$84,$83,$84,$83,$84,$83,$84
 $F099 DEFB $C3,$83,$04,$8A,$26,$A5,$26,$84
 $F0A1 DEFB $0A,$84,$4A,$8A,$8C,$82,$45,$82
 $F0A9 DEFB $0C,$B3,$F2,$8C,$67,$83,$9D,$92
 $F0B1 DEFB $DD,$81,$D8,$85,$4D,$08,$F8,$31
 $F0B9 DEFB $83,$0D,$08,$FF,$08,$87,$8D,$08
 $F0C1 DEFB $CF,$00,$85,$97,$87,$59,$08,$AB
 $F0C9 DEFB $00,$81,$53,$86,$18,$08,$6F,$0B
 $F0D1 DEFB $8D,$91,$81,$54,$97,$54,$8B,$13
 $F0D9 DEFB $08,$C4,$4C,$83,$48,$88,$08,$80
 $F0E1 DEFB $48,$81,$88,$84,$05,$8C,$05,$86
 $F0E9 DEFB $89,$87,$89,$40,$BD,$4B,$40,$73
 $F0F1 DEFB $1A,$08,$A6,$29,$83,$C8,$08,$94
 $F0F9 DEFB $10,$89,$49,$8E,$88,$86,$83,$89
 $F101 DEFB $03,$81,$83,$81,$03,$81,$83,$81
 $F109 DEFB $03,$80,$43,$8A,$08,$08,$92,$22
 $F111 DEFB $80,$02,$83,$42,$86,$C3,$08,$99
 $F119 DEFB $1B,$80,$02,$83,$42,$84,$83,$08
 $F121 DEFB $99,$23,$80,$02,$83,$42,$84,$C3
 $F129 DEFB $40,$97,$20,$08,$43,$7F,$87,$5B
 $F131 DEFB $08,$30,$56,$A7,$A7,$83,$B1,$08
 $F139 DEFB $00,$28,$88,$F1,$88,$F1,$88,$F1
 $F141 DEFB $08,$DC,$3A,$82,$B1,$08,$00,$60
 $F149 DEFB $9A,$71,$9A,$71,$08,$E4,$57,$88
 $F151 DEFB $31,$08,$CF,$65,$81,$71,$08,$AB
 $F159 DEFB $65,$B1,$F1,$08,$91,$5C,$85,$32
 $F161 DEFB $08,$94,$16,$86,$32,$08,$AC,$0F
 $F169 DEFB $A7,$B2,$08,$D5,$19,$82,$32,$08
 $F171 DEFB $72,$7B,$87,$61,$A7,$66,$83,$7E
 $F179 DEFB $08,$74,$7B,$90,$78,$08,$B4,$7F
 $F181 DEFB $8A,$E5,$83,$20,$A3,$2B,$87,$63
 $F189 DEFB $08,$7F,$6D,$87,$96,$8F,$DF,$83
 $F191 DEFB $6B,$82,$AA,$80,$B1,$81,$63,$08
 $F199 DEFB $D3,$71,$94,$68,$08,$AA,$73,$96
 $F1A1 DEFB $6A,$08,$8B,$61,$87,$8B,$9F,$DE
 $F1A9 DEFB $83,$4F,$08,$D4,$1D,$81,$5B,$8D
 $F1B1 DEFB $45,$08,$E1,$57,$84,$10,$08,$BB
 $F1B9 DEFB $6A,$A6,$12,$24,$58,$B9,$05,$02
 $F1C1 DEFB $0B,$02,$09,$FF,$26,$59,$72,$01
 $F1C9 DEFB $06,$FF,$08,$16,$7A,$8E,$06,$8A
 $F1D1 DEFB $06,$82,$04,$8B,$04,$87,$45,$80
 $F1D9 DEFB $04,$89,$44,$85,$83,$84,$03,$8E
 $F1E1 DEFB $04,$46,$14,$79,$00
; #LOCATION($27, 1, 1)($) - "#LOCATIONNAME$27".
 $F1E6 DEFB $07,$38,$08,$00,$2D,$82,$D0,$92
 $F1EE DEFB $9A,$8A,$5A,$08,$00,$22,$92,$DA
 $F1F6 DEFB $83,$87,$82,$DA,$08,$00,$00,$80
 $F1FE DEFB $DA,$80,$9A,$80,$04,$80,$97,$88
 $F206 DEFB $57,$98,$57,$98,$97,$A0,$D7,$A2
 $F20E DEFB $11,$80,$51,$80,$11,$87,$51,$87
 $F216 DEFB $0D,$86,$CD,$86,$8D,$86,$4D,$86
 $F21E DEFB $0D,$86,$0D,$08,$2D,$16,$80,$4D
 $F226 DEFB $80,$4D,$88,$0D,$80,$CD,$88,$0D
 $F22E DEFB $90,$4D,$8A,$0D,$82,$4F,$08,$97
 $F236 DEFB $27,$9A,$4F,$98,$0F,$80,$8F,$80
 $F23E DEFB $4F,$81,$CF,$81,$0F,$88,$55,$08
 $F246 DEFB $EA,$3D,$88,$55,$08,$CA,$00,$80
 $F24E DEFB $D5,$80,$55,$80,$15,$08,$A3,$1F
 $F256 DEFB $81,$D5,$89,$49,$83,$C9,$83,$D4
 $F25E DEFB $87,$03,$86,$43,$84,$04,$8E,$4B
 $F266 DEFB $8E,$0B,$86,$8B,$86,$4B,$88,$8B
 $F26E DEFB $80,$CB,$80,$CB,$88,$50,$40,$A5
 $F276 DEFB $20,$40,$A7,$24,$40,$A6,$28,$40
 $F27E DEFB $A1,$1D,$44,$AE,$20,$44,$AC,$1E
 $F286 DEFB $44,$AB,$2A,$44,$AA,$31,$44,$A8
 $F28E DEFB $39,$08,$D6,$2A,$88,$09,$40,$DE
 $F296 DEFB $2E,$08,$1D,$29,$80,$51,$80,$90
 $F29E DEFB $81,$4A,$81,$49,$80,$46,$81,$48
 $F2A6 DEFB $81,$88,$82,$C6,$80,$43,$82,$42
 $F2AE DEFB $80,$46,$83,$85,$83,$46,$87,$C6
 $F2B6 DEFB $80,$85,$83,$49,$83,$03,$83,$43
 $F2BE DEFB $82,$83,$82,$4A,$8B,$0A,$83,$48
 $F2C6 DEFB $25,$59,$54,$04,$01,$0A,$00,$01
 $F2CE DEFB $00,$FF,$08,$49,$25,$81,$89,$81
 $F2D6 DEFB $49,$80,$09,$89,$09,$91,$09,$91
 $F2DE DEFB $09,$40,$5C,$57,$08,$9F,$28,$A9
 $F2E6 DEFB $D7,$A0,$0F,$A3,$0F,$8A,$C7,$8B
 $F2EE DEFB $C7,$25,$59,$43,$01,$00,$05,$00
 $F2F6 DEFB $05,$00,$01,$00,$01,$04,$FF,$08
 $F2FE DEFB $17,$29,$89,$86,$88,$C6,$89,$C7
 $F306 DEFB $98,$CE,$89,$C7,$98,$CE,$89,$C7
 $F30E DEFB $88,$C6,$89,$C7,$88,$C6,$89,$C7
 $F316 DEFB $88,$86,$81,$07,$21,$58,$6B,$09
 $F31E DEFB $02,$0B,$02,$0D,$02,$13,$02,$19
 $F326 DEFB $02,$1F,$02,$21,$02,$23,$02,$09
 $F32E DEFB $FF,$44,$5C,$23,$25,$58,$0B,$06
 $F336 DEFB $09,$04,$07,$02,$05,$FF,$08,$57
 $F33E DEFB $7F,$B7,$58,$08,$57,$67,$C0,$20
 $F346 DEFB $A9,$E0,$08,$5A,$6E,$80,$02,$82
 $F34E DEFB $82,$82,$01,$81,$01,$80,$42,$82
 $F356 DEFB $42,$45,$79,$7A,$00,$00,$00,$00
 $F35E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F366 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F36E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F376 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F37E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F386 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F38E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F396 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F39E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3A6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3AE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3B6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3BE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3C6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3CE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3D6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3DE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3E6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3EE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3F6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F3FE DEFB $00,$00

; Copy of original objects
@label=CopyOfObjects
b$F400 DEFB $01,$FF,$10,$40,$10,$40,$40,$E0
 $F408 DEFB $A8,$87,$00,$00,$00,$00,$00,$00
 $F410 DEFB $01,$1B,$B5,$92,$00,$D2,$90,$FF
 $F418 DEFB $01,$FF,$C0,$60,$00,$C0,$C0,$E0
 $F420 DEFB $C8,$01,$36,$05,$F3,$02,$00,$00
 $F428 DEFB $29,$FF,$02,$FF,$FF,$FF,$00,$00
 $F430 DEFB $10,$80,$C0,$01,$5F,$05,$04,$03
 $F438 DEFB $00,$00,$01,$04,$0B,$ED,$92,$0C
 $F440 DEFB $38,$91,$10,$0E,$91,$18,$EC,$8E
 $F448 DEFB $1E,$3B,$8F,$25,$58,$A3,$26,$58
 $F450 DEFB $A3,$2C,$A4,$94,$FF,$02,$FF,$FF
 $F458 DEFB $FF,$00,$00,$90,$81,$C0,$01,$27
 $F460 DEFB $03,$53,$05,$00,$00,$07,$06,$0B
 $F468 DEFB $ED,$92,$0C,$38,$91,$10,$0E,$91
 $F470 DEFB $18,$EC,$8E,$1E,$3B,$8F,$25,$38
 $F478 DEFB $A3,$26,$38,$A3,$2C,$A4,$94,$FF
 $F480 DEFB $01,$FF,$00,$00,$00,$00,$00,$80
 $F488 DEFB $A5,$03,$F3,$02,$00,$00,$00,$00
 $F490 DEFB $4F,$FF,$01,$1F,$00,$00,$00,$00
 $F498 DEFB $00,$80,$A5,$03,$E1,$05,$63,$01
 $F4A0 DEFB $00,$00,$0D,$FF,$01,$47,$01,$01
 $F4A8 DEFB $00,$00,$00,$80,$A5,$03,$BF,$03
 $F4B0 DEFB $00,$00,$00,$00,$05,$FF,$01,$3E
 $F4B8 DEFB $02,$00,$00,$00,$02,$80,$2C,$14
 $F4C0 DEFB $63,$01,$00,$00,$52,$B5,$01,$1C
 $F4C8 DEFB $C4,$A7,$FF,$02,$FF,$FF,$FF,$00
 $F4D0 DEFB $FF,$00,$80,$51,$01,$E1,$05,$81
 $F4D8 DEFB $03,$00,$00,$0E,$0F,$10,$68,$A3
 $F4E0 DEFB $0C,$38,$91,$1E,$3B,$8F,$18,$EC
 $F4E8 DEFB $8E,$FF,$05,$FF,$A0,$50,$00,$40
 $F4F0 DEFB $40,$80,$76,$07,$23,$06,$00,$00
 $F4F8 DEFB $00,$00,$1A,$1C,$1B,$1D,$32,$0B
 $F500 DEFB $ED,$92,$00,$77,$A3,$1E,$3B,$8F
 $F508 DEFB $FF,$03,$FF,$FF,$FF,$00,$00,$00
 $F510 DEFB $81,$C0,$01,$36,$05,$00,$00,$00
 $F518 DEFB $00,$1F,$1E,$20,$10,$0E,$91,$0C
 $F520 DEFB $38,$91,$18,$EC,$8E,$1E,$3B,$8F
 $F528 DEFB $25,$34,$A3,$26,$34,$A3,$2C,$A4
 $F530 DEFB $94,$FF,$03,$FF,$FF,$FF,$00,$00
 $F538 DEFB $00,$86,$4A,$05,$53,$02,$A5,$00
 $F540 DEFB $63,$B5,$42,$43,$19,$11,$28,$94
 $F548 DEFB $0E,$28,$94,$19,$F8,$8E,$32,$10
 $F550 DEFB $A3,$FF,$03,$FF,$FF,$FF,$00,$00
 $F558 DEFB $00,$86,$4A,$05,$53,$02,$00,$00
 $F560 DEFB $00,$00,$17,$21,$22,$11,$28,$94
 $F568 DEFB $0E,$28,$94,$19,$F8,$8E,$32,$CD
 $F570 DEFB $A2,$FF,$02,$FF,$40,$FF,$00,$50
 $F578 DEFB $50,$80,$C0,$01,$E8,$02,$7C,$00
 $F580 DEFB $00,$00,$13,$14,$10,$0E,$91,$0C
 $F588 DEFB $38,$91,$0B,$ED,$92,$18,$EC,$8E
 $F590 DEFB $1E,$3B,$8F,$2C,$A4,$94,$0B,$ED
 $F598 DEFB $92,$FF,$02,$FF,$FF,$FF,$00,$00
 $F5A0 DEFB $00,$01,$C0,$01,$56,$04,$A6,$05
 $F5A8 DEFB $00,$00,$2A,$2B,$0C,$38,$91,$00
 $F5B0 DEFB $A2,$AA,$26,$30,$A3,$00,$5E,$A3
 $F5B8 DEFB $1E,$3B,$8F,$18,$EC,$8E,$2C,$A4
 $F5C0 DEFB $94,$FF,$02,$FF,$FF,$FF,$00,$00
 $F5C8 DEFB $30,$80,$C0,$01,$BF,$03,$E0,$06
 $F5D0 DEFB $00,$00,$20,$21,$10,$7E,$A6,$0C
 $F5D8 DEFB $7E,$A6,$0B,$ED,$92,$18,$EC,$8E
 $F5E0 DEFB $1E,$3B,$8F,$2C,$A4,$94,$00,$E2
 $F5E8 DEFB $A5,$FF,$01,$FF,$03,$04,$00,$40
 $F5F0 DEFB $80,$94,$80,$06,$99,$05,$64,$06
 $F5F8 DEFB $00,$00,$07,$0B,$ED,$92,$FF,$01
 $F600 DEFB $FF,$00,$00,$00,$FF,$00,$80,$3D
 $F608 DEFB $05,$35,$07,$F3,$02,$00,$00,$3D
 $F610 DEFB $28,$90,$A3,$16,$BC,$A3,$FF,$01
 $F618 DEFB $42,$02,$02,$00,$02,$02,$80,$A5
 $F620 DEFB $03,$36,$05,$00,$00,$00,$00,$20
 $F628 DEFB $FF,$02,$FF,$FF,$FF,$00,$FF,$FF
 $F630 DEFB $80,$C0,$01,$E8,$02,$00,$00,$00
 $F638 DEFB $00,$10,$0D,$10,$C0,$A4,$0C,$38
 $F640 DEFB $91,$1E,$3B,$8F,$18,$EC,$8E,$2C
 $F648 DEFB $A4,$94,$FF,$01,$FF,$02,$02,$04
 $F650 DEFB $20,$05,$A0,$5B,$05,$00,$00,$00
 $F658 DEFB $00,$00,$00,$07,$2B,$14,$A8,$2E
 $F660 DEFB $48,$A2,$31,$76,$A8,$FF,$02,$FF
 $F668 DEFB $FF,$FF,$00,$FF,$FF,$80,$C0,$01
 $F670 DEFB $24,$04,$00,$00,$00,$00,$1E,$1C
 $F678 DEFB $1E,$3B,$8F,$18,$EC,$8E,$2C,$A4
 $F680 DEFB $94,$1C,$1E,$A7,$FF,$01,$FF,$15
 $F688 DEFB $60,$10,$70,$88,$E0,$BD,$82,$00
 $F690 DEFB $00,$00,$00,$00,$00,$01,$FF,$01
 $F698 DEFB $FF,$1D,$50,$10,$68,$78,$E0,$B4
 $F6A0 DEFB $86,$00,$00,$00,$00,$00,$00,$01
 $F6A8 DEFB $0F,$71,$91,$00,$3B,$A7,$FF,$01
 $F6B0 DEFB $FF,$70,$FF,$40,$40,$30,$E0,$0A
 $F6B8 DEFB $02,$9E,$07,$00,$00,$00,$00,$1C
 $F6C0 DEFB $FF,$01,$FF,$20,$30,$50,$40,$40
 $F6C8 DEFB $E0,$0D,$82,$00,$00,$00,$00,$00
 $F6D0 DEFB $00,$09,$FF,$01,$FF,$20,$03,$00
 $F6D8 DEFB $20,$20,$84,$84,$10,$00,$00,$00
 $F6E0 DEFB $00,$00,$00,$20,$10,$0E,$91,$0C
 $F6E8 DEFB $38,$91,$11,$4F,$92,$23,$69,$8F
 $F6F0 DEFB $22,$04,$94,$38,$27,$AA,$36,$5F
 $F6F8 DEFB $A5,$0B,$ED,$92,$FF,$01,$13,$1F
 $F700 DEFB $05,$00,$00,$00,$82,$92,$37,$00
 $F708 DEFB $00,$00,$00,$00,$00,$20,$21,$9C
 $F710 DEFB $92,$00,$F9,$AA,$FF,$01,$FF,$30
 $F718 DEFB $30,$40,$20,$70,$60,$DC,$00,$00
 $F720 DEFB $00,$00,$00,$00,$00,$20,$FF,$01
 $F728 DEFB $FF,$30,$30,$00,$37,$37,$E0,$9A
 $F730 DEFB $07,$41,$07,$00,$00,$00,$00,$15
 $F738 DEFB $FF,$01,$FF,$1F,$05,$00,$00,$00
 $F740 DEFB $82,$5E,$37,$00,$00,$00,$00,$00
 $F748 DEFB $00,$00,$21,$9C,$92,$FF,$01,$FF
 $F750 DEFB $1F,$05,$00,$00,$00,$82,$5E,$07
 $F758 DEFB $A5,$00,$00,$00,$00,$00,$00,$21
 $F760 DEFB $28,$A3,$FF,$08,$FF,$00,$05,$00
 $F768 DEFB $00,$00,$82,$5E,$07,$00,$00,$00
 $F770 DEFB $00,$00,$00,$08,$21,$22,$24,$31
 $F778 DEFB $2D,$11,$17,$21,$44,$A2,$FF,$03
 $F780 DEFB $FF,$1F,$05,$00,$00,$00,$82,$5E
 $F788 DEFB $07,$A5,$00,$00,$00,$00,$00,$19
 $F790 DEFB $42,$43,$21,$28,$A3,$FF,$01,$FF
 $F798 DEFB $05,$05,$20,$20,$40,$E0,$F9,$82
 $F7A0 DEFB $00,$00,$00,$00,$00,$00,$11,$FF
 $F7A8 DEFB $01,$FF,$30,$10,$10,$60,$60,$E0
 $F7B0 DEFB $80,$80,$00,$00,$00,$00,$00,$00
 $F7B8 DEFB $23,$FF,$01,$46,$05,$03,$00,$10
 $F7C0 DEFB $10,$80,$C3,$10,$00,$00,$00,$00
 $F7C8 DEFB $00,$00,$23,$0B,$ED,$92,$FF,$01
 $F7D0 DEFB $46,$02,$01,$00,$10,$10,$80,$6B
 $F7D8 DEFB $10,$64,$06,$00,$00,$00,$00,$23
 $F7E0 DEFB $0B,$ED,$92,$FF,$02,$FF,$60,$FF
 $F7E8 DEFB $80,$70,$70,$80,$8C,$07,$00,$00
 $F7F0 DEFB $00,$00,$00,$00,$0D,$12,$1E,$84
 $F7F8 DEFB $A7,$0B,$84,$A7,$10,$61,$A7,$0C
 $F800 DEFB $61,$A7,$18,$84,$A7,$FF,$02,$FF
 $F808 DEFB $05,$05,$00,$80,$80,$94,$D7,$16
 $F810 DEFB $00,$00,$00,$00,$00,$00,$10,$1E
 $F818 DEFB $FF,$01,$FF,$65,$65,$00,$00,$00
 $F820 DEFB $80,$7C,$35,$00,$00,$00,$00,$00
 $F828 DEFB $00,$0D,$39,$65,$90,$11,$4F,$92
 $F830 DEFB $FF,$01,$1D,$FF,$FF,$03,$80,$80
 $F838 DEFB $81,$C0,$01,$E0,$06,$00,$00,$00
 $F840 DEFB $00,$0D,$0B,$ED,$92,$26,$58,$A3
 $F848 DEFB $10,$0E,$91,$FF,$01,$1E,$FF,$FF
 $F850 DEFB $00,$00,$00,$A0,$E2,$00,$E8,$02
 $F858 DEFB $00,$00,$00,$00,$0D,$11,$4F,$92
 $F860 DEFB $14,$E0,$8C,$FF,$01,$FF,$FF,$FF
 $F868 DEFB $02,$00,$00,$80,$6A,$11,$27,$03
 $F870 DEFB $00,$00,$00,$00,$16,$10,$0E,$91
 $F878 DEFB $0C,$38,$91,$FF,$01,$24,$FF,$FF
 $F880 DEFB $00,$00,$00,$80,$5B,$11,$BF,$03
 $F888 DEFB $00,$00,$00,$00,$16,$10,$0E,$91
 $F890 DEFB $0C,$38,$91,$11,$4F,$92,$14,$E0
 $F898 DEFB $8C,$0B,$ED,$92,$FF,$01,$21,$05
 $F8A0 DEFB $05,$00,$01,$00,$80,$8B,$32,$00
 $F8A8 DEFB $00,$00,$00,$00,$00,$16,$1B,$B5
 $F8B0 DEFB $92,$FF,$01,$FF,$20,$20,$00,$05
 $F8B8 DEFB $05,$80,$E4,$06,$35,$07,$00,$00
 $F8C0 DEFB $00,$00,$29,$FF,$01,$20,$FF,$FF
 $F8C8 DEFB $00,$00,$00,$A0,$5A,$17,$00,$00
 $F8D0 DEFB $00,$00,$00,$00,$16,$11,$00,$00
 $F8D8 DEFB $FF,$01,$FF,$40,$FF,$00,$00,$00
 $F8E0 DEFB $80,$22,$01,$A2,$07,$00,$00,$00
 $F8E8 DEFB $00,$01,$10,$0E,$91,$0C,$38,$91
 $F8F0 DEFB $11,$4F,$92,$0E,$4F,$92,$14,$E0
 $F8F8 DEFB $8C,$0B,$ED,$92,$36,$5F,$A5,$FF
 $F900 DEFB $01,$FF,$40,$FF,$00,$00,$00,$A0
 $F908 DEFB $B8,$00,$A2,$07,$00,$00,$00,$00
 $F910 DEFB $43,$11,$4F,$92,$0E,$4F,$92,$14
 $F918 DEFB $E0,$8C,$0B,$ED,$92,$36,$5F,$A5
 $F920 DEFB $00,$9E,$A8,$FF,$01,$FF,$90,$90
 $F928 DEFB $00,$A0,$A0,$E0,$F8,$06,$37,$03
 $F930 DEFB $00,$00,$00,$00,$05,$FF,$01,$FF
 $F938 DEFB $90,$90,$00,$A0,$A0,$E0,$F8,$06
 $F940 DEFB $41,$07,$00,$00,$00,$00,$05,$FF
 $F948 DEFB $01,$FF,$05,$05,$00,$01,$00,$80
 $F950 DEFB $1F,$34,$00,$00,$00,$00,$00,$00
 $F958 DEFB $00,$1B,$B5,$92,$FF,$02,$FF,$90
 $F960 DEFB $FF,$00,$00,$00,$80,$F1,$04,$64
 $F968 DEFB $06,$00,$00,$00,$00,$21,$22,$1E
 $F970 DEFB $3B,$8F,$FF,$01,$FF,$FE,$FE,$00
 $F978 DEFB $FF,$FF,$80,$41,$36,$00,$00,$00
 $F980 DEFB $00,$00,$00,$2F,$FF,$01,$FF,$40
 $F988 DEFB $30,$20,$48,$60,$E0,$E2,$02,$6A
 $F990 DEFB $04,$00,$00,$00,$00,$0F,$0F,$71
 $F998 DEFB $91,$00,$48,$A4,$FF,$01,$FF,$40
 $F9A0 DEFB $30,$20,$48,$60,$E0,$E2,$02,$37
 $F9A8 DEFB $03,$00,$00,$00,$00,$3A,$0F,$71
 $F9B0 DEFB $91,$00,$48,$A4,$FF,$01,$FF,$40
 $F9B8 DEFB $30,$20,$48,$60,$E0,$E2,$02,$61
 $F9C0 DEFB $03,$00,$00,$00,$00,$12,$0F,$71
 $F9C8 DEFB $91,$00,$48,$A4,$FF,$01,$FF,$40
 $F9D0 DEFB $30,$20,$48,$60,$E0,$E2,$02,$34
 $F9D8 DEFB $04,$00,$00,$00,$00,$38,$0F,$71
 $F9E0 DEFB $91,$00,$48,$A4,$FF,$01,$FF,$40
 $F9E8 DEFB $30,$20,$48,$60,$E0,$E2,$02,$41
 $F9F0 DEFB $07,$00,$00,$00,$00,$40,$0F,$71
 $F9F8 DEFB $91,$00,$48,$A4,$FF,$01,$FF,$40
 $FA00 DEFB $30,$20,$48,$60,$E0,$E2,$02,$B6
 $FA08 DEFB $01,$00,$00,$00,$00,$10,$0F,$71
 $FA10 DEFB $91,$00,$48,$A4,$FF

; Copy of original locations
@label=CopyOfLocations
b$FA15 DEFB $FF,$FF,$00,$00,$00,$00,$00,$00
 $FA1D DEFB $00,$00,$00,$00,$FF,$84,$A0,$09
 $FA25 DEFB $13,$03,$07,$DA,$03,$75,$B5,$03
 $FA2D DEFB $05,$04,$FF,$84,$FF,$00,$04,$00
 $FA35 DEFB $00,$00,$00,$7E,$B5,$04,$05,$01
 $FA3D DEFB $03,$00,$05,$01,$00,$05,$05,$00
 $FA45 DEFB $06,$FF,$84,$FF,$27,$01,$FD,$06
 $FA4D DEFB $00,$00,$00,$00,$08,$00,$04,$07
 $FA55 DEFB $00,$09,$01,$00,$06,$FF,$84,$FF
 $FA5D DEFB $D4,$04,$FD,$06,$00,$00,$8C,$B5
 $FA65 DEFB $02,$00,$05,$01,$01,$07,$FF,$04
 $FA6D DEFB $FF,$12,$01,$FD,$06,$00,$00,$9A
 $FA75 DEFB $B5,$02,$01,$06,$FF,$84,$FF,$41
 $FA7D DEFB $85,$00,$00,$00,$00,$00,$00,$03
 $FA85 DEFB $00,$0A,$04,$00,$05,$FF,$86,$FF
 $FA8D DEFB $4E,$04,$40,$04,$00,$00,$9F,$B5
 $FA95 DEFB $03,$00,$0B,$01,$00,$44,$04,$00
 $FA9D DEFB $09,$02,$00,$49,$FF,$84,$FF,$E6
 $FAA5 DEFB $14,$64,$04,$00,$00,$AC,$B5,$03
 $FAAD DEFB $00,$0C,$04,$00,$0A,$01,$00,$0E
 $FAB5 DEFB $FF,$86,$FF,$D4,$14,$85,$01,$64
 $FABD DEFB $04,$BE,$B5,$03,$00,$16,$04,$00
 $FAC5 DEFB $0B,$FF,$04,$FF,$12,$11,$BF,$03
 $FACD DEFB $EC,$01,$C5,$B5,$0A,$06,$0F,$02
 $FAD5 DEFB $00,$0B,$FF,$04,$FF,$CD,$04,$8E
 $FADD DEFB $01,$6A,$06,$00,$00,$09,$06,$0E
 $FAE5 DEFB $02,$00,$34,$05,$00,$3A,$FF,$04
 $FAED DEFB $FF,$CD,$04,$8E,$01,$6A,$06,$00
 $FAF5 DEFB $00,$01,$00,$0F,$0A,$00,$35,$09
 $FAFD DEFB $00,$36,$FF,$04,$FF,$CD,$04,$8E
 $FB05 DEFB $01,$6A,$06,$00,$00,$09,$00,$34
 $FB0D DEFB $FF,$04,$FF,$CD,$04,$8E,$01,$6A
 $FB15 DEFB $06,$00,$00,$0A,$00,$34,$07,$00
 $FB1D DEFB $37,$02,$00,$40,$08,$00,$11,$FF
 $FB25 DEFB $04,$FF,$CD,$04,$8E,$01,$6A,$06
 $FB2D DEFB $00,$00,$02,$00,$11,$05,$00,$36
 $FB35 DEFB $08,$00,$3D,$04,$00,$3C,$FF,$04
 $FB3D DEFB $FF,$CD,$04,$8E,$01,$6A,$06,$00
 $FB45 DEFB $00,$08,$00,$3C,$FF,$04,$FF,$CD
 $FB4D DEFB $04,$8E,$01,$6A,$06,$00,$00,$09
 $FB55 DEFB $00,$10,$04,$00,$41,$01,$00,$3A
 $FB5D DEFB $FF,$04,$FF,$CD,$04,$8E,$01,$6A
 $FB65 DEFB $06,$00,$00,$07,$00,$3E,$03,$00
 $FB6D DEFB $0F,$02,$00,$39,$09,$00,$3B,$FF
 $FB75 DEFB $04,$FF,$CD,$04,$8E,$01,$6A,$06
 $FB7D DEFB $00,$00,$0A,$00,$3A,$02,$00,$3C
 $FB85 DEFB $FF,$04,$FF,$CD,$04,$8E,$01,$6A
 $FB8D DEFB $06,$00,$00,$07,$00,$3D,$01,$00
 $FB95 DEFB $3B,$06,$00,$38,$FF,$04,$FF,$CD
 $FB9D DEFB $04,$8E,$01,$6A,$06,$00,$00,$01
 $FBA5 DEFB $00,$36,$06,$00,$3C,$FF,$04,$FF
 $FBAD DEFB $CD,$04,$8E,$01,$6A,$06,$00,$00
 $FBB5 DEFB $03,$00,$3D,$FF,$04,$FF,$CD,$04
 $FBBD DEFB $8E,$01,$6A,$06,$00,$00,$09,$00
 $FBC5 DEFB $40,$01,$00,$12,$03,$00,$3A,$FF
 $FBCD DEFB $04,$FF,$CD,$04,$8E,$01,$6A,$06
 $FBD5 DEFB $00,$00,$06,$00,$41,$04,$00,$36
 $FBDD DEFB $08,$00,$3F,$FF,$04,$FF,$CD,$04
 $FBE5 DEFB $8E,$01,$6A,$06,$00,$00,$01,$00
 $FBED DEFB $40,$07,$00,$39,$03,$00,$13,$FF
 $FBF5 DEFB $04,$FF,$16,$01,$A2,$00,$E8,$02
 $FBFD DEFB $D3,$B5,$0A,$00,$39,$05,$00,$12
 $FC05 DEFB $07,$11,$0D,$FF,$08,$FF,$B7,$03
 $FC0D DEFB $96,$01,$8E,$01,$E4,$B5,$01,$00
 $FC15 DEFB $37,$FF,$04,$FF,$CD,$04,$8E,$01
 $FC1D DEFB $85,$07,$00,$00,$08,$00,$10,$07
 $FC25 DEFB $00,$3F,$01,$1B,$0D,$FF,$02,$FF
 $FC2D DEFB $C4,$82,$7B,$03,$E8,$02,$F3,$B5
 $FC35 DEFB $04,$00,$10,$01,$00,$10,$02,$00
 $FC3D DEFB $10,$09,$0A,$14,$03,$00,$10,$07
 $FC45 DEFB $00,$10,$08,$00,$10,$0A,$00,$10
 $FC4D DEFB $05,$00,$41,$06,$00,$10,$FF,$80
 $FC55 DEFB $FF,$C4,$82,$C2,$04,$E8,$02,$F3
 $FC5D DEFB $B5,$0A,$0A,$13,$03,$00,$15,$FF
 $FC65 DEFB $04,$FF,$EF,$01,$E8,$02,$00,$00
 $FC6D DEFB $00,$00,$01,$11,$10,$04,$1B,$12
 $FC75 DEFB $FF,$84,$FF,$B8,$04,$F0,$06,$00
 $FC7D DEFB $00,$00,$00,$03,$00,$16,$04,$00
 $FC85 DEFB $14,$FF,$84,$FF,$69,$83,$93,$00
 $FC8D DEFB $00,$00,$00,$00,$05,$00,$18,$06
 $FC95 DEFB $00,$14,$02,$00,$2E,$08,$00,$0C
 $FC9D DEFB $01,$00,$31,$FF,$88,$FF,$C4,$02
 $FCA5 DEFB $A0,$02,$00,$00,$F8,$B5,$04,$00
 $FCAD DEFB $16,$02,$00,$2E,$03,$00,$19,$FF
 $FCB5 DEFB $84,$FF,$E6,$04,$99,$00,$D8,$02
 $FCBD DEFB $00,$00,$04,$00,$18,$03,$00,$42
 $FCC5 DEFB $02,$09,$00,$FF,$84,$FF,$E6,$04
 $FCCD DEFB $23,$06,$BA,$06,$0F,$B6,$03,$07
 $FCD5 DEFB $1D,$04,$07,$32,$01,$07,$1C,$02
 $FCDD DEFB $07,$1B,$FF,$84,$FF,$A0,$02,$F3
 $FCE5 DEFB $05,$00,$00,$19,$B6,$01,$07,$1A
 $FCED DEFB $04,$07,$32,$FF,$84,$FF,$27,$11
 $FCF5 DEFB $CC,$03,$22,$02,$24,$B6,$04,$00
 $FCFD DEFB $19,$03,$07,$1A,$05,$0D,$1E,$FF
 $FD05 DEFB $84,$FF,$BC,$00,$96,$01,$00,$00
 $FD0D DEFB $00,$00,$04,$07,$1A,$FF,$04,$FF
 $FD15 DEFB $0D,$03,$13,$02,$FF,$02,$00,$00
 $FD1D DEFB $03,$08,$1F,$02,$00,$20,$04,$0D
 $FD25 DEFB $1C,$FF,$04,$FF,$EF,$11,$8E,$01
 $FD2D DEFB $00,$00,$32,$B6,$08,$08,$20,$04
 $FD35 DEFB $08,$1E,$FF,$04,$FF,$1C,$01,$13
 $FD3D DEFB $02,$00,$00,$3D,$B6,$05,$08,$1F
 $FD45 DEFB $01,$00,$1E,$0A,$0C,$21,$FF,$88
 $FD4D DEFB $FF,$A6,$82,$00,$00,$00,$00,$00
 $FD55 DEFB $00,$03,$27,$22,$09,$0C,$00,$02
 $FD5D DEFB $2A,$00,$FF,$88,$FF,$B7,$83,$0F
 $FD65 DEFB $04,$00,$00,$00,$00,$01,$00,$24
 $FD6D DEFB $03,$00,$23,$06,$27,$21,$02,$00
 $FD75 DEFB $2D,$FF,$84,$FF,$DC,$86,$B7,$03
 $FD7D DEFB $00,$00,$4F,$B6,$01,$00,$22,$02
 $FD85 DEFB $00,$22,$03,$00,$22,$04,$00,$22
 $FD8D DEFB $FF,$86,$FF,$4A,$85,$70,$05,$00
 $FD95 DEFB $00,$5D,$B6,$09,$00,$25,$02,$00
 $FD9D DEFB $22,$FF,$84,$FF,$9F,$01,$CE,$01
 $FDA5 DEFB $00,$00,$71,$B6,$01,$00,$26,$0A
 $FDAD DEFB $00,$24,$FF,$84,$FF,$2F,$87,$81
 $FDB5 DEFB $01,$00,$00,$80,$B6,$01,$00,$27
 $FDBD DEFB $02,$00,$25,$06,$00,$28,$FF,$88
 $FDC5 DEFB $FF,$C4,$02,$40,$09,$00,$00,$8A
 $FDCD DEFB $B6,$01,$00,$29,$02,$00,$26,$04
 $FDD5 DEFB $00,$28,$FF,$86,$FF,$21,$85,$00
 $FDDD DEFB $00,$00,$00,$95,$B6,$01,$00,$2A
 $FDE5 DEFB $07,$00,$25,$03,$00,$27,$FF,$84
 $FDED DEFB $FF,$0D,$83,$1A,$04,$00,$00,$9D
 $FDF5 DEFB $B6,$02,$00,$27,$03,$00,$2B,$09
 $FDFD DEFB $00,$2C,$FF,$84,$FF,$AA,$05,$00
 $FE05 DEFB $00,$00,$00,$A7,$B6,$02,$00,$28
 $FE0D DEFB $03,$0B,$2B,$01,$00,$33,$FF,$04
 $FE15 DEFB $B0,$CD,$14,$ED,$05,$46,$06,$BE
 $FE1D DEFB $B6,$04,$0B,$2A,$03,$00,$29,$FF
 $FE25 DEFB $86,$FF,$4E,$84,$09,$04,$00,$00
 $FE2D DEFB $C5,$B6,$0A,$00,$29,$04,$00,$2A
 $FE35 DEFB $02,$00,$27,$08,$00,$28,$FF,$86
 $FE3D DEFB $FF,$4F,$05,$A0,$02,$00,$00,$00
 $FE45 DEFB $00,$03,$00,$02,$01,$00,$18,$FF
 $FE4D DEFB $88,$FF,$63,$07,$00,$00,$00,$00
 $FE55 DEFB $00,$00,$02,$00,$08,$04,$00,$03
 $FE5D DEFB $FF,$86,$FF,$4F,$05,$A0,$02,$00
 $FE65 DEFB $00,$00,$00,$03,$00,$03,$04,$00
 $FE6D DEFB $2E,$FF,$84,$FF,$A0,$02,$00,$00
 $FE75 DEFB $00,$00,$00,$00,$04,$00,$02,$03
 $FE7D DEFB $00,$2D,$FF,$88,$FF,$4A,$05,$70
 $FE85 DEFB $05,$00,$00,$00,$00,$01,$00,$2D
 $FE8D DEFB $04,$00,$03,$FF,$88,$FF,$A6,$82
 $FE95 DEFB $00,$00,$00,$00,$00,$00,$07,$2A
 $FE9D DEFB $21,$01,$00,$30,$FF,$86,$FF,$56
 $FEA5 DEFB $04,$00,$00,$00,$00,$00,$00,$08
 $FEAD DEFB $00,$31,$03,$00,$2F,$07,$00,$17
 $FEB5 DEFB $FF,$88,$FF,$4A,$05,$FF,$02,$00
 $FEBD DEFB $00,$00,$00,$05,$00,$30,$02,$00
 $FEC5 DEFB $16,$03,$00,$18,$08,$00,$0A,$FF
 $FECD DEFB $84,$FE,$E6,$04,$28,$02,$00,$00
 $FED5 DEFB $00,$00,$FF,$84,$FF,$A0,$02,$04
 $FEDD DEFB $03,$00,$00,$00,$00,$05,$07,$1A
 $FEE5 DEFB $04,$00,$43,$FF,$84,$FF,$E6,$04
 $FEED DEFB $28,$02,$00,$00,$00,$00,$01,$00
 $FEF5 DEFB $2F,$02,$00,$2A,$09,$00,$2C,$FF
 $FEFD DEFB $86,$FF,$1E,$08,$79,$07,$00,$00
 $FF05 DEFB $CA,$B6,$04,$00,$19,$03,$09,$43
 $FF0D DEFB $FF,$86,$FF,$1E,$08,$FE,$01,$00
 $FF15 DEFB $00,$CF,$B6,$03,$00,$32,$04,$09
 $FF1D DEFB $42,$FF,$86,$FF,$D4,$14,$64,$04
 $FF25 DEFB $00,$00,$00,$00,$03,$00,$47,$05
 $FF2D DEFB $00,$45,$02,$00,$0A,$FF,$86,$FF
 $FF35 DEFB $D4,$14,$64,$04,$00,$00,$00,$00
 $FF3D DEFB $01,$00,$46,$08,$00,$44,$02,$00
 $FF45 DEFB $0A,$FF,$86,$FF,$D4,$14,$64,$04
 $FF4D DEFB $00,$00,$00,$00,$07,$00,$48,$02
 $FF55 DEFB $00,$45,$FF,$86,$FF,$D4,$14,$64
 $FF5D DEFB $04,$00,$00,$00,$00,$06,$00,$45
 $FF65 DEFB $02,$00,$4A,$04,$00,$44,$FF,$86
 $FF6D DEFB $FF,$D4,$14,$64,$04,$00,$00,$00
 $FF75 DEFB $00,$06,$00,$46,$08,$00,$47,$0A
 $FF7D DEFB $00,$4B,$FF,$86,$FF,$D4,$14,$64
 $FF85 DEFB $04,$00,$00,$00,$00,$03,$00,$4A
 $FF8D DEFB $01,$00,$0A,$FF,$86,$FF,$D4,$14
 $FF95 DEFB $64,$04,$00,$00,$00,$00,$01,$00
 $FF9D DEFB $47,$04,$00,$49,$FF,$86,$FF,$D4
 $FFA5 DEFB $14,$3C,$06,$00,$00,$00,$00,$0A
 $FFAD DEFB $00,$4C,$FF,$86,$FF,$D4,$14,$3C
 $FFB5 DEFB $06,$00,$00,$00,$00,$0A,$00,$4D
 $FFBD DEFB $FF,$86,$FF,$D4,$14,$3C,$06,$00
 $FFC5 DEFB $00,$00,$00,$0A,$00,$4E,$FF,$84
 $FFCD DEFB $FF,$2F,$17,$96,$01,$40,$04,$00
 $FFD5 DEFB $00,$03,$00,$4F,$09,$00,$4D,$FF
 $FFDD DEFB $84,$FF,$2F,$17,$96,$01,$40,$04
 $FFE5 DEFB $00,$00,$04,$00,$4E,$09,$00,$4A
 $FFED DEFB $FF,$00,$00,$00,$00,$00,$00,$00
 $FFF5 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FFFD DEFB $00,$00,$00
